{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('./core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _passwordless = require('./engine/passwordless');\n\nvar _passwordless2 = _interopRequireDefault(_passwordless);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Auth0LockPasswordless = function (_Core) {\n  _inherits(Auth0LockPasswordless, _Core);\n\n  function Auth0LockPasswordless(clientID, domain, options) {\n    _classCallCheck(this, Auth0LockPasswordless);\n\n    var _this = _possibleConstructorReturn(this, _Core.call(this, clientID, domain, options, _passwordless2.default));\n\n    (0, _core.injectStyles)();\n    return _this;\n  }\n\n  return Auth0LockPasswordless;\n}(_core2.default);\n\nexports.default = Auth0LockPasswordless;\nAuth0LockPasswordless.version = '11.15.0';","map":null,"metadata":{},"sourceType":"script"}