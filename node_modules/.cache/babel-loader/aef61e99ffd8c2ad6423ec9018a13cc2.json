{"ast":null,"code":"import _classCallCheck from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { EventEmitter } from 'events';\nimport Auth0Lock from 'auth0-lock';\nimport history from './history';\nimport { Auth0Config } from '../../settings';\nimport { notification } from '../../components';\n\nvar Auth0Helper =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Auth0Helper, _EventEmitter);\n\n  function Auth0Helper() {\n    var _this;\n\n    _classCallCheck(this, Auth0Helper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Auth0Helper).call(this));\n    _this.isValid = Auth0Config.clientID && Auth0Config.domain;\n    _this.lock = _this.isValid ? new Auth0Lock(Auth0Config.clientID, Auth0Config.domain, Auth0Config.options) : null;\n    _this.login = _this.login.bind(_assertThisInitialized(_this));\n    _this.logout = _this.logout.bind(_assertThisInitialized(_this));\n    _this.handleAuthentication = _this.handleAuthentication.bind(_assertThisInitialized(_this));\n    _this.isAuthenticated = _this.isAuthenticated.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Auth0Helper, [{\n    key: \"login\",\n    value: function login() {\n      if (!this.lock) {\n        return;\n      }\n\n      this.lock.show();\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication(props) {\n      // Add callback Lock's `authenticated` event\n      this.lock.on('authenticated', this.setSession.bind(this)); // Add callback for Lock's `authorization_error` event\n\n      this.lock.on('authorization_error', function (error) {\n        return notification('error', 'Wrong mail or password');\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      // Set the time that the access token will expire at\n      var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem('access_token', authResult.accessToken);\n      localStorage.setItem('id_token', authResult.idToken);\n      localStorage.setItem('expires_at', expiresAt); // navigate to the dashboard route\n\n      history.replace('/dashboard');\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      // Clear access token and ID token from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at'); // navigate to the home route\n\n      history.replace('/');\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      // Check whether the current time is past the\n      // access token's expiry time\n      return new Date().getTime() < JSON.parse(localStorage.getItem('expires_at'));\n    }\n  }]);\n\n  return Auth0Helper;\n}(EventEmitter);\n\nexport default new Auth0Helper();","map":{"version":3,"sources":["/home/leonardo_freitas/Desktop/Programação/MetasCertas/src/helpers/auth0/index.js"],"names":["EventEmitter","Auth0Lock","history","Auth0Config","notification","Auth0Helper","isValid","clientID","domain","lock","options","login","bind","logout","handleAuthentication","isAuthenticated","show","props","on","setSession","error","authResult","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","accessToken","idToken","replace","removeItem","parse","getItem"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,QAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;;IAEMC,W;;;;;AASJ,yBAAc;AAAA;;AAAA;;AACZ;AADY,UARdC,OAQc,GARJH,WAAW,CAACI,QAAZ,IAAwBJ,WAAW,CAACK,MAQhC;AAAA,UAPdC,IAOc,GAPP,MAAKH,OAAL,GACH,IAAIL,SAAJ,CACEE,WAAW,CAACI,QADd,EAEEJ,WAAW,CAACK,MAFd,EAGEL,WAAW,CAACO,OAHd,CADG,GAMH,IACU;AAEZ,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,+BAAb;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,+BAAd;AACA,UAAKE,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BF,IAA1B,+BAA5B;AACA,UAAKG,eAAL,GAAuB,MAAKA,eAAL,CAAqBH,IAArB,+BAAvB;AALY;AAMb;;;;4BACO;AACN,UAAI,CAAC,KAAKH,IAAV,EAAgB;AACd;AACD;;AACD,WAAKA,IAAL,CAAUO,IAAV;AACD;;;yCACoBC,K,EAAO;AAC1B;AACA,WAAKR,IAAL,CAAUS,EAAV,CAAa,eAAb,EAA8B,KAAKC,UAAL,CAAgBP,IAAhB,CAAqB,IAArB,CAA9B,EAF0B,CAG1B;;AACA,WAAKH,IAAL,CAAUS,EAAV,CAAa,qBAAb,EAAoC,UAAAE,KAAK;AAAA,eACvChB,YAAY,CAAC,OAAD,EAAU,wBAAV,CAD2B;AAAA,OAAzC;AAGD;;;+BACUiB,U,EAAY;AACrB;AACA,UAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CACdH,UAAU,CAACI,SAAX,GAAuB,IAAvB,GAA8B,IAAIC,IAAJ,GAAWC,OAAX,EADhB,CAAhB;AAGAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCR,UAAU,CAACS,WAAhD;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCR,UAAU,CAACU,OAA5C;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCP,SAAnC,EAPqB,CAQrB;;AACApB,MAAAA,OAAO,CAAC8B,OAAR,CAAgB,YAAhB;AACD;;;6BAEQ;AACP;AACAJ,MAAAA,YAAY,CAACK,UAAb,CAAwB,cAAxB;AACAL,MAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACAL,MAAAA,YAAY,CAACK,UAAb,CAAwB,YAAxB,EAJO,CAKP;;AACA/B,MAAAA,OAAO,CAAC8B,OAAR,CAAgB,GAAhB;AACD;;;sCAEiB;AAChB;AACA;AACA,aACE,IAAIN,IAAJ,GAAWC,OAAX,KAAuBJ,IAAI,CAACW,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,YAArB,CAAX,CADzB;AAGD;;;;EAzDuBnC,Y;;AA2D1B,eAAe,IAAIK,WAAJ,EAAf","sourcesContent":["import { EventEmitter } from 'events';\nimport Auth0Lock from 'auth0-lock';\nimport history from './history';\nimport { Auth0Config } from '../../settings';\nimport { notification } from '../../components';\n\nclass Auth0Helper extends EventEmitter {\n  isValid = Auth0Config.clientID && Auth0Config.domain;\n  lock = this.isValid\n    ? new Auth0Lock(\n        Auth0Config.clientID,\n        Auth0Config.domain,\n        Auth0Config.options\n      )\n    : null;\n  constructor() {\n    super();\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n  login() {\n    if (!this.lock) {\n      return;\n    }\n    this.lock.show();\n  }\n  handleAuthentication(props) {\n    // Add callback Lock's `authenticated` event\n    this.lock.on('authenticated', this.setSession.bind(this));\n    // Add callback for Lock's `authorization_error` event\n    this.lock.on('authorization_error', error =>\n      notification('error', 'Wrong mail or password')\n    );\n  }\n  setSession(authResult) {\n    // Set the time that the access token will expire at\n    let expiresAt = JSON.stringify(\n      authResult.expiresIn * 1000 + new Date().getTime()\n    );\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n    // navigate to the dashboard route\n    history.replace('/dashboard');\n  }\n\n  logout() {\n    // Clear access token and ID token from local storage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // navigate to the home route\n    history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    return (\n      new Date().getTime() < JSON.parse(localStorage.getItem('expires_at'))\n    );\n  }\n}\nexport default new Auth0Helper();\n"]},"metadata":{},"sourceType":"module"}