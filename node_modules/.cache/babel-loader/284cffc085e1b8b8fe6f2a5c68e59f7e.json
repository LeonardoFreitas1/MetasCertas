{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withStylesPropTypes = exports.css = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.withStyles = withStyles;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _hoistNonReactStatics = require('hoist-non-react-statics');\n\nvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\nvar _deepmerge = require('deepmerge');\n\nvar _deepmerge2 = _interopRequireDefault(_deepmerge);\n\nvar _constants = require('react-with-direction/dist/constants');\n\nvar _brcast = require('react-with-direction/dist/proptypes/brcast');\n\nvar _brcast2 = _interopRequireDefault(_brcast);\n\nvar _ThemedStyleSheet = require('./ThemedStyleSheet');\n\nvar _ThemedStyleSheet2 = _interopRequireDefault(_ThemedStyleSheet);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // Add some named exports to assist in upgrading and for convenience\n\n\nvar css = exports.css = _ThemedStyleSheet2['default'].resolveLTR;\nvar withStylesPropTypes = exports.withStylesPropTypes = {\n  styles: _propTypes2['default'].object.isRequired,\n  // eslint-disable-line react/forbid-prop-types\n  theme: _propTypes2['default'].object.isRequired,\n  // eslint-disable-line react/forbid-prop-types\n  css: _propTypes2['default'].func.isRequired\n};\nvar EMPTY_STYLES = {};\n\nvar EMPTY_STYLES_FN = function EMPTY_STYLES_FN() {\n  return EMPTY_STYLES;\n};\n\nfunction baseClass(pureComponent) {\n  if (pureComponent) {\n    if (!_react2['default'].PureComponent) {\n      throw new ReferenceError('withStyles() pureComponent option requires React 15.3.0 or later');\n    }\n\n    return _react2['default'].PureComponent;\n  }\n\n  return _react2['default'].Component;\n}\n\nvar contextTypes = _defineProperty({}, _constants.CHANNEL, _brcast2['default']);\n\nvar defaultDirection = _constants.DIRECTIONS.LTR;\n\nfunction withStyles(styleFn) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$stylesPropName = _ref.stylesPropName,\n      stylesPropName = _ref$stylesPropName === undefined ? 'styles' : _ref$stylesPropName,\n      _ref$themePropName = _ref.themePropName,\n      themePropName = _ref$themePropName === undefined ? 'theme' : _ref$themePropName,\n      _ref$cssPropName = _ref.cssPropName,\n      cssPropName = _ref$cssPropName === undefined ? 'css' : _ref$cssPropName,\n      _ref$flushBefore = _ref.flushBefore,\n      flushBefore = _ref$flushBefore === undefined ? false : _ref$flushBefore,\n      _ref$pureComponent = _ref.pureComponent,\n      pureComponent = _ref$pureComponent === undefined ? false : _ref$pureComponent;\n\n  var styleDefLTR = void 0;\n  var styleDefRTL = void 0;\n  var currentThemeLTR = void 0;\n  var currentThemeRTL = void 0;\n  var BaseClass = baseClass(pureComponent);\n\n  function getResolveMethod(direction) {\n    return direction === _constants.DIRECTIONS.LTR ? _ThemedStyleSheet2['default'].resolveLTR : _ThemedStyleSheet2['default'].resolveRTL;\n  }\n\n  function getCurrentTheme(direction) {\n    return direction === _constants.DIRECTIONS.LTR ? currentThemeLTR : currentThemeRTL;\n  }\n\n  function getStyleDef(direction, wrappedComponentName) {\n    var currentTheme = getCurrentTheme(direction);\n    var styleDef = direction === _constants.DIRECTIONS.LTR ? styleDefLTR : styleDefRTL;\n\n    var registeredTheme = _ThemedStyleSheet2['default'].get(); // Return the existing styles if they've already been defined\n    // and if the theme used to create them corresponds to the theme\n    // registered with ThemedStyleSheet\n\n\n    if (styleDef && currentTheme === registeredTheme) {\n      return styleDef;\n    }\n\n    if (process.env.NODE_ENV !== 'production' && typeof performance !== 'undefined' && performance.mark !== undefined) {\n      performance.mark('react-with-styles.createStyles.start');\n    }\n\n    var isRTL = direction === _constants.DIRECTIONS.RTL;\n\n    if (isRTL) {\n      styleDefRTL = styleFn ? _ThemedStyleSheet2['default'].createRTL(styleFn) : EMPTY_STYLES_FN;\n      currentThemeRTL = registeredTheme;\n      styleDef = styleDefRTL;\n    } else {\n      styleDefLTR = styleFn ? _ThemedStyleSheet2['default'].createLTR(styleFn) : EMPTY_STYLES_FN;\n      currentThemeLTR = registeredTheme;\n      styleDef = styleDefLTR;\n    }\n\n    if (process.env.NODE_ENV !== 'production' && typeof performance !== 'undefined' && performance.mark !== undefined) {\n      performance.mark('react-with-styles.createStyles.end');\n      performance.measure(\"\\uD83D\\uDC69\\u200D\\uD83C\\uDFA8 withStyles(\" + String(wrappedComponentName) + ') [create styles]', 'react-with-styles.createStyles.start', 'react-with-styles.createStyles.end');\n    }\n\n    return styleDef;\n  }\n\n  function getState(direction, wrappedComponentName) {\n    return {\n      resolveMethod: getResolveMethod(direction),\n      styleDef: getStyleDef(direction, wrappedComponentName)\n    };\n  }\n\n  return function () {\n    function withStylesHOC(WrappedComponent) {\n      var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component'; // NOTE: Use a class here so components are ref-able if need be:\n      // eslint-disable-next-line react/prefer-stateless-function\n\n      var WithStyles = function (_BaseClass) {\n        _inherits(WithStyles, _BaseClass);\n\n        function WithStyles(props, context) {\n          _classCallCheck(this, WithStyles);\n\n          var _this = _possibleConstructorReturn(this, (WithStyles.__proto__ || Object.getPrototypeOf(WithStyles)).call(this, props, context));\n\n          var direction = _this.context[_constants.CHANNEL] ? _this.context[_constants.CHANNEL].getState() : defaultDirection;\n          _this.state = getState(direction, wrappedComponentName);\n          return _this;\n        }\n\n        _createClass(WithStyles, [{\n          key: 'componentDidMount',\n          value: function () {\n            function componentDidMount() {\n              var _this2 = this;\n\n              if (this.context[_constants.CHANNEL]) {\n                // subscribe to future direction changes\n                this.channelUnsubscribe = this.context[_constants.CHANNEL].subscribe(function (direction) {\n                  _this2.setState(getState(direction, wrappedComponentName));\n                });\n              }\n            }\n\n            return componentDidMount;\n          }()\n        }, {\n          key: 'componentWillUnmount',\n          value: function () {\n            function componentWillUnmount() {\n              if (this.channelUnsubscribe) {\n                this.channelUnsubscribe();\n              }\n            }\n\n            return componentWillUnmount;\n          }()\n        }, {\n          key: 'render',\n          value: function () {\n            function render() {\n              var _ref2; // As some components will depend on previous styles in\n              // the component tree, we provide the option of flushing the\n              // buffered styles (i.e. to a style tag) **before** the rendering\n              // cycle begins.\n              //\n              // The interfaces provide the optional \"flush\" method which\n              // is run in turn by ThemedStyleSheet.flush.\n\n\n              if (flushBefore) {\n                _ThemedStyleSheet2['default'].flush();\n              }\n\n              var _state = this.state,\n                  resolveMethod = _state.resolveMethod,\n                  styleDef = _state.styleDef;\n              return _react2['default'].createElement(WrappedComponent, _extends({}, this.props, (_ref2 = {}, _defineProperty(_ref2, themePropName, _ThemedStyleSheet2['default'].get()), _defineProperty(_ref2, stylesPropName, styleDef()), _defineProperty(_ref2, cssPropName, resolveMethod), _ref2)));\n            }\n\n            return render;\n          }()\n        }]);\n\n        return WithStyles;\n      }(BaseClass);\n\n      WithStyles.WrappedComponent = WrappedComponent;\n      WithStyles.displayName = 'withStyles(' + String(wrappedComponentName) + ')';\n      WithStyles.contextTypes = contextTypes;\n\n      if (WrappedComponent.propTypes) {\n        WithStyles.propTypes = (0, _deepmerge2['default'])({}, WrappedComponent.propTypes);\n        delete WithStyles.propTypes[stylesPropName];\n        delete WithStyles.propTypes[themePropName];\n        delete WithStyles.propTypes[cssPropName];\n      }\n\n      if (WrappedComponent.defaultProps) {\n        WithStyles.defaultProps = (0, _deepmerge2['default'])({}, WrappedComponent.defaultProps);\n      }\n\n      return (0, _hoistNonReactStatics2['default'])(WithStyles, WrappedComponent);\n    }\n\n    return withStylesHOC;\n  }();\n}","map":null,"metadata":{},"sourceType":"script"}