{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.requestPasswordlessEmail = requestPasswordlessEmail;\nexports.requestPasswordlessEmailSuccess = requestPasswordlessEmailSuccess;\nexports.requestPasswordlessEmailError = requestPasswordlessEmailError;\nexports.resendEmail = resendEmail;\nexports.sendSMS = sendSMS;\nexports.logIn = logIn;\nexports.restart = restart;\nexports.toggleTermsAcceptance = toggleTermsAcceptance;\n\nvar _immutable = require('immutable');\n\nvar _index = require('../../store/index');\n\nvar _actions = require('../../core/actions');\n\nvar _web_api = require('../../core/web_api');\n\nvar _web_api2 = _interopRequireDefault(_web_api);\n\nvar _index2 = require('../../field/index');\n\nvar c = _interopRequireWildcard(_index2);\n\nvar _index3 = require('../../core/index');\n\nvar l = _interopRequireWildcard(_index3);\n\nvar _index4 = require('./index');\n\nvar _phone_number = require('../../field/phone_number');\n\nvar _i18n = require('../../i18n');\n\nvar i18n = _interopRequireWildcard(_i18n);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getErrorMessage(m, error) {\n  var key = error.error;\n\n  if (error.error === 'sms_provider_error' && (error.description || '').indexOf('(Code: 21211)') > -1) {\n    key = 'bad.phone_number';\n  }\n\n  return i18n.html(m, ['error', 'passwordless', key]) || i18n.html(m, ['error', 'passwordless', 'lock.fallback']);\n}\n\nfunction requestPasswordlessEmail(id) {\n  (0, _actions.validateAndSubmit)(id, ['email'], function (m) {\n    sendEmail(m, requestPasswordlessEmailSuccess, requestPasswordlessEmailError);\n  });\n}\n\nfunction requestPasswordlessEmailSuccess(id) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, function (m) {\n    m = l.setSubmitting(m, false);\n    return (0, _index4.setPasswordlessStarted)(m, true);\n  });\n}\n\nfunction requestPasswordlessEmailError(id, error) {\n  var m = (0, _index.read)(_index.getEntity, 'lock', id);\n  var errorMessage = getErrorMessage(m, error);\n  return (0, _index.swap)(_index.updateEntity, 'lock', id, l.setSubmitting, false, errorMessage);\n}\n\nfunction resendEmail(id) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, _index4.resend);\n  var m = (0, _index.read)(_index.getEntity, 'lock', id);\n  sendEmail(m, resendEmailSuccess, resendEmailError);\n}\n\nfunction resendEmailSuccess(id) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, _index4.setResendSuccess);\n}\n\nfunction resendEmailError(id, error) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, _index4.setResendFailed);\n}\n\nfunction sendEmail(m, successFn, errorFn) {\n  var params = {\n    connection: 'email',\n    email: c.getFieldValue(m, 'email'),\n    send: (0, _index4.send)(m)\n  };\n\n  if ((0, _index4.isSendLink)(m) && !l.auth.params(m).isEmpty()) {\n    params.authParams = l.auth.params(m).toJS();\n  }\n\n  _web_api2.default.startPasswordless(l.id(m), params, function (error) {\n    if (error) {\n      setTimeout(function () {\n        return errorFn(l.id(m), error);\n      }, 250);\n    } else {\n      successFn(l.id(m));\n    }\n  });\n}\n\nfunction sendSMS(id) {\n  (0, _actions.validateAndSubmit)(id, ['phoneNumber'], function (m) {\n    var params = {\n      connection: 'sms',\n      phoneNumber: (0, _phone_number.phoneNumberWithDiallingCode)(m),\n      send: (0, _index4.send)(m)\n    };\n\n    _web_api2.default.startPasswordless(id, params, function (error) {\n      if (error) {\n        setTimeout(function () {\n          return sendSMSError(id, error);\n        }, 250);\n      } else {\n        sendSMSSuccess(id);\n      }\n    });\n  });\n}\n\nfunction sendSMSSuccess(id) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, function (m) {\n    m = l.setSubmitting(m, false);\n    m = (0, _index4.setPasswordlessStarted)(m, true);\n    return m;\n  });\n}\n\nfunction sendSMSError(id, error) {\n  var m = (0, _index.read)(_index.getEntity, 'lock', id);\n  var errorMessage = getErrorMessage(m, error);\n  return (0, _index.swap)(_index.updateEntity, 'lock', id, l.setSubmitting, false, errorMessage);\n}\n\nfunction logIn(id) {\n  var m = (0, _index.read)(_index.getEntity, 'lock', id);\n  var authParams = l.auth.params(m).toJS();\n\n  var params = _extends({\n    verificationCode: c.getFieldValue(m, 'vcode')\n  }, authParams);\n\n  if ((0, _index4.isEmail)(m)) {\n    params.connection = 'email';\n    params.email = c.getFieldValue(m, 'email');\n  } else {\n    params.connection = 'sms';\n    params.phoneNumber = (0, _phone_number.phoneNumberWithDiallingCode)(m);\n  }\n\n  (0, _index.swap)(_index.updateEntity, 'lock', id, l.setSubmitting, true);\n\n  _web_api2.default.passwordlessVerify(id, params, function (error, result) {\n    var errorMessage = void 0;\n\n    if (error) {\n      var _m = (0, _index.read)(_index.getEntity, 'lock', id);\n\n      errorMessage = getErrorMessage(_m, error);\n\n      if (error.logToConsole) {\n        console.error(error.description);\n      }\n\n      return (0, _index.swap)(_index.updateEntity, 'lock', id, l.setSubmitting, false, errorMessage);\n    } else {\n      return (0, _actions.logInSuccess)(id, result);\n    }\n  });\n}\n\nfunction restart(id) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, _index4.restartPasswordless);\n}\n\nfunction toggleTermsAcceptance(id) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, _index4.toggleTermsAcceptance);\n}","map":null,"metadata":{},"sourceType":"script"}