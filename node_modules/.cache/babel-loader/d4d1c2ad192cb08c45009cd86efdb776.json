{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _reactAddonsShallowCompare = _interopRequireDefault(require(\"react-addons-shallow-compare\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _reactMomentProptypes = _interopRequireDefault(require(\"react-moment-proptypes\"));\n\nvar _airbnbPropTypes = require(\"airbnb-prop-types\");\n\nvar _OpenDirectionShape = _interopRequireDefault(require(\"../shapes/OpenDirectionShape\"));\n\nvar _defaultPhrases = require(\"../defaultPhrases\");\n\nvar _getPhrasePropTypes = _interopRequireDefault(require(\"../utils/getPhrasePropTypes\"));\n\nvar _SingleDatePickerInput = _interopRequireDefault(require(\"./SingleDatePickerInput\"));\n\nvar _IconPositionShape = _interopRequireDefault(require(\"../shapes/IconPositionShape\"));\n\nvar _DisabledShape = _interopRequireDefault(require(\"../shapes/DisabledShape\"));\n\nvar _toMomentObject = _interopRequireDefault(require(\"../utils/toMomentObject\"));\n\nvar _toLocalizedDateString = _interopRequireDefault(require(\"../utils/toLocalizedDateString\"));\n\nvar _isInclusivelyAfterDay = _interopRequireDefault(require(\"../utils/isInclusivelyAfterDay\"));\n\nvar _constants = require(\"../constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function () {\n    function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    }\n\n    return _getPrototypeOf;\n  }();\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function () {\n    function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    }\n\n    return _setPrototypeOf;\n  }();\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? (0, _airbnbPropTypes.forbidExtraProps)({\n  children: _propTypes[\"default\"].node,\n  date: _reactMomentProptypes[\"default\"].momentObj,\n  onDateChange: _propTypes[\"default\"].func.isRequired,\n  focused: _propTypes[\"default\"].bool,\n  onFocusChange: _propTypes[\"default\"].func.isRequired,\n  id: _propTypes[\"default\"].string.isRequired,\n  placeholder: _propTypes[\"default\"].string,\n  // also used as label\n  screenReaderMessage: _propTypes[\"default\"].string,\n  showClearDate: _propTypes[\"default\"].bool,\n  showCaret: _propTypes[\"default\"].bool,\n  showDefaultInputIcon: _propTypes[\"default\"].bool,\n  inputIconPosition: _IconPositionShape[\"default\"],\n  disabled: _DisabledShape[\"default\"],\n  required: _propTypes[\"default\"].bool,\n  readOnly: _propTypes[\"default\"].bool,\n  openDirection: _OpenDirectionShape[\"default\"],\n  noBorder: _propTypes[\"default\"].bool,\n  block: _propTypes[\"default\"].bool,\n  small: _propTypes[\"default\"].bool,\n  regular: _propTypes[\"default\"].bool,\n  verticalSpacing: _airbnbPropTypes.nonNegativeInteger,\n  keepOpenOnDateSelect: _propTypes[\"default\"].bool,\n  reopenPickerOnClearDate: _propTypes[\"default\"].bool,\n  isOutsideRange: _propTypes[\"default\"].func,\n  displayFormat: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].func]),\n  onClose: _propTypes[\"default\"].func,\n  onKeyDownArrowDown: _propTypes[\"default\"].func,\n  onKeyDownQuestionMark: _propTypes[\"default\"].func,\n  customInputIcon: _propTypes[\"default\"].node,\n  customCloseIcon: _propTypes[\"default\"].node,\n  // accessibility\n  isFocused: _propTypes[\"default\"].bool,\n  // i18n\n  phrases: _propTypes[\"default\"].shape((0, _getPhrasePropTypes[\"default\"])(_defaultPhrases.SingleDatePickerInputPhrases)),\n  isRTL: _propTypes[\"default\"].bool\n}) : {};\nvar defaultProps = {\n  children: null,\n  date: null,\n  focused: false,\n  placeholder: '',\n  screenReaderMessage: 'Date',\n  showClearDate: false,\n  showCaret: false,\n  showDefaultInputIcon: false,\n  inputIconPosition: _constants.ICON_BEFORE_POSITION,\n  disabled: false,\n  required: false,\n  readOnly: false,\n  openDirection: _constants.OPEN_DOWN,\n  noBorder: false,\n  block: false,\n  small: false,\n  regular: false,\n  verticalSpacing: undefined,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDate: false,\n  isOutsideRange: function () {\n    function isOutsideRange(day) {\n      return !(0, _isInclusivelyAfterDay[\"default\"])(day, (0, _moment[\"default\"])());\n    }\n\n    return isOutsideRange;\n  }(),\n  displayFormat: function () {\n    function displayFormat() {\n      return _moment[\"default\"].localeData().longDateFormat('L');\n    }\n\n    return displayFormat;\n  }(),\n  onClose: function () {\n    function onClose() {}\n\n    return onClose;\n  }(),\n  onKeyDownArrowDown: function () {\n    function onKeyDownArrowDown() {}\n\n    return onKeyDownArrowDown;\n  }(),\n  onKeyDownQuestionMark: function () {\n    function onKeyDownQuestionMark() {}\n\n    return onKeyDownQuestionMark;\n  }(),\n  customInputIcon: null,\n  customCloseIcon: null,\n  // accessibility\n  isFocused: false,\n  // i18n\n  phrases: _defaultPhrases.SingleDatePickerInputPhrases,\n  isRTL: false\n};\n\nvar SingleDatePickerInputController =\n/*#__PURE__*/\nfunction (_ref) {\n  _inherits(SingleDatePickerInputController, _ref);\n\n  _createClass(SingleDatePickerInputController, [{\n    key: !_react[\"default\"].PureComponent && \"shouldComponentUpdate\",\n    value: function () {\n      function value(nextProps, nextState) {\n        return (0, _reactAddonsShallowCompare[\"default\"])(this, nextProps, nextState);\n      }\n\n      return value;\n    }()\n  }]);\n\n  function SingleDatePickerInputController(props) {\n    var _this;\n\n    _classCallCheck(this, SingleDatePickerInputController);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SingleDatePickerInputController).call(this, props));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClearFocus = _this.onClearFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearDate = _this.clearDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SingleDatePickerInputController, [{\n    key: \"onChange\",\n    value: function () {\n      function onChange(dateString) {\n        var _this$props = this.props,\n            isOutsideRange = _this$props.isOutsideRange,\n            keepOpenOnDateSelect = _this$props.keepOpenOnDateSelect,\n            onDateChange = _this$props.onDateChange,\n            onFocusChange = _this$props.onFocusChange,\n            onClose = _this$props.onClose;\n        var newDate = (0, _toMomentObject[\"default\"])(dateString, this.getDisplayFormat());\n        var isValid = newDate && !isOutsideRange(newDate);\n\n        if (isValid) {\n          onDateChange(newDate);\n\n          if (!keepOpenOnDateSelect) {\n            onFocusChange({\n              focused: false\n            });\n            onClose({\n              date: newDate\n            });\n          }\n        } else {\n          onDateChange(null);\n        }\n      }\n\n      return onChange;\n    }()\n  }, {\n    key: \"onFocus\",\n    value: function () {\n      function onFocus() {\n        var _this$props2 = this.props,\n            onFocusChange = _this$props2.onFocusChange,\n            disabled = _this$props2.disabled;\n\n        if (!disabled) {\n          onFocusChange({\n            focused: true\n          });\n        }\n      }\n\n      return onFocus;\n    }()\n  }, {\n    key: \"onClearFocus\",\n    value: function () {\n      function onClearFocus() {\n        var _this$props3 = this.props,\n            focused = _this$props3.focused,\n            onFocusChange = _this$props3.onFocusChange,\n            onClose = _this$props3.onClose,\n            date = _this$props3.date;\n        if (!focused) return;\n        onFocusChange({\n          focused: false\n        });\n        onClose({\n          date: date\n        });\n      }\n\n      return onClearFocus;\n    }()\n  }, {\n    key: \"getDisplayFormat\",\n    value: function () {\n      function getDisplayFormat() {\n        var displayFormat = this.props.displayFormat;\n        return typeof displayFormat === 'string' ? displayFormat : displayFormat();\n      }\n\n      return getDisplayFormat;\n    }()\n  }, {\n    key: \"getDateString\",\n    value: function () {\n      function getDateString(date) {\n        var displayFormat = this.getDisplayFormat();\n\n        if (date && displayFormat) {\n          return date && date.format(displayFormat);\n        }\n\n        return (0, _toLocalizedDateString[\"default\"])(date);\n      }\n\n      return getDateString;\n    }()\n  }, {\n    key: \"clearDate\",\n    value: function () {\n      function clearDate() {\n        var _this$props4 = this.props,\n            onDateChange = _this$props4.onDateChange,\n            reopenPickerOnClearDate = _this$props4.reopenPickerOnClearDate,\n            onFocusChange = _this$props4.onFocusChange;\n        onDateChange(null);\n\n        if (reopenPickerOnClearDate) {\n          onFocusChange({\n            focused: true\n          });\n        }\n      }\n\n      return clearDate;\n    }()\n  }, {\n    key: \"render\",\n    value: function () {\n      function render() {\n        var _this$props5 = this.props,\n            children = _this$props5.children,\n            id = _this$props5.id,\n            placeholder = _this$props5.placeholder,\n            disabled = _this$props5.disabled,\n            focused = _this$props5.focused,\n            isFocused = _this$props5.isFocused,\n            required = _this$props5.required,\n            readOnly = _this$props5.readOnly,\n            openDirection = _this$props5.openDirection,\n            showClearDate = _this$props5.showClearDate,\n            showCaret = _this$props5.showCaret,\n            showDefaultInputIcon = _this$props5.showDefaultInputIcon,\n            inputIconPosition = _this$props5.inputIconPosition,\n            customCloseIcon = _this$props5.customCloseIcon,\n            customInputIcon = _this$props5.customInputIcon,\n            date = _this$props5.date,\n            phrases = _this$props5.phrases,\n            onKeyDownArrowDown = _this$props5.onKeyDownArrowDown,\n            onKeyDownQuestionMark = _this$props5.onKeyDownQuestionMark,\n            screenReaderMessage = _this$props5.screenReaderMessage,\n            isRTL = _this$props5.isRTL,\n            noBorder = _this$props5.noBorder,\n            block = _this$props5.block,\n            small = _this$props5.small,\n            regular = _this$props5.regular,\n            verticalSpacing = _this$props5.verticalSpacing;\n        var displayValue = this.getDateString(date);\n        return _react[\"default\"].createElement(_SingleDatePickerInput[\"default\"], {\n          id: id,\n          placeholder: placeholder,\n          focused: focused,\n          isFocused: isFocused,\n          disabled: disabled,\n          required: required,\n          readOnly: readOnly,\n          openDirection: openDirection,\n          showCaret: showCaret,\n          onClearDate: this.clearDate,\n          showClearDate: showClearDate,\n          showDefaultInputIcon: showDefaultInputIcon,\n          inputIconPosition: inputIconPosition,\n          customCloseIcon: customCloseIcon,\n          customInputIcon: customInputIcon,\n          displayValue: displayValue,\n          onChange: this.onChange,\n          onFocus: this.onFocus,\n          onKeyDownShiftTab: this.onClearFocus,\n          onKeyDownArrowDown: onKeyDownArrowDown,\n          onKeyDownQuestionMark: onKeyDownQuestionMark,\n          screenReaderMessage: screenReaderMessage,\n          phrases: phrases,\n          isRTL: isRTL,\n          noBorder: noBorder,\n          block: block,\n          small: small,\n          regular: regular,\n          verticalSpacing: verticalSpacing\n        }, children);\n      }\n\n      return render;\n    }()\n  }]);\n\n  return SingleDatePickerInputController;\n}(_react[\"default\"].PureComponent || _react[\"default\"].Component);\n\nexports[\"default\"] = SingleDatePickerInputController;\nSingleDatePickerInputController.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nSingleDatePickerInputController.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"script"}