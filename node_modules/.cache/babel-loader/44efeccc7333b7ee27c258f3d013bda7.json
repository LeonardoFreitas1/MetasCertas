{"ast":null,"code":"import _classCallCheck from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/src/containers/Invoice/editInvoice.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { EditTable } from '../../components/invoice/invoiceTable';\nimport OrderStatus from '../../components/invoice/orderStatus';\nimport notification from '../../components/notification';\nimport Button from '../../components/uielements/button';\nimport Input, { Textarea } from '../../components/uielements/input';\nimport DatePicker from '../../components/uielements/datePicker';\nimport Box from '../../components/utility/box';\nimport LayoutWrapper from '../../components/utility/layoutWrapper.js';\nimport InvoicePageWrapper from './singleInvoice.style';\nimport { stringToPosetiveInt } from '../../helpers/utility';\nimport { orderStatusOptions } from './config';\n\nvar updateValues = function updateValues(invoice) {\n  var invoiceList = invoice.invoiceList;\n  var subTotal = 0;\n  invoiceList.forEach(function (item, index) {\n    var price = item.costs * item.qty;\n    invoice.invoiceList[index].price = price;\n    invoice.invoiceList[index].key = index + 1;\n    subTotal += price;\n  });\n  invoice.subTotal = subTotal;\n  invoice.vatPrice = Math.floor(invoice.vatRate * subTotal * 0.01);\n  invoice.totalCost = invoice.vatPrice + subTotal;\n  return invoice;\n};\n\nvar checkInvoice = function checkInvoice(invoice) {\n  var emptyKeys = ['number', 'billTo', 'billToAddress', 'billFrom', 'billFromAddress', 'currency'];\n  var emptyKeysErrors = ['Invoice Number', 'Bill To', 'Bill To Address', 'Bill From', 'Bill From Address', 'Currency'];\n\n  for (var i = 0; i < emptyKeys.length; i++) {\n    if (!invoice[emptyKeys[i]]) {\n      return \"Please fill in \".concat(emptyKeysErrors[i]);\n    }\n  }\n\n  for (var _i = 0; _i < invoice.invoiceList.length; _i++) {\n    if (!invoice.invoiceList[_i].itemName) {\n      return \"Please fill in item name of \".concat(_i + 1, \" item\");\n    }\n\n    if (invoice.invoiceList[_i].costs === 0) {\n      return \"cost of \".concat(_i + 1, \" item should be positive\");\n    }\n\n    if (invoice.invoiceList[_i].qty === 0) {\n      return \"quantity of \".concat(_i + 1, \" item should be positive\");\n    }\n  }\n\n  return '';\n};\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSave = function () {\n      var _this$props = _this.props,\n          editableInvoice = _this$props.editableInvoice,\n          isNewInvoice = _this$props.isNewInvoice,\n          updateInvoice = _this$props.updateInvoice;\n      var error = checkInvoice(editableInvoice);\n\n      if (error) {\n        notification('error', error);\n      } else {\n        var successMessage = isNewInvoice ? 'A new Invoice added' : 'Invoice Updated';\n        notification('success', successMessage);\n        updateInvoice(editableInvoice);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          editableInvoice = _this$props2.editableInvoice,\n          isNewInvoice = _this$props2.isNewInvoice,\n          redirectPath = _this$props2.redirectPath,\n          toggleView = _this$props2.toggleView,\n          editInvoice = _this$props2.editInvoice;\n      return React.createElement(LayoutWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Box, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(InvoicePageWrapper, {\n        className: \"editView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PageHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, isNewInvoice ? React.createElement(Link, {\n        to: redirectPath,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Cancel\"))) : React.createElement(Button, {\n        onClick: function onClick() {\n          return toggleView(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.onSave,\n        className: \"saveBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Save\"))), React.createElement(\"div\", {\n        className: \"PageContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"OrderInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LeftSideContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Invoice Info\"), React.createElement(Input, {\n        placeholder: \"Number\",\n        value: editableInvoice.number,\n        onChange: function onChange(event) {\n          editableInvoice.number = event.target.value;\n          editInvoice(editableInvoice);\n        },\n        className: \"LeftSideContentInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"RightSideContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"RightSideStatus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"RightSideStatusSpan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Order Status: \"), React.createElement(OrderStatus, {\n        value: editableInvoice.orderStatus,\n        onChange: function onChange(orderStatus) {\n          editableInvoice.orderStatus = orderStatus;\n          editInvoice(editableInvoice);\n        },\n        orderStatusOptions: orderStatusOptions,\n        className: \"RightStatusDropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"RightSideDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Order date:\", ' ', React.createElement(DatePicker, {\n        allowClear: false,\n        value: moment(new Date(editableInvoice.orderDate)),\n        onChange: function onChange(val) {\n          editableInvoice.orderDate = val.toDate().getTime();\n          editInvoice(editableInvoice);\n        },\n        format: \"MMMM Do YYYY\",\n        animateYearScrolling: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"BillingInformation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LeftSideContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Bill From\",\n        value: editableInvoice.billFrom,\n        onChange: function onChange(event) {\n          editableInvoice.billFrom = event.target.value;\n          editInvoice(editableInvoice);\n        },\n        className: \"BillFormTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(Textarea, {\n        placeholder: \"Bill From Address\",\n        value: editableInvoice.billFromAddress,\n        rows: 5,\n        onChange: function onChange(event) {\n          editableInvoice.billFromAddress = event.target.value;\n          editInvoice(editableInvoice);\n        },\n        className: \"BillFormAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"RightSideContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Bill To\",\n        value: editableInvoice.billTo,\n        onChange: function onChange(event) {\n          editableInvoice.billTo = event.target.value;\n          editInvoice(editableInvoice);\n        },\n        className: \"BillFormTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(Textarea, {\n        placeholder: \"Bill To Address\",\n        value: editableInvoice.billToAddress,\n        rows: 5,\n        onChange: function onChange(event) {\n          editableInvoice.billToAddress = event.target.value;\n          editInvoice(editableInvoice);\n        },\n        className: \"BillFormAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"InvoiceTable editInvoiceTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(EditTable, {\n        editableInvoice: editableInvoice,\n        editInvoice: editInvoice,\n        updateValues: updateValues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"InvoiceTableBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          editableInvoice.invoiceList.push({\n            key: editableInvoice.invoiceList.length + 1,\n            itemName: '',\n            costs: 0,\n            qty: 0,\n            price: 0\n          });\n          editInvoice(editableInvoice);\n        },\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Add Item\")), React.createElement(\"div\", {\n        className: \"TotalBill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"TotalBillTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Sub-total : \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"\".concat(editableInvoice.currency).concat(editableInvoice.subTotal))), React.createElement(\"div\", {\n        className: \"vatRateCalc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"vatRateCalcSpan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \" Total Vat : \"), React.createElement(\"div\", {\n        className: \"vatRateCalcWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: editableInvoice.vatRate,\n        addonAfter: \"%\",\n        onChange: function onChange(event) {\n          editableInvoice.vatRate = stringToPosetiveInt(event.target.value, editableInvoice.vatRate);\n          editInvoice(updateValues(editableInvoice));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"\".concat(editableInvoice.currency).concat(editableInvoice.vatPrice)))), React.createElement(\"div\", {\n        className: \"currencySignWithTotal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"grandTotalSpan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Grand Total \"), React.createElement(\"div\", {\n        className: \"currencySignWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: editableInvoice.currency,\n        onChange: function onChange(event) {\n          editableInvoice.currency = event.target.value;\n          editInvoice(editableInvoice);\n        },\n        className: \"currencySign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"currencySignSpan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, editableInvoice.totalCost))))), React.createElement(\"div\", {\n        className: \"ButtonWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/leonardo_freitas/Desktop/Programação/MetasCertas/src/containers/Invoice/editInvoice.js"],"names":["React","Component","Link","moment","EditTable","OrderStatus","notification","Button","Input","Textarea","DatePicker","Box","LayoutWrapper","InvoicePageWrapper","stringToPosetiveInt","orderStatusOptions","updateValues","invoice","invoiceList","subTotal","forEach","item","index","price","costs","qty","key","vatPrice","Math","floor","vatRate","totalCost","checkInvoice","emptyKeys","emptyKeysErrors","i","length","itemName","onSave","props","editableInvoice","isNewInvoice","updateInvoice","error","successMessage","redirectPath","toggleView","editInvoice","number","event","target","value","orderStatus","Date","orderDate","val","toDate","getTime","billFrom","billFromAddress","billTo","billToAddress","push","currency"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { EditTable } from '../../components/invoice/invoiceTable';\nimport OrderStatus from '../../components/invoice/orderStatus';\nimport notification from '../../components/notification';\nimport Button from '../../components/uielements/button';\nimport Input, { Textarea } from '../../components/uielements/input';\nimport DatePicker from '../../components/uielements/datePicker';\nimport Box from '../../components/utility/box';\nimport LayoutWrapper from '../../components/utility/layoutWrapper.js';\nimport InvoicePageWrapper from './singleInvoice.style';\nimport { stringToPosetiveInt } from '../../helpers/utility';\nimport { orderStatusOptions } from './config';\n\nconst updateValues = invoice => {\n  const { invoiceList } = invoice;\n  let subTotal = 0;\n  invoiceList.forEach((item, index) => {\n    const price = item.costs * item.qty;\n    invoice.invoiceList[index].price = price;\n    invoice.invoiceList[index].key = index + 1;\n    subTotal += price;\n  });\n  invoice.subTotal = subTotal;\n  invoice.vatPrice = Math.floor(invoice.vatRate * subTotal * 0.01);\n  invoice.totalCost = invoice.vatPrice + subTotal;\n  return invoice;\n};\nconst checkInvoice = invoice => {\n  const emptyKeys = [\n    'number',\n    'billTo',\n    'billToAddress',\n    'billFrom',\n    'billFromAddress',\n    'currency',\n  ];\n  const emptyKeysErrors = [\n    'Invoice Number',\n    'Bill To',\n    'Bill To Address',\n    'Bill From',\n    'Bill From Address',\n    'Currency',\n  ];\n  for (let i = 0; i < emptyKeys.length; i++) {\n    if (!invoice[emptyKeys[i]]) {\n      return `Please fill in ${emptyKeysErrors[i]}`;\n    }\n  }\n  for (let i = 0; i < invoice.invoiceList.length; i++) {\n    if (!invoice.invoiceList[i].itemName) {\n      return `Please fill in item name of ${i + 1} item`;\n    }\n    if (invoice.invoiceList[i].costs === 0) {\n      return `cost of ${i + 1} item should be positive`;\n    }\n    if (invoice.invoiceList[i].qty === 0) {\n      return `quantity of ${i + 1} item should be positive`;\n    }\n  }\n  return '';\n};\n\nexport default class extends Component {\n  onSave = () => {\n    const { editableInvoice, isNewInvoice, updateInvoice } = this.props;\n    const error = checkInvoice(editableInvoice);\n    if (error) {\n      notification('error', error);\n    } else {\n      const successMessage = isNewInvoice\n        ? 'A new Invoice added'\n        : 'Invoice Updated';\n      notification('success', successMessage);\n      updateInvoice(editableInvoice);\n    }\n  };\n  render() {\n    const {\n      editableInvoice,\n      isNewInvoice,\n      redirectPath,\n      toggleView,\n      editInvoice,\n    } = this.props;\n    return (\n      <LayoutWrapper>\n        <Box>\n          <InvoicePageWrapper className=\"editView\">\n            <div className=\"PageHeader\">\n              {isNewInvoice ? (\n                <Link to={redirectPath}>\n                  <Button color=\"primary\">\n                    <span>Cancel</span>\n                  </Button>\n                </Link>\n              ) : (\n                <Button onClick={() => toggleView(false)}>\n                  <span>Cancel</span>\n                </Button>\n              )}\n\n              <Button type=\"primary\" onClick={this.onSave} className=\"saveBtn\">\n                <span>Save</span>\n              </Button>\n            </div>\n            <div className=\"PageContent\">\n              <div className=\"OrderInfo\">\n                <div className=\"LeftSideContent\">\n                  <h3 className=\"Title\">Invoice Info</h3>\n                  <Input\n                    placeholder=\"Number\"\n                    value={editableInvoice.number}\n                    onChange={event => {\n                      editableInvoice.number = event.target.value;\n                      editInvoice(editableInvoice);\n                    }}\n                    className=\"LeftSideContentInput\"\n                  />\n                </div>\n                <div className=\"RightSideContent\">\n                  <div className=\"RightSideStatus\">\n                    <span className=\"RightSideStatusSpan\">Order Status: </span>\n                    <OrderStatus\n                      value={editableInvoice.orderStatus}\n                      onChange={orderStatus => {\n                        editableInvoice.orderStatus = orderStatus;\n                        editInvoice(editableInvoice);\n                      }}\n                      orderStatusOptions={orderStatusOptions}\n                      className=\"RightStatusDropdown\"\n                    />\n                  </div>\n                  <div className=\"RightSideDate\">\n                    Order date:{' '}\n                    <DatePicker\n                      allowClear={false}\n                      value={moment(new Date(editableInvoice.orderDate))}\n                      onChange={val => {\n                        editableInvoice.orderDate = val.toDate().getTime();\n                        editInvoice(editableInvoice);\n                      }}\n                      format=\"MMMM Do YYYY\"\n                      animateYearScrolling={true}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"BillingInformation\">\n                <div className=\"LeftSideContent\">\n                  <Input\n                    placeholder=\"Bill From\"\n                    value={editableInvoice.billFrom}\n                    onChange={event => {\n                      editableInvoice.billFrom = event.target.value;\n                      editInvoice(editableInvoice);\n                    }}\n                    className=\"BillFormTitle\"\n                  />\n                  <Textarea\n                    placeholder=\"Bill From Address\"\n                    value={editableInvoice.billFromAddress}\n                    rows={5}\n                    onChange={event => {\n                      editableInvoice.billFromAddress = event.target.value;\n                      editInvoice(editableInvoice);\n                    }}\n                    className=\"BillFormAddress\"\n                  />\n                </div>\n                <div className=\"RightSideContent\">\n                  <Input\n                    placeholder=\"Bill To\"\n                    value={editableInvoice.billTo}\n                    onChange={event => {\n                      editableInvoice.billTo = event.target.value;\n                      editInvoice(editableInvoice);\n                    }}\n                    className=\"BillFormTitle\"\n                  />\n                  <Textarea\n                    placeholder=\"Bill To Address\"\n                    value={editableInvoice.billToAddress}\n                    rows={5}\n                    onChange={event => {\n                      editableInvoice.billToAddress = event.target.value;\n                      editInvoice(editableInvoice);\n                    }}\n                    className=\"BillFormAddress\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"InvoiceTable editInvoiceTable\">\n                <EditTable\n                  editableInvoice={editableInvoice}\n                  editInvoice={editInvoice}\n                  updateValues={updateValues}\n                />\n                <div className=\"InvoiceTableBtn\">\n                  <Button\n                    onClick={() => {\n                      editableInvoice.invoiceList.push({\n                        key: editableInvoice.invoiceList.length + 1,\n                        itemName: '',\n                        costs: 0,\n                        qty: 0,\n                        price: 0,\n                      });\n                      editInvoice(editableInvoice);\n                    }}\n                    type=\"primary\"\n                  >\n                    Add Item\n                  </Button>\n                </div>\n                <div className=\"TotalBill\">\n                  <p>\n                    <span className=\"TotalBillTitle\">Sub-total : </span>\n                    <span>{`${editableInvoice.currency}${\n                      editableInvoice.subTotal\n                    }`}</span>\n                  </p>\n                  <div className=\"vatRateCalc\">\n                    <span className=\"vatRateCalcSpan\"> Total Vat : </span>\n                    <div className=\"vatRateCalcWrap\">\n                      <Input\n                        value={editableInvoice.vatRate}\n                        addonAfter=\"%\"\n                        onChange={event => {\n                          editableInvoice.vatRate = stringToPosetiveInt(\n                            event.target.value,\n                            editableInvoice.vatRate\n                          );\n                          editInvoice(updateValues(editableInvoice));\n                        }}\n                      />\n\n                      <span>\n                        {`${editableInvoice.currency}${\n                          editableInvoice.vatPrice\n                        }`}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"currencySignWithTotal\">\n                    <span className=\"grandTotalSpan\">Grand Total </span>\n                    <div className=\"currencySignWrap\">\n                      <Input\n                        value={editableInvoice.currency}\n                        onChange={event => {\n                          editableInvoice.currency = event.target.value;\n                          editInvoice(editableInvoice);\n                        }}\n                        className=\"currencySign\"\n                      />\n                      <span className=\"currencySignSpan\">\n                        {editableInvoice.totalCost}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"ButtonWrapper\" />\n            </div>\n          </InvoicePageWrapper>\n        </Box>\n      </LayoutWrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}