{"ast":null,"code":"import _classCallCheck from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/src/containers/Todo/todoList.js\";\nimport React, { Component } from 'react';\nimport Button from '../../components/uielements/button';\nimport Checkbox from '../../components/uielements/checkbox';\nimport { RadioButton, RadioGroup } from '../../components/uielements/radio';\nimport { timeDifference } from '../../helpers/utility';\nimport { notification, ColorChoser, EditableComponent } from '../../components/';\nimport { TodoListWrapper } from './todo.style';\n\nfunction filterTodos(todos, search) {\n  var selectedTodos = search === 'All' ? todos : todos.filter(function (todo) {\n    return todo.completed === (search === 'Completed');\n  });\n  var completed = 0;\n  selectedTodos.forEach(function (todo) {\n    if (todo.completed) {\n      completed += 1;\n    }\n  });\n  return {\n    selectedTodos: selectedTodos,\n    completed: completed\n  };\n}\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList(props) {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this, props));\n    _this.singleTodo = _this.singleTodo.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.state = {\n      search: 'All'\n    };\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"singleTodo\",\n    value: function singleTodo(todo) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          deleteTodo = _this$props.deleteTodo,\n          colors = _this$props.colors;\n\n      var onDelete = function onDelete() {\n        return deleteTodo(todo.id);\n      };\n\n      var updateTodo = function updateTodo(key, value) {\n        todo[key] = value;\n\n        _this2.props.edittodo(todo);\n      };\n\n      return React.createElement(\"div\", {\n        className: \"isoTodoList\",\n        key: todo.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(ColorChoser, {\n        colors: colors,\n        changeColor: function changeColor(value) {\n          return updateTodo('color', value);\n        },\n        seectedColor: todo.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        className: \"isoTodoCheck\",\n        checked: todo.completed,\n        onChange: function onChange(event) {\n          return updateTodo('completed', !todo.completed);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"isoTodoContentWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"isoTodoDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, timeDifference(todo.createTime)), React.createElement(EditableComponent, {\n        value: todo.todo,\n        itemKey: \"todo\",\n        onChange: updateTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"isoTodoDelete\",\n        icon: \"close\",\n        type: \"default\",\n        onClick: onDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      this.setState({\n        search: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var search = this.state.search;\n\n      var _filterTodos = filterTodos(this.props.todos, search),\n          selectedTodos = _filterTodos.selectedTodos,\n          completed = _filterTodos.completed;\n\n      return React.createElement(TodoListWrapper, {\n        className: \"isoTodoContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoTodoStatusTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(RadioGroup, {\n        value: this.state.search,\n        onChange: this.onChange,\n        className: \"isoTodoStatus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(RadioButton, {\n        value: \"All\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"All\"), React.createElement(RadioButton, {\n        value: \"Uncompleted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Uncompleted\"), React.createElement(RadioButton, {\n        value: \"Completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Completed\"))), React.createElement(\"div\", {\n        className: \"isoTodoListWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, selectedTodos.length > 0 ? selectedTodos.map(function (note) {\n        return _this3.singleTodo(note);\n      }) : React.createElement(\"h3\", {\n        className: \"isoNoTodoFound\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"No todo found\")), React.createElement(\"div\", {\n        className: \"isoTodoFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        className: \"isoTodoCheckAll\",\n        checked: completed === selectedTodos.length,\n        disabled: completed === selectedTodos.length,\n        onChange: function onChange(event) {\n          notification('success', 'All Todos are Completed!!!', '');\n\n          _this3.props.allCompleted();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Mark all as completed\"), selectedTodos.length > 0 && completed === selectedTodos.length ? React.createElement(Button, {\n        type: \"button\",\n        className: \"isoDeleteAll\",\n        onClick: function onClick(event) {\n          notification('success', 'All Completed Todos are Deleted', '');\n\n          _this3.props.deleteCompleted();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Delete Completed (\".concat(completed, \")\")) : ''));\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\nexport { TodoList as default };","map":{"version":3,"sources":["/home/leonardo_freitas/Desktop/Programação/MetasCertas/src/containers/Todo/todoList.js"],"names":["React","Component","Button","Checkbox","RadioButton","RadioGroup","timeDifference","notification","ColorChoser","EditableComponent","TodoListWrapper","filterTodos","todos","search","selectedTodos","filter","todo","completed","forEach","TodoList","props","singleTodo","bind","onChange","state","deleteTodo","colors","onDelete","id","updateTodo","key","value","edittodo","color","event","createTime","setState","target","length","map","note","allCompleted","deleteCompleted"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '../../components/uielements/button';\nimport Checkbox from '../../components/uielements/checkbox';\nimport { RadioButton, RadioGroup } from '../../components/uielements/radio';\nimport { timeDifference } from '../../helpers/utility';\nimport {\n  notification,\n  ColorChoser,\n  EditableComponent,\n} from '../../components/';\nimport { TodoListWrapper } from './todo.style';\n\nfunction filterTodos(todos, search) {\n  const selectedTodos =\n    search === 'All'\n      ? todos\n      : todos.filter(todo => todo.completed === (search === 'Completed'));\n  let completed = 0;\n  selectedTodos.forEach(todo => {\n    if (todo.completed) {\n      completed += 1;\n    }\n  });\n  return { selectedTodos, completed };\n}\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.singleTodo = this.singleTodo.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.state = {\n      search: 'All',\n    };\n  }\n  singleTodo(todo) {\n    const { deleteTodo, colors } = this.props;\n    const onDelete = () => deleteTodo(todo.id);\n    const updateTodo = (key, value) => {\n      todo[key] = value;\n      this.props.edittodo(todo);\n    };\n    return (\n      <div className=\"isoTodoList\" key={todo.id}>\n        <ColorChoser\n          colors={colors}\n          changeColor={value => updateTodo('color', value)}\n          seectedColor={todo.color}\n        />\n        <Checkbox\n          className=\"isoTodoCheck\"\n          checked={todo.completed}\n          onChange={event => updateTodo('completed', !todo.completed)}\n        />\n        <div className=\"isoTodoContentWrapper\">\n          <span className=\"isoTodoDate\">{timeDifference(todo.createTime)}</span>\n          <EditableComponent\n            value={todo.todo}\n            itemKey=\"todo\"\n            onChange={updateTodo}\n          />\n        </div>\n        <Button\n          className=\"isoTodoDelete\"\n          icon=\"close\"\n          type=\"default\"\n          onClick={onDelete}\n        />\n      </div>\n    );\n  }\n  onChange(event) {\n    this.setState({ search: event.target.value });\n  }\n  render() {\n    const { search } = this.state;\n    const { selectedTodos, completed } = filterTodos(this.props.todos, search);\n    return (\n      <TodoListWrapper className=\"isoTodoContent\">\n        <div className=\"isoTodoStatusTab\">\n          <RadioGroup\n            value={this.state.search}\n            onChange={this.onChange}\n            className=\"isoTodoStatus\"\n          >\n            <RadioButton value=\"All\">All</RadioButton>\n            <RadioButton value=\"Uncompleted\">Uncompleted</RadioButton>\n            <RadioButton value=\"Completed\">Completed</RadioButton>\n          </RadioGroup>\n        </div>\n\n        <div className=\"isoTodoListWrapper\">\n          {selectedTodos.length > 0 ? (\n            selectedTodos.map(note => this.singleTodo(note))\n          ) : (\n            <h3 className=\"isoNoTodoFound\">No todo found</h3>\n          )}\n        </div>\n\n        <div className=\"isoTodoFooter\">\n          <Checkbox\n            className=\"isoTodoCheckAll\"\n            checked={completed === selectedTodos.length}\n            disabled={completed === selectedTodos.length}\n            onChange={event => {\n              notification('success', 'All Todos are Completed!!!', '');\n              this.props.allCompleted();\n            }}\n          >\n            Mark all as completed\n          </Checkbox>\n\n          {selectedTodos.length > 0 && completed === selectedTodos.length ? (\n            <Button\n              type=\"button\"\n              className=\"isoDeleteAll\"\n              onClick={event => {\n                notification('success', 'All Completed Todos are Deleted', '');\n                this.props.deleteCompleted();\n              }}\n            >\n              {`Delete Completed (${completed})`}\n            </Button>\n          ) : (\n            ''\n          )}\n        </div>\n      </TodoListWrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}