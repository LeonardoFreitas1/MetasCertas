{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _input_wrap = require('./input_wrap');\n\nvar _input_wrap2 = _interopRequireDefault(_input_wrap);\n\nvar _password_input = require('./password_input');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MFACodeInput = function (_React$Component) {\n  _inherits(MFACodeInput, _React$Component);\n\n  function MFACodeInput(props) {\n    _classCallCheck(this, MFACodeInput);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  MFACodeInput.prototype.focus = function focus() {\n    this.refs.input && this.refs.input.focus();\n  };\n\n  MFACodeInput.prototype.hasFocus = function hasFocus() {\n    return this.state.focused;\n  };\n\n  MFACodeInput.prototype.render = function render() {\n    var _props = this.props,\n        lockId = _props.lockId,\n        invalidHint = _props.invalidHint,\n        isValid = _props.isValid,\n        onChange = _props.onChange,\n        value = _props.value,\n        props = _objectWithoutProperties(_props, ['lockId', 'invalidHint', 'isValid', 'onChange', 'value']);\n\n    var focused = this.state.focused;\n    return _react2.default.createElement(_input_wrap2.default, {\n      focused: focused,\n      invalidHint: invalidHint,\n      isValid: isValid,\n      name: 'mfa_code',\n      icon: _password_input.icon\n    }, _react2.default.createElement('input', _extends({\n      id: lockId + '-mfa_code',\n      ref: 'input',\n      type: 'text',\n      name: 'mfa_code',\n      className: 'auth0-lock-input',\n      autoComplete: 'off',\n      autoCapitalize: 'off',\n      onChange: this.handleOnChange.bind(this),\n      onFocus: this.handleFocus.bind(this),\n      onBlur: this.handleBlur.bind(this),\n      value: value,\n      'aria-label': 'Multi factor authentication code',\n      'aria-invalid': !isValid,\n      'aria-describedby': !isValid && invalidHint ? 'auth0-lock-error-msg-mfa_code' : undefined\n    }, props)));\n  };\n\n  MFACodeInput.prototype.handleOnChange = function handleOnChange(e) {\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  };\n\n  MFACodeInput.prototype.handleFocus = function handleFocus() {\n    this.setState({\n      focused: true\n    });\n  };\n\n  MFACodeInput.prototype.handleBlur = function handleBlur() {\n    this.setState({\n      focused: false\n    });\n  };\n\n  return MFACodeInput;\n}(_react2.default.Component);\n\nMFACodeInput.propTypes = {\n  invalidHint: _propTypes2.default.string.isRequired,\n  isValid: _propTypes2.default.bool.isRequired,\n  onChange: _propTypes2.default.func,\n  placeholder: _propTypes2.default.string,\n  value: _propTypes2.default.string.isRequired\n};\nexports.default = MFACodeInput;","map":null,"metadata":{},"sourceType":"script"}