{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.debouncedRequestAvatar = undefined;\nexports.requestAvatar = requestAvatar;\n\nvar _index = require('./store/index');\n\nvar _data_utils = require('./utils/data_utils');\n\nvar _preload_utils = require('./utils/preload_utils');\n\nvar preload = _interopRequireWildcard(_preload_utils);\n\nvar _fn_utils = require('./utils/fn_utils');\n\nvar f = _interopRequireWildcard(_fn_utils);\n\nvar _index2 = require('./core/index');\n\nvar l = _interopRequireWildcard(_index2);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nvar _dataFns = (0, _data_utils.dataFns)(['avatar']),\n    tget = _dataFns.tget,\n    tset = _dataFns.tset;\n\nvar cache = {};\n\nfunction requestAvatar(id, src) {\n  if (cache[src]) {\n    return update(id, src, cache[src].url, cache[src].displayName, true);\n  }\n\n  var provider = l.ui.avatarProvider((0, _index.read)(_index.getEntity, 'lock', id)).toJS();\n  (0, _index.swap)(_index.updateEntity, 'lock', id, function (m) {\n    m = tset(m, 'syncStatus', 'loading');\n    m = tset(m, 'src', src);\n    return m;\n  });\n  var url = void 0,\n      displayName = void 0;\n  provider.url(src, function (error, str) {\n    if (error) return handleError(id, src);\n    preload.img(str, function (error, img) {\n      if (error) return handleError(id, src);\n      url = img.src;\n      if (displayName !== undefined) handleSuccess(id, src, url, displayName);\n    });\n  });\n  provider.displayName(src, function (error, str) {\n    if (error) return handleError(id);\n    displayName = str;\n    if (url !== undefined) handleSuccess(id, src, url, displayName);\n  });\n}\n\nvar debouncedRequestAvatar = exports.debouncedRequestAvatar = f.debounce(requestAvatar, 300);\n\nfunction handleSuccess(id, src, url, displayName) {\n  cache[src] = {\n    url: url,\n    displayName: displayName\n  };\n  update(id, src, url, displayName);\n}\n\nfunction update(id, src, url, displayName) {\n  var force = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  (0, _index.swap)(_index.updateEntity, 'lock', id, function (m) {\n    if (force || tget(m, 'src') === src) {\n      m = tset(m, 'syncStatus', 'ok');\n      m = tset(m, 'url', url);\n      m = tset(m, 'src', src);\n      m = tset(m, 'displayName', displayName);\n    }\n\n    return m;\n  });\n}\n\nfunction handleError(id, src) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, function (m) {\n    return tget(m, 'src') === 'src' ? tset(m, 'syncStatus', 'error') : m;\n  });\n}","map":null,"metadata":{},"sourceType":"script"}