{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.remove = exports.render = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _CSSCore = require('fbjs/lib/CSSCore');\n\nvar _CSSCore2 = _interopRequireDefault(_CSSCore);\n\nvar _container = require('./box/container');\n\nvar _container2 = _interopRequireDefault(_container);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar ContainerManager = function () {\n  function ContainerManager() {\n    _classCallCheck(this, ContainerManager);\n  }\n\n  ContainerManager.prototype.ensure = function ensure(id, shouldAppend) {\n    var container = global.document.getElementById(id);\n\n    if (!container && shouldAppend) {\n      container = global.document.createElement('div');\n      container.id = id;\n      container.className = 'auth0-lock-container';\n      global.document.body.appendChild(container);\n    }\n\n    if (!container) {\n      throw new Error('Can\\'t find element with id ' + id);\n    }\n\n    return container;\n  };\n\n  return ContainerManager;\n}();\n\nvar Renderer = function () {\n  function Renderer() {\n    _classCallCheck(this, Renderer);\n\n    this.containerManager = new ContainerManager();\n    this.modals = {};\n  }\n\n  Renderer.prototype.render = function render(containerId, props) {\n    var isModal = props.isModal;\n    var container = this.containerManager.ensure(containerId, isModal);\n\n    if (isModal && !this.modals[containerId]) {\n      _CSSCore2.default.addClass(global.document.getElementsByTagName('html')[0], 'auth0-lock-html');\n    } // eslint-disable-next-line\n\n\n    var component = _reactDom2.default.render(_react2.default.createElement(_container2.default, props), container);\n\n    if (isModal) {\n      this.modals[containerId] = component;\n    }\n\n    return component;\n  };\n\n  Renderer.prototype.remove = function remove(containerId) {\n    var _this = this;\n\n    if (this.modals[containerId]) {\n      this.modals[containerId].hide();\n      setTimeout(function () {\n        return _this.unmount(containerId);\n      }, 1000);\n    } else {\n      this.unmount(containerId);\n    }\n  };\n\n  Renderer.prototype.unmount = function unmount(containerId) {\n    try {\n      var container = this.containerManager.ensure(containerId);\n\n      if (container) {\n        _reactDom2.default.unmountComponentAtNode(container);\n      }\n    } catch (e) {// do nothing if container doesn't exist\n    }\n\n    if (this.modals[containerId]) {\n      delete this.modals[containerId];\n\n      _CSSCore2.default.removeClass(global.document.getElementsByTagName('html')[0], 'auth0-lock-html');\n    }\n  };\n\n  return Renderer;\n}();\n\nvar renderer = new Renderer();\n\nvar render = exports.render = function render() {\n  return renderer.render.apply(renderer, arguments);\n};\n\nvar remove = exports.remove = function remove() {\n  return renderer.remove.apply(renderer, arguments);\n};","map":null,"metadata":{},"sourceType":"script"}