{"ast":null,"code":"import _classCallCheck from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/src/containers/Page/signup.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from '../../components/uielements/checkbox';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport SignUpStyleWrapper from './signup.style';\nimport Button from '../../components/uielements/button';\nimport Input from '../../components/uielements/input';\nimport Form from '../../components/uielements/form';\nimport Notification from '../../components/notification';\nimport notification from '../../components/notification';\nimport ValidaCPF from '../../helpers/Validacoes/ValidaCPF';\nvar FormItem = Form.Item;\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUp, _Component);\n\n  function SignUp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          Notification('success', 'Received values of form', JSON.stringify(values), console.log(values));\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.checkPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Uma das senhas estão incorretas');\n      } else {\n        callback();\n      }\n    };\n\n    _this.checkConfirm = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"envia\",\n    value: function envia(event) {\n      var cpf_cnpj = document.getElementById('cpf').value;\n      var nome = document.getElementById('nome').value;\n      var password = document.getElementById('password').value;\n      var email = document.getElementById('email').value;\n      var whatsapp = document.getElementById('whatsapp').value;\n      var requestInfo = {\n        method: 'POST',\n        body: JSON.stringify({\n          cpf_cnpj: cpf_cnpj,\n          nome: nome,\n          senha: password,\n          email: email,\n          whatsapp: whatsapp\n        }),\n        headers: new Headers({\n          'Content-type': 'application/json'\n        })\n      };\n      fetch('http://localhost:5000/addUser', requestInfo).then(function (response) {\n        if (response.ok) {\n          return response.text();\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"canSubmit\",\n    value: function canSubmit() {\n      var cpf = document.getElementById('cpf').value;\n      var nome = document.getElementById('nome').value;\n      var password = document.getElementById('password').value;\n      var email = document.getElementById('email').value;\n      var whatsapp = document.getElementById('whatsapp').value;\n      var validar = new ValidaCPF();\n      var envia = new SignUp();\n\n      if (cpf === '' || nome === '' || password === '' || email === '' || whatsapp === '') {\n        return notification('warning', 'Todos os campos devem estar preenchidos!');\n      } else if (validar.ValidarCPF(cpf) === true) {\n        envia.envia();\n        notification('success', 'Usuário Cadastrado!');\n      } else {\n        return notification('error', 'CPF Inválido');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //  const { history } = this.props;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      console.log(this.props.form);\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 100\n          },\n          sm: {\n            span: 100\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 100\n          },\n          sm: {\n            span: 100\n          }\n        }\n      };\n      return React.createElement(SignUpStyleWrapper, {\n        className: \"isoSignUpPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoSignUpContentWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoSignUpContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoLogoWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"page.signUpTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.state.msg), React.createElement(\"div\", {\n        className: \"isoSignUpForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"form1\",\n        onSubmit: this.envia.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoInputWrapper isoLeftRightComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"nome\",\n        size: \"large\",\n        placeholder: \"Nome Completo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"isoInputWrapper isoLeftRightComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Input, {\n        size: \"large\",\n        placeholder: \"cpf_cnpj\",\n        id: \"cpf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(Input, {\n        size: \"large\",\n        placeholder: \"Whatsapp\",\n        id: \"whatsapp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        size: \"large\",\n        placeholder: \"Email\",\n        id: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Senha'\n        }, {\n          validator: this.checkConfirm\n        }]\n      })(React.createElement(Input, {\n        size: \"large\",\n        placeholder: \"senha\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Confirar senha!'\n        }, {\n          validator: this.checkPassword\n        }]\n      })(React.createElement(Input, {\n        size: \"large\",\n        placeholder: \" confirmar senha\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"isoInputWrapper\",\n        style: {\n          marginBottom: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"Eu li e concordo com o termo e condi\\xE7\\xF5es\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"isoInputWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.canSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Registrar\"))), React.createElement(\"div\", {\n        className: \"isoInputWrapper isoCenterComponent isoHelperWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"J\\xE1 tenho uma conta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\nvar WrappedFormWIthSubmissionButton = Form.create()(SignUp);\nexport default WrappedFormWIthSubmissionButton;","map":{"version":3,"sources":["/home/leonardo_freitas/Desktop/Programação/MetasCertas/src/containers/Page/signup.js"],"names":["React","Component","Link","Checkbox","IntlMessages","SignUpStyleWrapper","Button","Input","Form","Notification","notification","ValidaCPF","FormItem","Item","SignUp","state","confirmDirty","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","JSON","stringify","console","log","handleConfirmBlur","value","target","setState","checkPassword","rule","callback","getFieldValue","checkConfirm","validateFields","force","event","cpf_cnpj","document","getElementById","nome","password","email","whatsapp","requestInfo","method","body","senha","headers","Headers","fetch","then","response","ok","text","catch","cpf","validar","envia","ValidarCPF","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","msg","bind","rules","type","message","required","validator","marginBottom","canSubmit","WrappedFormWIthSubmissionButton","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Checkbox from '../../components/uielements/checkbox';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport SignUpStyleWrapper from './signup.style';\nimport Button from '../../components/uielements/button';\nimport Input from '../../components/uielements/input';\nimport Form from '../../components/uielements/form';\nimport Notification from '../../components/notification';\nimport notification from '../../components/notification';\n\nimport ValidaCPF from '../../helpers/Validacoes/ValidaCPF'\nconst FormItem = Form.Item;\n\n\n\n\nclass SignUp extends Component {\n \n  state = {\n    confirmDirty: false,\n    \n  };\n \n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        Notification(\n          'success',\n          'Received values of form',\n          JSON.stringify(values),\n          console.log(values),\n        );\n      }\n    });\n  };\n  \n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n  checkPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Uma das senhas estão incorretas');\n    } else {\n      callback();\n    }\n  };\n  checkConfirm = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n  \n    envia(event){\n    \n      \n      const cpf_cnpj = document.getElementById('cpf').value\n      const nome = document.getElementById('nome').value\n      const password = document.getElementById('password').value\n      const email = document.getElementById('email').value\n      const whatsapp = document.getElementById('whatsapp').value\n\n      const requestInfo = {\n    \n        method: 'POST',\n    \n        body: JSON.stringify({ \n          cpf_cnpj: cpf_cnpj,\n          nome: nome,\n          senha: password,\n          email: email,\n          whatsapp: whatsapp \n         }),\n         headers: new Headers({\n          'Content-type':'application/json'\n        })\n      }\n    \n      fetch('http://localhost:5000/addUser', requestInfo)\n      \n      .then(response => {\n        if(response.ok){\n          return response.text();\n        }\n      }).catch(err => {\n        console.log(err)\n      });\n    }\n    canSubmit(){\n      const cpf = document.getElementById('cpf').value\n      const nome = document.getElementById('nome').value\n      const password = document.getElementById('password').value\n      const email = document.getElementById('email').value\n      const whatsapp = document.getElementById('whatsapp').value\n      const validar = new ValidaCPF();\n      const envia = new SignUp()\n      if(cpf === '' || nome === ''|| password === ''|| email === '' || whatsapp === ''){\n        return notification('warning', 'Todos os campos devem estar preenchidos!')\n      }\n      else if(validar.ValidarCPF(cpf) === true){\n\n          envia.envia()\n           notification('success', 'Usuário Cadastrado!')\n\n      }else{\n        return notification('error','CPF Inválido')\n       \n      }\n    }\n  \n\n  render(){\n   \n    //  const { history } = this.props;\n    const { getFieldDecorator } = this.props.form;\nconsole.log(this.props.form)\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 100 },\n        sm: { span: 100 },\n      },\n      wrapperCol: {\n        xs: { span: 100 },\n        sm: { span: 100 },\n      },\n    };\n   \n   \n    return (\n\n      <SignUpStyleWrapper className=\"isoSignUpPage\">\n        <div className=\"isoSignUpContentWrapper\">\n          <div className=\"isoSignUpContent\">\n            <div className=\"isoLogoWrapper\">\n              <Link to=\"/\">\n                <IntlMessages id=\"page.signUpTitle\" />\n              </Link>\n            </div>\n            <span>{this.state.msg}</span>\n            \n            <div className=\"isoSignUpForm\">\n            <form id= 'form1' onSubmit={this.envia.bind(this)}>\n              <div className=\"isoInputWrapper isoLeftRightComponent\">\n                <Input id=\"nome\" size=\"large\" placeholder=\"Nome Completo\"\n                 \n                \n                />\n                </div>\n              \n             \n              <div className=\"isoInputWrapper isoLeftRightComponent\">\n              <Input size=\"large\" placeholder=\"cpf_cnpj\"\n                 id=\"cpf\"\n                \n                />\n             <Input size=\"large\" placeholder=\"Whatsapp\"\n                 id=\"whatsapp\"\n                \n                />\n              \n              </div>\n\n              \n              <FormItem {...formItemLayout} hasFeedback>\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(\n              <Input size=\"large\" placeholder=\"Email\"\n                 id=\"email\" \n                \n                />)}\n              </FormItem>\n             \n             \n              <FormItem {...formItemLayout}  hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Senha',\n              },\n              {\n                validator: this.checkConfirm,\n              },\n            ],\n          })(<Input size=\"large\"  placeholder=\"senha\"type=\"password\"\n                />)}\n                  </FormItem>\n                  \n                 \n                  <FormItem {...formItemLayout}  hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Confirar senha!',\n              },\n              {\n                validator: this.checkPassword,\n              },\n            ],\n          })(\n                 <Input size=\"large\" placeholder=\" confirmar senha\" type=\"password\"  />)}\n              </FormItem>\n              \n              \n              <div className=\"isoInputWrapper\" style={{ marginBottom: '50px' }}>\n                <Checkbox>\n                  <IntlMessages id=\"Eu li e concordo com o termo e condições\" />\n                </Checkbox>\n              </div>\n              </form>\n              <div className=\"isoInputWrapper\">\n              \n                <Button  onClick={this.canSubmit}>\n                \n                <Link to=\"/signin\">Registrar</Link>\n                \n                \n                </Button>\n               \n\n              </div>\n              \n              <div className=\"isoInputWrapper isoCenterComponent isoHelperWrapper\">\n                <Link to=\"/signin\">\n                  <IntlMessages id=\"Já tenho uma conta\" />\n                </Link>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n      </SignUpStyleWrapper>\n    );\n  }\n}\nconst WrappedFormWIthSubmissionButton = Form.create()(SignUp)\n\nexport default \n\n(WrappedFormWIthSubmissionButton);\n"]},"metadata":{},"sourceType":"module"}