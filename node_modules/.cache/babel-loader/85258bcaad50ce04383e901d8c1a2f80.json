{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getVisibleDays;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _toISOMonthString = _interopRequireDefault(require(\"./toISOMonthString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction getVisibleDays(month, numberOfMonths, enableOutsideDays, withoutTransitionMonths) {\n  if (!_moment[\"default\"].isMoment(month)) return {};\n  var visibleDaysByMonth = {};\n  var currentMonth = withoutTransitionMonths ? month.clone() : month.clone().subtract(1, 'month');\n\n  for (var i = 0; i < (withoutTransitionMonths ? numberOfMonths : numberOfMonths + 2); i += 1) {\n    var visibleDays = []; // set utc offset to get correct dates in future (when timezone changes)\n\n    var baseDate = currentMonth.clone();\n    var firstOfMonth = baseDate.clone().startOf('month').hour(12);\n    var lastOfMonth = baseDate.clone().endOf('month').hour(12);\n    var currentDay = firstOfMonth.clone(); // days belonging to the previous month\n\n    if (enableOutsideDays) {\n      for (var j = 0; j < currentDay.weekday(); j += 1) {\n        var prevDay = currentDay.clone().subtract(j + 1, 'day');\n        visibleDays.unshift(prevDay);\n      }\n    }\n\n    while (currentDay < lastOfMonth) {\n      visibleDays.push(currentDay.clone());\n      currentDay.add(1, 'day');\n    }\n\n    if (enableOutsideDays) {\n      // weekday() returns the index of the day of the week according to the locale\n      // this means if the week starts on Monday, weekday() will return 0 for a Monday date, not 1\n      if (currentDay.weekday() !== 0) {\n        // days belonging to the next month\n        for (var k = currentDay.weekday(), count = 0; k < 7; k += 1, count += 1) {\n          var nextDay = currentDay.clone().add(count, 'day');\n          visibleDays.push(nextDay);\n        }\n      }\n    }\n\n    visibleDaysByMonth[(0, _toISOMonthString[\"default\"])(currentMonth)] = visibleDays;\n    currentMonth = currentMonth.clone().add(1, 'month');\n  }\n\n  return visibleDaysByMonth;\n}","map":null,"metadata":{},"sourceType":"script"}