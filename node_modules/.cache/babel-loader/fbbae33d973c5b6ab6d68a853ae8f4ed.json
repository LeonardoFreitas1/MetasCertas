{"ast":null,"code":"import _classCallCheck from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar ValidaCPF =\n/*#__PURE__*/\nfunction () {\n  function ValidaCPF() {\n    _classCallCheck(this, ValidaCPF);\n  }\n\n  _createClass(ValidaCPF, [{\n    key: \"ValidarCPF\",\n    value: function ValidarCPF(cpf) {\n      var numeros, digitos, soma, i, resultado, digitos_iguais;\n      digitos_iguais = 1;\n      if (cpf.length < 11) return false;\n\n      for (i = 0; i < cpf.length - 1; i++) {\n        if (cpf.charAt(i) != cpf.charAt(i + 1)) {\n          digitos_iguais = 0;\n          break;\n        }\n      }\n\n      if (!digitos_iguais) {\n        numeros = cpf.substring(0, 9);\n        digitos = cpf.substring(9);\n        soma = 0;\n\n        for (i = 10; i > 1; i--) {\n          soma += numeros.charAt(10 - i) * i;\n        }\n\n        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n        if (resultado != digitos.charAt(0)) return false;\n        numeros = cpf.substring(0, 10);\n        soma = 0;\n\n        for (i = 11; i > 1; i--) {\n          soma += numeros.charAt(11 - i) * i;\n        }\n\n        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n        if (resultado != digitos.charAt(1)) return false;\n        return true;\n      } else return false;\n    }\n  }]);\n\n  return ValidaCPF;\n}();\n\nexport default ValidaCPF;","map":{"version":3,"sources":["/home/leonardo_freitas/Desktop/Programação/MetasCertas/src/helpers/Validacoes/ValidaCPF.js"],"names":["ValidaCPF","cpf","numeros","digitos","soma","i","resultado","digitos_iguais","length","charAt","substring"],"mappings":";;;IAAMA,S;;;;;;;;;+BAGSC,G,EAAI;AACb,UAAIC,OAAJ,EAAaC,OAAb,EAAsBC,IAAtB,EAA4BC,CAA5B,EAA+BC,SAA/B,EAA0CC,cAA1C;AACFA,MAAAA,cAAc,GAAG,CAAjB;AACA,UAAIN,GAAG,CAACO,MAAJ,GAAa,EAAjB,EACM,OAAO,KAAP;;AACN,WAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,GAAG,CAACO,MAAJ,GAAa,CAA7B,EAAgCH,CAAC,EAAjC;AACM,YAAIJ,GAAG,CAACQ,MAAJ,CAAWJ,CAAX,KAAiBJ,GAAG,CAACQ,MAAJ,CAAWJ,CAAC,GAAG,CAAf,CAArB,EACM;AACAE,UAAAA,cAAc,GAAG,CAAjB;AACA;AACC;AALb;;AAMA,UAAI,CAACA,cAAL,EACM;AACAL,QAAAA,OAAO,GAAGD,GAAG,CAACS,SAAJ,CAAc,CAAd,EAAgB,CAAhB,CAAV;AACAP,QAAAA,OAAO,GAAGF,GAAG,CAACS,SAAJ,CAAc,CAAd,CAAV;AACAN,QAAAA,IAAI,GAAG,CAAP;;AACA,aAAKC,CAAC,GAAG,EAAT,EAAaA,CAAC,GAAG,CAAjB,EAAoBA,CAAC,EAArB;AACMD,UAAAA,IAAI,IAAIF,OAAO,CAACO,MAAR,CAAe,KAAKJ,CAApB,IAAyBA,CAAjC;AADN;;AAEAC,QAAAA,SAAS,GAAGF,IAAI,GAAG,EAAP,GAAY,CAAZ,GAAgB,CAAhB,GAAoB,KAAKA,IAAI,GAAG,EAA5C;AACA,YAAIE,SAAS,IAAIH,OAAO,CAACM,MAAR,CAAe,CAAf,CAAjB,EACM,OAAO,KAAP;AACNP,QAAAA,OAAO,GAAGD,GAAG,CAACS,SAAJ,CAAc,CAAd,EAAgB,EAAhB,CAAV;AACAN,QAAAA,IAAI,GAAG,CAAP;;AACA,aAAKC,CAAC,GAAG,EAAT,EAAaA,CAAC,GAAG,CAAjB,EAAoBA,CAAC,EAArB;AACMD,UAAAA,IAAI,IAAIF,OAAO,CAACO,MAAR,CAAe,KAAKJ,CAApB,IAAyBA,CAAjC;AADN;;AAEAC,QAAAA,SAAS,GAAGF,IAAI,GAAG,EAAP,GAAY,CAAZ,GAAgB,CAAhB,GAAoB,KAAKA,IAAI,GAAG,EAA5C;AACA,YAAIE,SAAS,IAAIH,OAAO,CAACM,MAAR,CAAe,CAAf,CAAjB,EACM,OAAO,KAAP;AACN,eAAO,IAAP;AACC,OAlBP,MAoBI,OAAO,KAAP;AACH;;;;;;AACJ,eAAeT,SAAf","sourcesContent":["class ValidaCPF {\n   \n\n    ValidarCPF(cpf){\n      var numeros, digitos, soma, i, resultado, digitos_iguais;\n    digitos_iguais = 1;\n    if (cpf.length < 11)\n          return false;\n    for (i = 0; i < cpf.length - 1; i++)\n          if (cpf.charAt(i) != cpf.charAt(i + 1))\n                {\n                digitos_iguais = 0;\n                break;\n                }\n    if (!digitos_iguais)\n          {\n          numeros = cpf.substring(0,9);\n          digitos = cpf.substring(9);\n          soma = 0;\n          for (i = 10; i > 1; i--)\n                soma += numeros.charAt(10 - i) * i;\n          resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n          if (resultado != digitos.charAt(0))\n                return false;\n          numeros = cpf.substring(0,10);\n          soma = 0;\n          for (i = 11; i > 1; i--)\n                soma += numeros.charAt(11 - i) * i;\n          resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n          if (resultado != digitos.charAt(1))\n                return false;\n          return true;\n          }\n    else\n        return false;\n    }\n}export default ValidaCPF;"]},"metadata":{},"sourceType":"module"}