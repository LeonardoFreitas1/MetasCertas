{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.switchProp = exports.ifProp = exports.get = exports.prop = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _at = require('lodash/at');\n\nvar _at2 = _interopRequireDefault(_at);\n\nvar _values = require('lodash/values');\n\nvar _values2 = _interopRequireDefault(_values);\n\nvar _difference = require('lodash/difference');\n\nvar _difference2 = _interopRequireDefault(_difference);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns the value of `props[path]` or `defaultValue`\n * @example\n * const Button = styled.button`\n *  color: ${prop('color', 'red')};\n * `\n */\n\n\nvar prop = exports.prop = function prop(path, defaultValue) {\n  return function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return (0, _get3.default)(props, path, defaultValue);\n  };\n};\n\nvar get = exports.get = prop;\n/**\n * Returns `pass` if prop is truthy. Otherwise returns `fail`\n * @example\n * // usage with styled-theme\n * import styled from 'styled-components'\n * import { ifProp } from 'styled-tools'\n * import { palette } from 'styled-theme'\n *\n * const Button = styled.button`\n *  background-color: ${ifProp('transparent', 'transparent', palette(0))};\n *  color: ${ifProp(['transparent', 'accent'], palette('secondary', 0))};\n *  font-size: ${ifProp({ size: 'large' }, '20px', ifProp({ size: 'medium' }, '16px', '12px'))};\n *`\n */\n\nvar ifProp = exports.ifProp = function ifProp(needle, pass, fail) {\n  return function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var result = void 0;\n\n    if (Array.isArray(needle)) {\n      result = !(0, _at2.default)(props, needle).filter(function (value) {\n        return !value;\n      }).length;\n    } else if ((typeof needle === 'undefined' ? 'undefined' : _typeof(needle)) === 'object') {\n      var needleKeys = Object.keys(needle);\n      var needleValues = (0, _values2.default)(needle);\n      result = !(0, _difference2.default)((0, _at2.default)(props, needleKeys), needleValues).length;\n    } else {\n      result = (0, _get3.default)(props, needle);\n    }\n\n    return result ? pass : fail;\n  };\n};\n/**\n * Switches on a given prop. Returns the value or function for a given prop value.\n * @example\n * import styled, { css } from 'styled-components'\n * import { switchProp } from 'styled-theme'\n *\n * const Button = styled.button`\n *  font-size: ${switchProp('size', {\n *    small: prop('theme.sizes.sm', '12px'),\n *    large: prop('theme.sizes.lg', '20px'),\n *    default: prop('theme.sizes.md', '16px'),\n *  })};\n *  ${switchProp('theme.kind', {\n *    light: css`\n *      color: LightBlue;\n *    `,\n *    dark: css`\n *      color: DarkBlue;\n *    `,\n *  })}\n * `\n *\n * <Button size=\"large\" theme={{ kind: 'light' }} />\n */\n\n\nvar switchProp = exports.switchProp = function switchProp(needle, switches) {\n  return function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var propType = (0, _get3.default)(props, needle);\n    return (0, _get3.default)(switches, propType);\n  };\n};","map":null,"metadata":{},"sourceType":"script"}