{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = calculateDimension;\n\nfunction calculateDimension(el, axis) {\n  var borderBox = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var withMargin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (!el) {\n    return 0;\n  }\n\n  var axisStart = axis === 'width' ? 'Left' : 'Top';\n  var axisEnd = axis === 'width' ? 'Right' : 'Bottom'; // Only read styles if we need to\n\n  var style = !borderBox || withMargin ? window.getComputedStyle(el) : null; // Offset includes border and padding\n\n  var offsetWidth = el.offsetWidth,\n      offsetHeight = el.offsetHeight;\n  var size = axis === 'width' ? offsetWidth : offsetHeight; // Get the inner size\n\n  if (!borderBox) {\n    size -= parseFloat(style[\"padding\".concat(axisStart)]) + parseFloat(style[\"padding\".concat(axisEnd)]) + parseFloat(style[\"border\".concat(axisStart, \"Width\")]) + parseFloat(style[\"border\".concat(axisEnd, \"Width\")]);\n  } // Apply margin\n\n\n  if (withMargin) {\n    size += parseFloat(style[\"margin\".concat(axisStart)]) + parseFloat(style[\"margin\".concat(axisEnd)]);\n  }\n\n  return size;\n}","map":null,"metadata":{},"sourceType":"script"}