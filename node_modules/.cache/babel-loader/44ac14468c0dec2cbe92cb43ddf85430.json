{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InputWrap = function (_React$Component) {\n  _inherits(InputWrap, _React$Component);\n\n  function InputWrap() {\n    _classCallCheck(this, InputWrap);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  InputWrap.prototype.render = function render() {\n    var _props = this.props,\n        after = _props.after,\n        focused = _props.focused,\n        invalidHint = _props.invalidHint,\n        isValid = _props.isValid,\n        name = _props.name,\n        icon = _props.icon;\n    var blockClassName = 'auth0-lock-input-block auth0-lock-input-' + name;\n\n    if (!isValid) {\n      blockClassName += ' auth0-lock-error';\n    }\n\n    var wrapClassName = 'auth0-lock-input-wrap';\n\n    if (focused && isValid) {\n      wrapClassName += ' auth0-lock-focused';\n    } // NOTE: Ugly hack until we upgrade to React 15 which has better\n    // support for SVG.\n\n\n    var iconElement = null;\n\n    if (typeof icon === 'string') {\n      iconElement = _react2.default.createElement('span', {\n        'aria-hidden': 'true',\n        dangerouslySetInnerHTML: {\n          __html: icon\n        }\n      });\n    } else if (icon) {\n      iconElement = icon;\n    }\n\n    if (iconElement) {\n      wrapClassName += ' auth0-lock-input-wrap-with-icon';\n    }\n\n    var errorTooltip = !isValid && invalidHint ? _react2.default.createElement('div', {\n      role: 'alert',\n      id: 'auth0-lock-error-msg-' + name,\n      className: 'auth0-lock-error-msg'\n    }, _react2.default.createElement('div', {\n      className: 'auth0-lock-error-invalid-hint'\n    }, invalidHint)) : null;\n    return _react2.default.createElement('div', {\n      className: blockClassName\n    }, _react2.default.createElement('div', {\n      className: wrapClassName\n    }, iconElement, this.props.children), after, errorTooltip);\n  };\n\n  return InputWrap;\n}(_react2.default.Component);\n\nexports.default = InputWrap;\nInputWrap.propTypes = {\n  after: _propTypes2.default.element,\n  children: _propTypes2.default.oneOfType([_propTypes2.default.element.isRequired, _propTypes2.default.arrayOf(_propTypes2.default.element).isRequired]),\n  focused: _propTypes2.default.bool,\n  invalidHint: _propTypes2.default.node,\n  isValid: _propTypes2.default.bool.isRequired,\n  name: _propTypes2.default.string.isRequired,\n  svg: _propTypes2.default.string\n};","map":null,"metadata":{},"sourceType":"script"}