{"ast":null,"code":"var _jsxFileName = \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/src/dashApp.js\";\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { store, history } from './redux/store';\nimport PublicRoutes from './router';\nimport { ThemeProvider } from 'styled-components';\nimport { LocaleProvider } from 'antd';\nimport { IntlProvider } from 'react-intl';\nimport themes from './settings/themes';\nimport AppLocale from './languageProvider';\nimport config, { getCurrentLanguage } from './containers/LanguageSwitcher/config';\nimport { themeConfig } from './settings';\nimport DashAppHolder from './dashAppStyle';\nimport Boot from './redux/boot';\nimport GlobalStyles from './settings/globalStyles';\nvar currentAppLocale = AppLocale[getCurrentLanguage(config.defaultLanguage || 'Portuguese').locale];\n\nvar DashApp = function DashApp() {\n  return React.createElement(LocaleProvider, {\n    locale: currentAppLocale.antd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(ThemeProvider, {\n    theme: themes[themeConfig.theme],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(DashAppHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(PublicRoutes, {\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(GlobalStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })))));\n};\n\nBoot().then(function () {\n  return DashApp();\n}).catch(function (error) {\n  return console.error(error);\n});\nexport default DashApp;\nexport { AppLocale };","map":{"version":3,"sources":["/home/leonardo_freitas/Desktop/Programação/MetasCertas/src/dashApp.js"],"names":["React","Provider","store","history","PublicRoutes","ThemeProvider","LocaleProvider","IntlProvider","themes","AppLocale","config","getCurrentLanguage","themeConfig","DashAppHolder","Boot","GlobalStyles","currentAppLocale","defaultLanguage","locale","DashApp","antd","messages","theme","then","catch","error","console"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,eAA/B;AACA,OAAOC,YAAP,MAAyB,UAAzB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,MAAP,IACEC,kBADF,QAEO,sCAFP;AAGA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAGC,IAAMC,gBAAgB,GACrBP,SAAS,CAACE,kBAAkB,CAACD,MAAM,CAACO,eAAP,IAA0B,YAA3B,CAAlB,CAA2DC,MAA5D,CADV;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SACd,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEH,gBAAgB,CAACI,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,YAAD;AACE,IAAA,MAAM,EAAEJ,gBAAgB,CAACE,MAD3B;AAEE,IAAA,QAAQ,EAAEF,gBAAgB,CAACK,QAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEb,MAAM,CAACI,WAAW,CAACU,KAAb,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEpB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAJF,CADD,CADc;AAAA,CAAhB;;AAiBDW,IAAI,GACDS,IADH,CACQ;AAAA,SAAMJ,OAAO,EAAb;AAAA,CADR,EAEGK,KAFH,CAES,UAAAC,KAAK;AAAA,SAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,CAFd;AAIA,eAAeN,OAAf;AACA,SAASV,SAAT","sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store, history } from './redux/store';\nimport PublicRoutes from './router';\nimport { ThemeProvider } from 'styled-components';\nimport { LocaleProvider } from 'antd';\nimport { IntlProvider } from 'react-intl';\nimport themes from './settings/themes';\nimport AppLocale from './languageProvider';\nimport config, {\n  getCurrentLanguage,\n} from './containers/LanguageSwitcher/config';\nimport { themeConfig } from './settings';\nimport DashAppHolder from './dashAppStyle';\nimport Boot from './redux/boot';\nimport GlobalStyles from './settings/globalStyles';\n\n\n const currentAppLocale =\n  AppLocale[getCurrentLanguage(config.defaultLanguage || 'Portuguese').locale];\n\n const DashApp = () => (\n   <LocaleProvider locale={currentAppLocale.antd}>\n    <IntlProvider\n      locale={currentAppLocale.locale}\n      messages={currentAppLocale.messages}\n    >\n      <ThemeProvider theme={themes[themeConfig.theme]}>\n        <DashAppHolder>\n          <Provider store={store}>\n            <PublicRoutes history={history} />\n          </Provider>\n          <GlobalStyles />\n        </DashAppHolder>\n      </ThemeProvider>\n    </IntlProvider>\n  </LocaleProvider>\n);\nBoot()\n  .then(() => DashApp())\n  .catch(error => console.error(error));\n\nexport default DashApp;\nexport { AppLocale };\n"]},"metadata":{},"sourceType":"module"}