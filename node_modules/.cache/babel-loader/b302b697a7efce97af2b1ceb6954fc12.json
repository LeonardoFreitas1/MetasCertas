{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _reactAddonsShallowCompare = _interopRequireDefault(require(\"react-addons-shallow-compare\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactMomentProptypes = _interopRequireDefault(require(\"react-moment-proptypes\"));\n\nvar _airbnbPropTypes = require(\"airbnb-prop-types\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _object = _interopRequireDefault(require(\"object.values\"));\n\nvar _isTouchDevice = _interopRequireDefault(require(\"is-touch-device\"));\n\nvar _defaultPhrases = require(\"../defaultPhrases\");\n\nvar _getPhrasePropTypes = _interopRequireDefault(require(\"../utils/getPhrasePropTypes\"));\n\nvar _isSameDay = _interopRequireDefault(require(\"../utils/isSameDay\"));\n\nvar _isAfterDay = _interopRequireDefault(require(\"../utils/isAfterDay\"));\n\nvar _getVisibleDays = _interopRequireDefault(require(\"../utils/getVisibleDays\"));\n\nvar _isDayVisible = _interopRequireDefault(require(\"../utils/isDayVisible\"));\n\nvar _toISODateString = _interopRequireDefault(require(\"../utils/toISODateString\"));\n\nvar _toISOMonthString = _interopRequireDefault(require(\"../utils/toISOMonthString\"));\n\nvar _ScrollableOrientationShape = _interopRequireDefault(require(\"../shapes/ScrollableOrientationShape\"));\n\nvar _DayOfWeekShape = _interopRequireDefault(require(\"../shapes/DayOfWeekShape\"));\n\nvar _CalendarInfoPositionShape = _interopRequireDefault(require(\"../shapes/CalendarInfoPositionShape\"));\n\nvar _constants = require(\"../constants\");\n\nvar _DayPicker = _interopRequireDefault(require(\"./DayPicker\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function () {\n    function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    }\n\n    return _getPrototypeOf;\n  }();\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function () {\n    function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    }\n\n    return _setPrototypeOf;\n  }();\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? (0, _airbnbPropTypes.forbidExtraProps)({\n  date: _reactMomentProptypes[\"default\"].momentObj,\n  onDateChange: _propTypes[\"default\"].func,\n  focused: _propTypes[\"default\"].bool,\n  onFocusChange: _propTypes[\"default\"].func,\n  onClose: _propTypes[\"default\"].func,\n  keepOpenOnDateSelect: _propTypes[\"default\"].bool,\n  isOutsideRange: _propTypes[\"default\"].func,\n  isDayBlocked: _propTypes[\"default\"].func,\n  isDayHighlighted: _propTypes[\"default\"].func,\n  // DayPicker props\n  renderMonthText: (0, _airbnbPropTypes.mutuallyExclusiveProps)(_propTypes[\"default\"].func, 'renderMonthText', 'renderMonthElement'),\n  renderMonthElement: (0, _airbnbPropTypes.mutuallyExclusiveProps)(_propTypes[\"default\"].func, 'renderMonthText', 'renderMonthElement'),\n  enableOutsideDays: _propTypes[\"default\"].bool,\n  numberOfMonths: _propTypes[\"default\"].number,\n  orientation: _ScrollableOrientationShape[\"default\"],\n  withPortal: _propTypes[\"default\"].bool,\n  initialVisibleMonth: _propTypes[\"default\"].func,\n  firstDayOfWeek: _DayOfWeekShape[\"default\"],\n  hideKeyboardShortcutsPanel: _propTypes[\"default\"].bool,\n  daySize: _airbnbPropTypes.nonNegativeInteger,\n  verticalHeight: _airbnbPropTypes.nonNegativeInteger,\n  noBorder: _propTypes[\"default\"].bool,\n  verticalBorderSpacing: _airbnbPropTypes.nonNegativeInteger,\n  transitionDuration: _airbnbPropTypes.nonNegativeInteger,\n  horizontalMonthPadding: _airbnbPropTypes.nonNegativeInteger,\n  navPrev: _propTypes[\"default\"].node,\n  navNext: _propTypes[\"default\"].node,\n  onPrevMonthClick: _propTypes[\"default\"].func,\n  onNextMonthClick: _propTypes[\"default\"].func,\n  onOutsideClick: _propTypes[\"default\"].func,\n  renderCalendarDay: _propTypes[\"default\"].func,\n  renderDayContents: _propTypes[\"default\"].func,\n  renderCalendarInfo: _propTypes[\"default\"].func,\n  calendarInfoPosition: _CalendarInfoPositionShape[\"default\"],\n  // accessibility\n  onBlur: _propTypes[\"default\"].func,\n  isFocused: _propTypes[\"default\"].bool,\n  showKeyboardShortcuts: _propTypes[\"default\"].bool,\n  onTab: _propTypes[\"default\"].func,\n  onShiftTab: _propTypes[\"default\"].func,\n  // i18n\n  monthFormat: _propTypes[\"default\"].string,\n  weekDayFormat: _propTypes[\"default\"].string,\n  phrases: _propTypes[\"default\"].shape((0, _getPhrasePropTypes[\"default\"])(_defaultPhrases.DayPickerPhrases)),\n  dayAriaLabelFormat: _propTypes[\"default\"].string,\n  isRTL: _propTypes[\"default\"].bool\n}) : {};\nvar defaultProps = {\n  date: undefined,\n  // TODO: use null\n  onDateChange: function () {\n    function onDateChange() {}\n\n    return onDateChange;\n  }(),\n  focused: false,\n  onFocusChange: function () {\n    function onFocusChange() {}\n\n    return onFocusChange;\n  }(),\n  onClose: function () {\n    function onClose() {}\n\n    return onClose;\n  }(),\n  keepOpenOnDateSelect: false,\n  isOutsideRange: function () {\n    function isOutsideRange() {}\n\n    return isOutsideRange;\n  }(),\n  isDayBlocked: function () {\n    function isDayBlocked() {}\n\n    return isDayBlocked;\n  }(),\n  isDayHighlighted: function () {\n    function isDayHighlighted() {}\n\n    return isDayHighlighted;\n  }(),\n  // DayPicker props\n  renderMonthText: null,\n  enableOutsideDays: false,\n  numberOfMonths: 1,\n  orientation: _constants.HORIZONTAL_ORIENTATION,\n  withPortal: false,\n  hideKeyboardShortcutsPanel: false,\n  initialVisibleMonth: null,\n  firstDayOfWeek: null,\n  daySize: _constants.DAY_SIZE,\n  verticalHeight: null,\n  noBorder: false,\n  verticalBorderSpacing: undefined,\n  transitionDuration: undefined,\n  horizontalMonthPadding: 13,\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick: function () {\n    function onPrevMonthClick() {}\n\n    return onPrevMonthClick;\n  }(),\n  onNextMonthClick: function () {\n    function onNextMonthClick() {}\n\n    return onNextMonthClick;\n  }(),\n  onOutsideClick: function () {\n    function onOutsideClick() {}\n\n    return onOutsideClick;\n  }(),\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  renderCalendarInfo: null,\n  renderMonthElement: null,\n  calendarInfoPosition: _constants.INFO_POSITION_BOTTOM,\n  // accessibility\n  onBlur: function () {\n    function onBlur() {}\n\n    return onBlur;\n  }(),\n  isFocused: false,\n  showKeyboardShortcuts: false,\n  onTab: function () {\n    function onTab() {}\n\n    return onTab;\n  }(),\n  onShiftTab: function () {\n    function onShiftTab() {}\n\n    return onShiftTab;\n  }(),\n  // i18n\n  monthFormat: 'MMMM YYYY',\n  weekDayFormat: 'dd',\n  phrases: _defaultPhrases.DayPickerPhrases,\n  dayAriaLabelFormat: undefined,\n  isRTL: false\n};\n\nvar DayPickerSingleDateController =\n/*#__PURE__*/\nfunction (_ref) {\n  _inherits(DayPickerSingleDateController, _ref);\n\n  _createClass(DayPickerSingleDateController, [{\n    key: !_react[\"default\"].PureComponent && \"shouldComponentUpdate\",\n    value: function () {\n      function value(nextProps, nextState) {\n        return (0, _reactAddonsShallowCompare[\"default\"])(this, nextProps, nextState);\n      }\n\n      return value;\n    }()\n  }]);\n\n  function DayPickerSingleDateController(props) {\n    var _this;\n\n    _classCallCheck(this, DayPickerSingleDateController);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DayPickerSingleDateController).call(this, props));\n    _this.isTouchDevice = false;\n    _this.today = (0, _moment[\"default\"])();\n    _this.modifiers = {\n      today: function () {\n        function today(day) {\n          return _this.isToday(day);\n        }\n\n        return today;\n      }(),\n      blocked: function () {\n        function blocked(day) {\n          return _this.isBlocked(day);\n        }\n\n        return blocked;\n      }(),\n      'blocked-calendar': function () {\n        function blockedCalendar(day) {\n          return props.isDayBlocked(day);\n        }\n\n        return blockedCalendar;\n      }(),\n      'blocked-out-of-range': function () {\n        function blockedOutOfRange(day) {\n          return props.isOutsideRange(day);\n        }\n\n        return blockedOutOfRange;\n      }(),\n      'highlighted-calendar': function () {\n        function highlightedCalendar(day) {\n          return props.isDayHighlighted(day);\n        }\n\n        return highlightedCalendar;\n      }(),\n      valid: function () {\n        function valid(day) {\n          return !_this.isBlocked(day);\n        }\n\n        return valid;\n      }(),\n      hovered: function () {\n        function hovered(day) {\n          return _this.isHovered(day);\n        }\n\n        return hovered;\n      }(),\n      selected: function () {\n        function selected(day) {\n          return _this.isSelected(day);\n        }\n\n        return selected;\n      }(),\n      'first-day-of-week': function () {\n        function firstDayOfWeek(day) {\n          return _this.isFirstDayOfWeek(day);\n        }\n\n        return firstDayOfWeek;\n      }(),\n      'last-day-of-week': function () {\n        function lastDayOfWeek(day) {\n          return _this.isLastDayOfWeek(day);\n        }\n\n        return lastDayOfWeek;\n      }()\n    };\n\n    var _this$getStateForNewM = _this.getStateForNewMonth(props),\n        currentMonth = _this$getStateForNewM.currentMonth,\n        visibleDays = _this$getStateForNewM.visibleDays;\n\n    _this.state = {\n      hoverDate: null,\n      currentMonth: currentMonth,\n      visibleDays: visibleDays\n    };\n    _this.onDayMouseEnter = _this.onDayMouseEnter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDayMouseLeave = _this.onDayMouseLeave.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDayClick = _this.onDayClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onPrevMonthClick = _this.onPrevMonthClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onNextMonthClick = _this.onNextMonthClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onMonthChange = _this.onMonthChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onYearChange = _this.onYearChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getFirstFocusableDay = _this.getFirstFocusableDay.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DayPickerSingleDateController, [{\n    key: \"componentDidMount\",\n    value: function () {\n      function componentDidMount() {\n        this.isTouchDevice = (0, _isTouchDevice[\"default\"])();\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function () {\n      function componentWillReceiveProps(nextProps) {\n        var _this2 = this;\n\n        var date = nextProps.date,\n            focused = nextProps.focused,\n            isOutsideRange = nextProps.isOutsideRange,\n            isDayBlocked = nextProps.isDayBlocked,\n            isDayHighlighted = nextProps.isDayHighlighted,\n            initialVisibleMonth = nextProps.initialVisibleMonth,\n            numberOfMonths = nextProps.numberOfMonths,\n            enableOutsideDays = nextProps.enableOutsideDays;\n        var _this$props = this.props,\n            prevIsOutsideRange = _this$props.isOutsideRange,\n            prevIsDayBlocked = _this$props.isDayBlocked,\n            prevIsDayHighlighted = _this$props.isDayHighlighted,\n            prevNumberOfMonths = _this$props.numberOfMonths,\n            prevEnableOutsideDays = _this$props.enableOutsideDays,\n            prevInitialVisibleMonth = _this$props.initialVisibleMonth,\n            prevFocused = _this$props.focused,\n            prevDate = _this$props.date;\n        var visibleDays = this.state.visibleDays;\n        var recomputeOutsideRange = false;\n        var recomputeDayBlocked = false;\n        var recomputeDayHighlighted = false;\n\n        if (isOutsideRange !== prevIsOutsideRange) {\n          this.modifiers['blocked-out-of-range'] = function (day) {\n            return isOutsideRange(day);\n          };\n\n          recomputeOutsideRange = true;\n        }\n\n        if (isDayBlocked !== prevIsDayBlocked) {\n          this.modifiers['blocked-calendar'] = function (day) {\n            return isDayBlocked(day);\n          };\n\n          recomputeDayBlocked = true;\n        }\n\n        if (isDayHighlighted !== prevIsDayHighlighted) {\n          this.modifiers['highlighted-calendar'] = function (day) {\n            return isDayHighlighted(day);\n          };\n\n          recomputeDayHighlighted = true;\n        }\n\n        var recomputePropModifiers = recomputeOutsideRange || recomputeDayBlocked || recomputeDayHighlighted;\n\n        if (numberOfMonths !== prevNumberOfMonths || enableOutsideDays !== prevEnableOutsideDays || initialVisibleMonth !== prevInitialVisibleMonth && !prevFocused && focused) {\n          var newMonthState = this.getStateForNewMonth(nextProps);\n          var currentMonth = newMonthState.currentMonth;\n          visibleDays = newMonthState.visibleDays;\n          this.setState({\n            currentMonth: currentMonth,\n            visibleDays: visibleDays\n          });\n        }\n\n        var didDateChange = date !== prevDate;\n        var didFocusChange = focused !== prevFocused;\n        var modifiers = {};\n\n        if (didDateChange) {\n          modifiers = this.deleteModifier(modifiers, prevDate, 'selected');\n          modifiers = this.addModifier(modifiers, date, 'selected');\n        }\n\n        if (didFocusChange || recomputePropModifiers) {\n          (0, _object[\"default\"])(visibleDays).forEach(function (days) {\n            Object.keys(days).forEach(function (day) {\n              var momentObj = (0, _moment[\"default\"])(day);\n\n              if (_this2.isBlocked(momentObj)) {\n                modifiers = _this2.addModifier(modifiers, momentObj, 'blocked');\n              } else {\n                modifiers = _this2.deleteModifier(modifiers, momentObj, 'blocked');\n              }\n\n              if (didFocusChange || recomputeOutsideRange) {\n                if (isOutsideRange(momentObj)) {\n                  modifiers = _this2.addModifier(modifiers, momentObj, 'blocked-out-of-range');\n                } else {\n                  modifiers = _this2.deleteModifier(modifiers, momentObj, 'blocked-out-of-range');\n                }\n              }\n\n              if (didFocusChange || recomputeDayBlocked) {\n                if (isDayBlocked(momentObj)) {\n                  modifiers = _this2.addModifier(modifiers, momentObj, 'blocked-calendar');\n                } else {\n                  modifiers = _this2.deleteModifier(modifiers, momentObj, 'blocked-calendar');\n                }\n              }\n\n              if (didFocusChange || recomputeDayHighlighted) {\n                if (isDayHighlighted(momentObj)) {\n                  modifiers = _this2.addModifier(modifiers, momentObj, 'highlighted-calendar');\n                } else {\n                  modifiers = _this2.deleteModifier(modifiers, momentObj, 'highlighted-calendar');\n                }\n              }\n            });\n          });\n        }\n\n        var today = (0, _moment[\"default\"])();\n\n        if (!(0, _isSameDay[\"default\"])(this.today, today)) {\n          modifiers = this.deleteModifier(modifiers, this.today, 'today');\n          modifiers = this.addModifier(modifiers, today, 'today');\n          this.today = today;\n        }\n\n        if (Object.keys(modifiers).length > 0) {\n          this.setState({\n            visibleDays: _objectSpread({}, visibleDays, modifiers)\n          });\n        }\n      }\n\n      return componentWillReceiveProps;\n    }()\n  }, {\n    key: \"componentWillUpdate\",\n    value: function () {\n      function componentWillUpdate() {\n        this.today = (0, _moment[\"default\"])();\n      }\n\n      return componentWillUpdate;\n    }()\n  }, {\n    key: \"onDayClick\",\n    value: function () {\n      function onDayClick(day, e) {\n        if (e) e.preventDefault();\n        if (this.isBlocked(day)) return;\n        var _this$props2 = this.props,\n            onDateChange = _this$props2.onDateChange,\n            keepOpenOnDateSelect = _this$props2.keepOpenOnDateSelect,\n            onFocusChange = _this$props2.onFocusChange,\n            onClose = _this$props2.onClose;\n        onDateChange(day);\n\n        if (!keepOpenOnDateSelect) {\n          onFocusChange({\n            focused: false\n          });\n          onClose({\n            date: day\n          });\n        }\n      }\n\n      return onDayClick;\n    }()\n  }, {\n    key: \"onDayMouseEnter\",\n    value: function () {\n      function onDayMouseEnter(day) {\n        if (this.isTouchDevice) return;\n        var _this$state = this.state,\n            hoverDate = _this$state.hoverDate,\n            visibleDays = _this$state.visibleDays;\n        var modifiers = this.deleteModifier({}, hoverDate, 'hovered');\n        modifiers = this.addModifier(modifiers, day, 'hovered');\n        this.setState({\n          hoverDate: day,\n          visibleDays: _objectSpread({}, visibleDays, modifiers)\n        });\n      }\n\n      return onDayMouseEnter;\n    }()\n  }, {\n    key: \"onDayMouseLeave\",\n    value: function () {\n      function onDayMouseLeave() {\n        var _this$state2 = this.state,\n            hoverDate = _this$state2.hoverDate,\n            visibleDays = _this$state2.visibleDays;\n        if (this.isTouchDevice || !hoverDate) return;\n        var modifiers = this.deleteModifier({}, hoverDate, 'hovered');\n        this.setState({\n          hoverDate: null,\n          visibleDays: _objectSpread({}, visibleDays, modifiers)\n        });\n      }\n\n      return onDayMouseLeave;\n    }()\n  }, {\n    key: \"onPrevMonthClick\",\n    value: function () {\n      function onPrevMonthClick() {\n        var _this$props3 = this.props,\n            onPrevMonthClick = _this$props3.onPrevMonthClick,\n            numberOfMonths = _this$props3.numberOfMonths,\n            enableOutsideDays = _this$props3.enableOutsideDays;\n        var _this$state3 = this.state,\n            currentMonth = _this$state3.currentMonth,\n            visibleDays = _this$state3.visibleDays;\n        var newVisibleDays = {};\n        Object.keys(visibleDays).sort().slice(0, numberOfMonths + 1).forEach(function (month) {\n          newVisibleDays[month] = visibleDays[month];\n        });\n        var prevMonth = currentMonth.clone().subtract(1, 'month');\n        var prevMonthVisibleDays = (0, _getVisibleDays[\"default\"])(prevMonth, 1, enableOutsideDays);\n        this.setState({\n          currentMonth: prevMonth,\n          visibleDays: _objectSpread({}, newVisibleDays, this.getModifiers(prevMonthVisibleDays))\n        }, function () {\n          onPrevMonthClick(prevMonth.clone());\n        });\n      }\n\n      return onPrevMonthClick;\n    }()\n  }, {\n    key: \"onNextMonthClick\",\n    value: function () {\n      function onNextMonthClick() {\n        var _this$props4 = this.props,\n            onNextMonthClick = _this$props4.onNextMonthClick,\n            numberOfMonths = _this$props4.numberOfMonths,\n            enableOutsideDays = _this$props4.enableOutsideDays;\n        var _this$state4 = this.state,\n            currentMonth = _this$state4.currentMonth,\n            visibleDays = _this$state4.visibleDays;\n        var newVisibleDays = {};\n        Object.keys(visibleDays).sort().slice(1).forEach(function (month) {\n          newVisibleDays[month] = visibleDays[month];\n        });\n        var nextMonth = currentMonth.clone().add(numberOfMonths, 'month');\n        var nextMonthVisibleDays = (0, _getVisibleDays[\"default\"])(nextMonth, 1, enableOutsideDays);\n        var newCurrentMonth = currentMonth.clone().add(1, 'month');\n        this.setState({\n          currentMonth: newCurrentMonth,\n          visibleDays: _objectSpread({}, newVisibleDays, this.getModifiers(nextMonthVisibleDays))\n        }, function () {\n          onNextMonthClick(newCurrentMonth.clone());\n        });\n      }\n\n      return onNextMonthClick;\n    }()\n  }, {\n    key: \"onMonthChange\",\n    value: function () {\n      function onMonthChange(newMonth) {\n        var _this$props5 = this.props,\n            numberOfMonths = _this$props5.numberOfMonths,\n            enableOutsideDays = _this$props5.enableOutsideDays,\n            orientation = _this$props5.orientation;\n        var withoutTransitionMonths = orientation === _constants.VERTICAL_SCROLLABLE;\n        var newVisibleDays = (0, _getVisibleDays[\"default\"])(newMonth, numberOfMonths, enableOutsideDays, withoutTransitionMonths);\n        this.setState({\n          currentMonth: newMonth.clone(),\n          visibleDays: this.getModifiers(newVisibleDays)\n        });\n      }\n\n      return onMonthChange;\n    }()\n  }, {\n    key: \"onYearChange\",\n    value: function () {\n      function onYearChange(newMonth) {\n        var _this$props6 = this.props,\n            numberOfMonths = _this$props6.numberOfMonths,\n            enableOutsideDays = _this$props6.enableOutsideDays,\n            orientation = _this$props6.orientation;\n        var withoutTransitionMonths = orientation === _constants.VERTICAL_SCROLLABLE;\n        var newVisibleDays = (0, _getVisibleDays[\"default\"])(newMonth, numberOfMonths, enableOutsideDays, withoutTransitionMonths);\n        this.setState({\n          currentMonth: newMonth.clone(),\n          visibleDays: this.getModifiers(newVisibleDays)\n        });\n      }\n\n      return onYearChange;\n    }()\n  }, {\n    key: \"getFirstFocusableDay\",\n    value: function () {\n      function getFirstFocusableDay(newMonth) {\n        var _this3 = this;\n\n        var _this$props7 = this.props,\n            date = _this$props7.date,\n            numberOfMonths = _this$props7.numberOfMonths;\n        var focusedDate = newMonth.clone().startOf('month');\n\n        if (date) {\n          focusedDate = date.clone();\n        }\n\n        if (this.isBlocked(focusedDate)) {\n          var days = [];\n          var lastVisibleDay = newMonth.clone().add(numberOfMonths - 1, 'months').endOf('month');\n          var currentDay = focusedDate.clone();\n\n          while (!(0, _isAfterDay[\"default\"])(currentDay, lastVisibleDay)) {\n            currentDay = currentDay.clone().add(1, 'day');\n            days.push(currentDay);\n          }\n\n          var viableDays = days.filter(function (day) {\n            return !_this3.isBlocked(day) && (0, _isAfterDay[\"default\"])(day, focusedDate);\n          });\n\n          if (viableDays.length > 0) {\n            var _viableDays = _slicedToArray(viableDays, 1);\n\n            focusedDate = _viableDays[0];\n          }\n        }\n\n        return focusedDate;\n      }\n\n      return getFirstFocusableDay;\n    }()\n  }, {\n    key: \"getModifiers\",\n    value: function () {\n      function getModifiers(visibleDays) {\n        var _this4 = this;\n\n        var modifiers = {};\n        Object.keys(visibleDays).forEach(function (month) {\n          modifiers[month] = {};\n          visibleDays[month].forEach(function (day) {\n            modifiers[month][(0, _toISODateString[\"default\"])(day)] = _this4.getModifiersForDay(day);\n          });\n        });\n        return modifiers;\n      }\n\n      return getModifiers;\n    }()\n  }, {\n    key: \"getModifiersForDay\",\n    value: function () {\n      function getModifiersForDay(day) {\n        var _this5 = this;\n\n        return new Set(Object.keys(this.modifiers).filter(function (modifier) {\n          return _this5.modifiers[modifier](day);\n        }));\n      }\n\n      return getModifiersForDay;\n    }()\n  }, {\n    key: \"getStateForNewMonth\",\n    value: function () {\n      function getStateForNewMonth(nextProps) {\n        var _this6 = this;\n\n        var initialVisibleMonth = nextProps.initialVisibleMonth,\n            date = nextProps.date,\n            numberOfMonths = nextProps.numberOfMonths,\n            enableOutsideDays = nextProps.enableOutsideDays;\n        var initialVisibleMonthThunk = initialVisibleMonth || (date ? function () {\n          return date;\n        } : function () {\n          return _this6.today;\n        });\n        var currentMonth = initialVisibleMonthThunk();\n        var visibleDays = this.getModifiers((0, _getVisibleDays[\"default\"])(currentMonth, numberOfMonths, enableOutsideDays));\n        return {\n          currentMonth: currentMonth,\n          visibleDays: visibleDays\n        };\n      }\n\n      return getStateForNewMonth;\n    }()\n  }, {\n    key: \"addModifier\",\n    value: function () {\n      function addModifier(updatedDays, day, modifier) {\n        var _this$props8 = this.props,\n            numberOfVisibleMonths = _this$props8.numberOfMonths,\n            enableOutsideDays = _this$props8.enableOutsideDays,\n            orientation = _this$props8.orientation;\n        var _this$state5 = this.state,\n            firstVisibleMonth = _this$state5.currentMonth,\n            visibleDays = _this$state5.visibleDays;\n        var currentMonth = firstVisibleMonth;\n        var numberOfMonths = numberOfVisibleMonths;\n\n        if (orientation === _constants.VERTICAL_SCROLLABLE) {\n          numberOfMonths = Object.keys(visibleDays).length;\n        } else {\n          currentMonth = currentMonth.clone().subtract(1, 'month');\n          numberOfMonths += 2;\n        }\n\n        if (!day || !(0, _isDayVisible[\"default\"])(day, currentMonth, numberOfMonths, enableOutsideDays)) {\n          return updatedDays;\n        }\n\n        var iso = (0, _toISODateString[\"default\"])(day);\n\n        var updatedDaysAfterAddition = _objectSpread({}, updatedDays);\n\n        if (enableOutsideDays) {\n          var monthsToUpdate = Object.keys(visibleDays).filter(function (monthKey) {\n            return Object.keys(visibleDays[monthKey]).indexOf(iso) > -1;\n          });\n          updatedDaysAfterAddition = monthsToUpdate.reduce(function (days, monthIso) {\n            var month = updatedDays[monthIso] || visibleDays[monthIso];\n            var modifiers = new Set(month[iso]);\n            modifiers.add(modifier);\n            return _objectSpread({}, days, _defineProperty({}, monthIso, _objectSpread({}, month, _defineProperty({}, iso, modifiers))));\n          }, updatedDaysAfterAddition);\n        } else {\n          var monthIso = (0, _toISOMonthString[\"default\"])(day);\n          var month = updatedDays[monthIso] || visibleDays[monthIso];\n          var modifiers = new Set(month[iso]);\n          modifiers.add(modifier);\n          updatedDaysAfterAddition = _objectSpread({}, updatedDaysAfterAddition, _defineProperty({}, monthIso, _objectSpread({}, month, _defineProperty({}, iso, modifiers))));\n        }\n\n        return updatedDaysAfterAddition;\n      }\n\n      return addModifier;\n    }()\n  }, {\n    key: \"deleteModifier\",\n    value: function () {\n      function deleteModifier(updatedDays, day, modifier) {\n        var _this$props9 = this.props,\n            numberOfVisibleMonths = _this$props9.numberOfMonths,\n            enableOutsideDays = _this$props9.enableOutsideDays,\n            orientation = _this$props9.orientation;\n        var _this$state6 = this.state,\n            firstVisibleMonth = _this$state6.currentMonth,\n            visibleDays = _this$state6.visibleDays;\n        var currentMonth = firstVisibleMonth;\n        var numberOfMonths = numberOfVisibleMonths;\n\n        if (orientation === _constants.VERTICAL_SCROLLABLE) {\n          numberOfMonths = Object.keys(visibleDays).length;\n        } else {\n          currentMonth = currentMonth.clone().subtract(1, 'month');\n          numberOfMonths += 2;\n        }\n\n        if (!day || !(0, _isDayVisible[\"default\"])(day, currentMonth, numberOfMonths, enableOutsideDays)) {\n          return updatedDays;\n        }\n\n        var iso = (0, _toISODateString[\"default\"])(day);\n\n        var updatedDaysAfterDeletion = _objectSpread({}, updatedDays);\n\n        if (enableOutsideDays) {\n          var monthsToUpdate = Object.keys(visibleDays).filter(function (monthKey) {\n            return Object.keys(visibleDays[monthKey]).indexOf(iso) > -1;\n          });\n          updatedDaysAfterDeletion = monthsToUpdate.reduce(function (days, monthIso) {\n            var month = updatedDays[monthIso] || visibleDays[monthIso];\n            var modifiers = new Set(month[iso]);\n            modifiers[\"delete\"](modifier);\n            return _objectSpread({}, days, _defineProperty({}, monthIso, _objectSpread({}, month, _defineProperty({}, iso, modifiers))));\n          }, updatedDaysAfterDeletion);\n        } else {\n          var monthIso = (0, _toISOMonthString[\"default\"])(day);\n          var month = updatedDays[monthIso] || visibleDays[monthIso];\n          var modifiers = new Set(month[iso]);\n          modifiers[\"delete\"](modifier);\n          updatedDaysAfterDeletion = _objectSpread({}, updatedDaysAfterDeletion, _defineProperty({}, monthIso, _objectSpread({}, month, _defineProperty({}, iso, modifiers))));\n        }\n\n        return updatedDaysAfterDeletion;\n      }\n\n      return deleteModifier;\n    }()\n  }, {\n    key: \"isBlocked\",\n    value: function () {\n      function isBlocked(day) {\n        var _this$props10 = this.props,\n            isDayBlocked = _this$props10.isDayBlocked,\n            isOutsideRange = _this$props10.isOutsideRange;\n        return isDayBlocked(day) || isOutsideRange(day);\n      }\n\n      return isBlocked;\n    }()\n  }, {\n    key: \"isHovered\",\n    value: function () {\n      function isHovered(day) {\n        var _ref2 = this.state || {},\n            hoverDate = _ref2.hoverDate;\n\n        return (0, _isSameDay[\"default\"])(day, hoverDate);\n      }\n\n      return isHovered;\n    }()\n  }, {\n    key: \"isSelected\",\n    value: function () {\n      function isSelected(day) {\n        var date = this.props.date;\n        return (0, _isSameDay[\"default\"])(day, date);\n      }\n\n      return isSelected;\n    }()\n  }, {\n    key: \"isToday\",\n    value: function () {\n      function isToday(day) {\n        return (0, _isSameDay[\"default\"])(day, this.today);\n      }\n\n      return isToday;\n    }()\n  }, {\n    key: \"isFirstDayOfWeek\",\n    value: function () {\n      function isFirstDayOfWeek(day) {\n        var firstDayOfWeek = this.props.firstDayOfWeek;\n        return day.day() === (firstDayOfWeek || _moment[\"default\"].localeData().firstDayOfWeek());\n      }\n\n      return isFirstDayOfWeek;\n    }()\n  }, {\n    key: \"isLastDayOfWeek\",\n    value: function () {\n      function isLastDayOfWeek(day) {\n        var firstDayOfWeek = this.props.firstDayOfWeek;\n        return day.day() === ((firstDayOfWeek || _moment[\"default\"].localeData().firstDayOfWeek()) + 6) % 7;\n      }\n\n      return isLastDayOfWeek;\n    }()\n  }, {\n    key: \"render\",\n    value: function () {\n      function render() {\n        var _this$props11 = this.props,\n            numberOfMonths = _this$props11.numberOfMonths,\n            orientation = _this$props11.orientation,\n            monthFormat = _this$props11.monthFormat,\n            renderMonthText = _this$props11.renderMonthText,\n            navPrev = _this$props11.navPrev,\n            navNext = _this$props11.navNext,\n            onOutsideClick = _this$props11.onOutsideClick,\n            onShiftTab = _this$props11.onShiftTab,\n            onTab = _this$props11.onTab,\n            withPortal = _this$props11.withPortal,\n            focused = _this$props11.focused,\n            enableOutsideDays = _this$props11.enableOutsideDays,\n            hideKeyboardShortcutsPanel = _this$props11.hideKeyboardShortcutsPanel,\n            daySize = _this$props11.daySize,\n            firstDayOfWeek = _this$props11.firstDayOfWeek,\n            renderCalendarDay = _this$props11.renderCalendarDay,\n            renderDayContents = _this$props11.renderDayContents,\n            renderCalendarInfo = _this$props11.renderCalendarInfo,\n            renderMonthElement = _this$props11.renderMonthElement,\n            calendarInfoPosition = _this$props11.calendarInfoPosition,\n            isFocused = _this$props11.isFocused,\n            isRTL = _this$props11.isRTL,\n            phrases = _this$props11.phrases,\n            dayAriaLabelFormat = _this$props11.dayAriaLabelFormat,\n            onBlur = _this$props11.onBlur,\n            showKeyboardShortcuts = _this$props11.showKeyboardShortcuts,\n            weekDayFormat = _this$props11.weekDayFormat,\n            verticalHeight = _this$props11.verticalHeight,\n            noBorder = _this$props11.noBorder,\n            transitionDuration = _this$props11.transitionDuration,\n            verticalBorderSpacing = _this$props11.verticalBorderSpacing,\n            horizontalMonthPadding = _this$props11.horizontalMonthPadding;\n        var _this$state7 = this.state,\n            currentMonth = _this$state7.currentMonth,\n            visibleDays = _this$state7.visibleDays;\n        return _react[\"default\"].createElement(_DayPicker[\"default\"], {\n          orientation: orientation,\n          enableOutsideDays: enableOutsideDays,\n          modifiers: visibleDays,\n          numberOfMonths: numberOfMonths,\n          onDayClick: this.onDayClick,\n          onDayMouseEnter: this.onDayMouseEnter,\n          onDayMouseLeave: this.onDayMouseLeave,\n          onPrevMonthClick: this.onPrevMonthClick,\n          onNextMonthClick: this.onNextMonthClick,\n          onMonthChange: this.onMonthChange,\n          onYearChange: this.onYearChange,\n          monthFormat: monthFormat,\n          withPortal: withPortal,\n          hidden: !focused,\n          hideKeyboardShortcutsPanel: hideKeyboardShortcutsPanel,\n          initialVisibleMonth: function () {\n            function initialVisibleMonth() {\n              return currentMonth;\n            }\n\n            return initialVisibleMonth;\n          }(),\n          firstDayOfWeek: firstDayOfWeek,\n          onOutsideClick: onOutsideClick,\n          navPrev: navPrev,\n          navNext: navNext,\n          renderMonthText: renderMonthText,\n          renderCalendarDay: renderCalendarDay,\n          renderDayContents: renderDayContents,\n          renderCalendarInfo: renderCalendarInfo,\n          renderMonthElement: renderMonthElement,\n          calendarInfoPosition: calendarInfoPosition,\n          isFocused: isFocused,\n          getFirstFocusableDay: this.getFirstFocusableDay,\n          onBlur: onBlur,\n          onTab: onTab,\n          onShiftTab: onShiftTab,\n          phrases: phrases,\n          daySize: daySize,\n          isRTL: isRTL,\n          showKeyboardShortcuts: showKeyboardShortcuts,\n          weekDayFormat: weekDayFormat,\n          dayAriaLabelFormat: dayAriaLabelFormat,\n          verticalHeight: verticalHeight,\n          noBorder: noBorder,\n          transitionDuration: transitionDuration,\n          verticalBorderSpacing: verticalBorderSpacing,\n          horizontalMonthPadding: horizontalMonthPadding\n        });\n      }\n\n      return render;\n    }()\n  }]);\n\n  return DayPickerSingleDateController;\n}(_react[\"default\"].PureComponent || _react[\"default\"].Component);\n\nexports[\"default\"] = DayPickerSingleDateController;\nDayPickerSingleDateController.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nDayPickerSingleDateController.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"script"}