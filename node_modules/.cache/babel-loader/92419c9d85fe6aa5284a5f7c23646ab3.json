{"ast":null,"code":"!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t(require(\"react\"), require(\"react-dom\")) : \"function\" == typeof define && define.amd ? define([\"react\", \"react-dom\"], t) : \"object\" == typeof exports ? exports.ReactDropzone = t(require(\"react\"), require(\"react-dom\")) : e.ReactDropzone = t(e.React, e.ReactDOM);\n}(\"undefined\" != typeof self ? self : this, function (e, t) {\n  return function (e) {\n    function t(i) {\n      if (n[i]) return n[i].exports;\n      var r = n[i] = {\n        i: i,\n        l: !1,\n        exports: {}\n      };\n      return e[i].call(r.exports, r, r.exports, t), r.l = !0, r.exports;\n    }\n\n    var n = {};\n    return t.m = e, t.c = n, t.d = function (e, n, i) {\n      t.o(e, n) || Object.defineProperty(e, n, {\n        configurable: !1,\n        enumerable: !0,\n        get: i\n      });\n    }, t.n = function (e) {\n      var n = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return t.d(n, \"a\", n), n;\n    }, t.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, t.p = \"\", t(t.s = 1);\n  }([function (t, n) {\n    t.exports = e;\n  }, function (e, t, n) {\n    \"use strict\";\n\n    function i(e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    }\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    }), t.DropzoneComponent = void 0;\n\n    var r = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var i = t[n];\n          i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);\n        }\n      }\n\n      return function (t, n, i) {\n        return n && e(t.prototype, n), i && e(t, i), t;\n      };\n    }(),\n        o = i(n(0)),\n        s = i(n(2)),\n        a = i(n(3)),\n        l = n(4),\n        u = null,\n        c = t.DropzoneComponent = function (e) {\n      function t(e) {\n        !function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t);\n\n        var n = function (e, t) {\n          if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n        }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));\n\n        return n.state = {\n          files: []\n        }, n;\n      }\n\n      return function (e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n      }(t, o.default.Component), r(t, [{\n        key: \"getDjsConfig\",\n        value: function value() {\n          var e = {\n            url: this.props.config.postUrl ? this.props.config.postUrl : null\n          };\n          return this.props.djsConfig ? (0, a.default)(!0, {}, e, this.props.djsConfig) : e;\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function value() {\n          var e = this.getDjsConfig();\n          (u = u || n(5)).autoDiscover = !1, this.props.config.postUrl || this.props.eventHandlers.drop || console.info('Neither postUrl nor a \"drop\" eventHandler specified, the React-Dropzone component might misbehave.');\n          var t = this.props.config.dropzoneSelector || s.default.findDOMNode(this);\n          this.dropzone = new u(t, e), this.setupEvents();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          var e = this;\n          if (this.dropzone) if (this.dropzone.getActiveFiles().length > 0) {\n            this.queueDestroy = !0;\n            var t = window.setInterval(function () {\n              return !1 === e.queueDestroy ? window.clearInterval(t) : 0 === e.dropzone.getActiveFiles().length ? (e.dropzone = e.destroy(e.dropzone), window.clearInterval(t)) : void 0;\n            }, 500);\n          } else this.dropzone = this.destroy(this.dropzone);\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function value() {\n          if (this.queueDestroy = !1, !this.dropzone) {\n            var e = this.props.config.dropzoneSelector || s.default.findDOMNode(this);\n            this.dropzone = new u(e, this.getDjsConfig());\n          }\n        }\n      }, {\n        key: \"componentWillUpdate\",\n        value: function value() {\n          var e,\n              t = void 0;\n          e = this.props.djsConfig ? this.props.djsConfig : {};\n\n          try {\n            t = this.props.config.postUrl ? {\n              url: this.props.config.postUrl\n            } : {};\n          } catch (e) {\n            t = {};\n          }\n\n          this.dropzone.options = (0, a.default)(!0, {}, this.dropzone.options, e, t);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var e = [],\n              t = this.state.files,\n              n = this.props.config,\n              i = this.props.className ? \"filepicker dropzone \" + this.props.className : \"filepicker dropzone\";\n          if (n.showFiletypeIcon && n.iconFiletypes && (!t || t.length < 1)) for (var r = 0; r < this.props.config.iconFiletypes.length; r += 1) {\n            e.push(o.default.createElement(l.Icon, {\n              filetype: n.iconFiletypes[r],\n              key: \"icon-component\" + r\n            }));\n          }\n          return !this.props.config.postUrl && this.props.action ? o.default.createElement(\"form\", {\n            action: this.props.action,\n            className: i\n          }, e, this.props.children) : o.default.createElement(\"div\", {\n            className: i\n          }, \" \", e, \" \", this.props.children, \" \");\n        }\n      }, {\n        key: \"setupEvents\",\n        value: function value() {\n          var e = this,\n              t = this.props.eventHandlers;\n\n          if (this.dropzone && t) {\n            for (var n in t) {\n              if (t.hasOwnProperty(n) && t[n]) if (\"[object Array]\" === Object.prototype.toString.call(t[n])) for (var i = 0; i < t[n].length; i += 1) {\n                \"init\" === n ? t[n][i](this.dropzone) : this.dropzone.on(n, t[n][i]);\n              } else \"init\" === n ? t[n](this.dropzone) : this.dropzone.on(n, t[n]);\n            }\n\n            this.dropzone.on(\"addedfile\", function (t) {\n              if (t) {\n                var n = e.state.files || [];\n                n.push(t), e.setState({\n                  files: n\n                });\n              }\n            }), this.dropzone.on(\"removedfile\", function (t) {\n              if (t) {\n                var n = e.state.files || [];\n                n.forEach(function (e, i) {\n                  e.name === t.name && e.size === t.size && n.splice(i, 1);\n                }), e.setState({\n                  files: n\n                });\n              }\n            });\n          }\n        }\n      }, {\n        key: \"destroy\",\n        value: function value(e) {\n          return e.off(), e.destroy();\n        }\n      }]), t;\n    }();\n\n    c.defaultProps = {\n      djsConfig: {},\n      config: {},\n      eventHandlers: {}\n    }, t.default = c;\n  }, function (e, n) {\n    e.exports = t;\n  }, function (e, t, n) {\n    \"use strict\";\n\n    var i = Object.prototype.hasOwnProperty,\n        r = Object.prototype.toString,\n        o = function o(e) {\n      return \"function\" == typeof Array.isArray ? Array.isArray(e) : \"[object Array]\" === r.call(e);\n    },\n        s = function s(e) {\n      if (!e || \"[object Object]\" !== r.call(e)) return !1;\n      var t,\n          n = i.call(e, \"constructor\"),\n          o = e.constructor && e.constructor.prototype && i.call(e.constructor.prototype, \"isPrototypeOf\");\n      if (e.constructor && !n && !o) return !1;\n\n      for (t in e) {\n        ;\n      }\n\n      return void 0 === t || i.call(e, t);\n    };\n\n    e.exports = function e() {\n      var t,\n          n,\n          i,\n          r,\n          a,\n          l,\n          u = arguments[0],\n          c = 1,\n          d = arguments.length,\n          p = !1;\n\n      for (\"boolean\" == typeof u && (p = u, u = arguments[1] || {}, c = 2), (null == u || \"object\" != typeof u && \"function\" != typeof u) && (u = {}); c < d; ++c) {\n        if (null != (t = arguments[c])) for (n in t) {\n          i = u[n], u !== (r = t[n]) && (p && r && (s(r) || (a = o(r))) ? (a ? (a = !1, l = i && o(i) ? i : []) : l = i && s(i) ? i : {}, u[n] = e(p, l, r)) : void 0 !== r && (u[n] = r));\n        }\n      }\n\n      return u;\n    };\n  }, function (e, t, n) {\n    \"use strict\";\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    }), t.Icon = void 0;\n    var i,\n        r = n(0),\n        o = (i = r) && i.__esModule ? i : {\n      default: i\n    };\n\n    t.Icon = function (e) {\n      return o.default.createElement(\"div\", {\n        \"data-filetype\": e.filetype,\n        className: \"filepicker-file-icon\"\n      });\n    };\n  }, function (e, t, n) {\n    \"use strict\";\n\n    (function (e) {\n      function t(e, t) {\n        if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n      }\n\n      function n(e, t) {\n        if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n      }\n\n      var i = function () {\n        function e(e, t) {\n          for (var n = 0; n < t.length; n++) {\n            var i = t[n];\n            i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);\n          }\n        }\n\n        return function (t, n, i) {\n          return n && e(t.prototype, n), i && e(t, i), t;\n        };\n      }(),\n          r = function () {\n        function e() {\n          n(this, e);\n        }\n\n        return i(e, [{\n          key: \"on\",\n          value: function value(e, t) {\n            return this._callbacks = this._callbacks || {}, this._callbacks[e] || (this._callbacks[e] = []), this._callbacks[e].push(t), this;\n          }\n        }, {\n          key: \"emit\",\n          value: function value(e) {\n            this._callbacks = this._callbacks || {};\n            var t = this._callbacks[e];\n\n            if (t) {\n              for (var n = arguments.length, i = Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++) {\n                i[r - 1] = arguments[r];\n              }\n\n              for (var o = 0, s = s = t; !(o >= s.length);) {\n                s[o++].apply(this, i);\n              }\n            }\n\n            return this;\n          }\n        }, {\n          key: \"off\",\n          value: function value(e, t) {\n            if (!this._callbacks || 0 === arguments.length) return this._callbacks = {}, this;\n            var n = this._callbacks[e];\n            if (!n) return this;\n            if (1 === arguments.length) return delete this._callbacks[e], this;\n\n            for (var i = 0; i < n.length; i++) {\n              if (n[i] === t) {\n                n.splice(i, 1);\n                break;\n              }\n            }\n\n            return this;\n          }\n        }]), e;\n      }(),\n          o = function (e) {\n        function o(e, i) {\n          n(this, o);\n          var r,\n              s = t(this, (o.__proto__ || Object.getPrototypeOf(o)).call(this)),\n              a = void 0;\n          if (s.element = e, s.version = o.version, s.defaultOptions.previewTemplate = s.defaultOptions.previewTemplate.replace(/\\n*/g, \"\"), s.clickableElements = [], s.listeners = [], s.files = [], \"string\" == typeof s.element && (s.element = document.querySelector(s.element)), !s.element || null == s.element.nodeType) throw new Error(\"Invalid dropzone element.\");\n          if (s.element.dropzone) throw new Error(\"Dropzone already attached.\");\n          o.instances.push(s), s.element.dropzone = s;\n          var l,\n              u = null != (r = o.optionsForElement(s.element)) ? r : {};\n          if (s.options = o.extend({}, s.defaultOptions, u, null != i ? i : {}), s.options.forceFallback || !o.isBrowserSupported()) return l = s.options.fallback.call(s), t(s, l);\n          if (null == s.options.url && (s.options.url = s.element.getAttribute(\"action\")), !s.options.url) throw new Error(\"No URL provided.\");\n          if (s.options.acceptedFiles && s.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n          if (s.options.uploadMultiple && s.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n          return s.options.acceptedMimeTypes && (s.options.acceptedFiles = s.options.acceptedMimeTypes, delete s.options.acceptedMimeTypes), null != s.options.renameFilename && (s.options.renameFile = function (e) {\n            return s.options.renameFilename.call(s, e.name, e);\n          }), s.options.method = s.options.method.toUpperCase(), (a = s.getExistingFallback()) && a.parentNode && a.parentNode.removeChild(a), !1 !== s.options.previewsContainer && (s.options.previewsContainer ? s.previewsContainer = o.getElement(s.options.previewsContainer, \"previewsContainer\") : s.previewsContainer = s.element), s.options.clickable && (!0 === s.options.clickable ? s.clickableElements = [s.element] : s.clickableElements = o.getElements(s.options.clickable, \"clickable\")), s.init(), s;\n        }\n\n        return function (e, t) {\n          if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n          e.prototype = Object.create(t && t.prototype, {\n            constructor: {\n              value: e,\n              enumerable: !1,\n              writable: !0,\n              configurable: !0\n            }\n          }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n        }(o, r), i(o, null, [{\n          key: \"initClass\",\n          value: function value() {\n            this.prototype.Emitter = r, this.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"], this.prototype.defaultOptions = {\n              url: null,\n              method: \"post\",\n              withCredentials: !1,\n              timeout: 3e4,\n              parallelUploads: 2,\n              uploadMultiple: !1,\n              chunking: !1,\n              forceChunking: !1,\n              chunkSize: 2e6,\n              parallelChunkUploads: !1,\n              retryChunks: !1,\n              retryChunksLimit: 3,\n              maxFilesize: 256,\n              paramName: \"file\",\n              createImageThumbnails: !0,\n              maxThumbnailFilesize: 10,\n              thumbnailWidth: 120,\n              thumbnailHeight: 120,\n              thumbnailMethod: \"crop\",\n              resizeWidth: null,\n              resizeHeight: null,\n              resizeMimeType: null,\n              resizeQuality: .8,\n              resizeMethod: \"contain\",\n              filesizeBase: 1e3,\n              maxFiles: null,\n              headers: null,\n              clickable: !0,\n              ignoreHiddenFiles: !0,\n              acceptedFiles: null,\n              acceptedMimeTypes: null,\n              autoProcessQueue: !0,\n              autoQueue: !0,\n              addRemoveLinks: !1,\n              previewsContainer: null,\n              hiddenInputContainer: \"body\",\n              capture: null,\n              renameFilename: null,\n              renameFile: null,\n              forceFallback: !1,\n              dictDefaultMessage: \"Drop files here to upload\",\n              dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n              dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n              dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n              dictInvalidFileType: \"You can't upload files of this type.\",\n              dictResponseError: \"Server responded with {{statusCode}} code.\",\n              dictCancelUpload: \"Cancel upload\",\n              dictUploadCanceled: \"Upload canceled.\",\n              dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n              dictRemoveFile: \"Remove file\",\n              dictRemoveFileConfirmation: null,\n              dictMaxFilesExceeded: \"You can not upload any more files.\",\n              dictFileSizeUnits: {\n                tb: \"TB\",\n                gb: \"GB\",\n                mb: \"MB\",\n                kb: \"KB\",\n                b: \"b\"\n              },\n              init: function init() {},\n              params: function params(e, t, n) {\n                if (n) return {\n                  dzuuid: n.file.upload.uuid,\n                  dzchunkindex: n.index,\n                  dztotalfilesize: n.file.size,\n                  dzchunksize: this.options.chunkSize,\n                  dztotalchunkcount: n.file.upload.totalChunkCount,\n                  dzchunkbyteoffset: n.index * this.options.chunkSize\n                };\n              },\n              accept: function accept(e, t) {\n                return t();\n              },\n              chunksUploaded: function chunksUploaded(e, t) {\n                t();\n              },\n              fallback: function fallback() {\n                var e = void 0;\n                this.element.className = this.element.className + \" dz-browser-not-supported\";\n\n                for (var t = 0, n = n = this.element.getElementsByTagName(\"div\"); !(t >= n.length);) {\n                  var i = n[t++];\n\n                  if (/(^| )dz-message($| )/.test(i.className)) {\n                    e = i, i.className = \"dz-message\";\n                    break;\n                  }\n                }\n\n                e || (e = o.createElement('<div class=\"dz-message\"><span></span></div>'), this.element.appendChild(e));\n                var r = e.getElementsByTagName(\"span\")[0];\n                return r && (null != r.textContent ? r.textContent = this.options.dictFallbackMessage : null != r.innerText && (r.innerText = this.options.dictFallbackMessage)), this.element.appendChild(this.getFallbackForm());\n              },\n              resize: function resize(e, t, n, i) {\n                var r = {\n                  srcX: 0,\n                  srcY: 0,\n                  srcWidth: e.width,\n                  srcHeight: e.height\n                },\n                    o = e.width / e.height;\n                null == t && null == n ? (t = r.srcWidth, n = r.srcHeight) : null == t ? t = n * o : null == n && (n = t / o);\n                var s = (t = Math.min(t, r.srcWidth)) / (n = Math.min(n, r.srcHeight));\n                if (r.srcWidth > t || r.srcHeight > n) if (\"crop\" === i) o > s ? (r.srcHeight = e.height, r.srcWidth = r.srcHeight * s) : (r.srcWidth = e.width, r.srcHeight = r.srcWidth / s);else {\n                  if (\"contain\" !== i) throw new Error(\"Unknown resizeMethod '\" + i + \"'\");\n                  o > s ? n = t / o : t = n * o;\n                }\n                return r.srcX = (e.width - r.srcWidth) / 2, r.srcY = (e.height - r.srcHeight) / 2, r.trgWidth = t, r.trgHeight = n, r;\n              },\n              transformFile: function transformFile(e, t) {\n                return (this.options.resizeWidth || this.options.resizeHeight) && e.type.match(/image.*/) ? this.resizeImage(e, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, t) : t(e);\n              },\n              previewTemplate: '<div class=\"dz-preview dz-file-preview\">\\n  <div class=\"dz-image\"><img data-dz-thumbnail /></div>\\n  <div class=\"dz-details\">\\n    <div class=\"dz-size\"><span data-dz-size></span></div>\\n    <div class=\"dz-filename\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\"dz-progress\"><span class=\"dz-upload\" data-dz-uploadprogress></span></div>\\n  <div class=\"dz-error-message\"><span data-dz-errormessage></span></div>\\n  <div class=\"dz-success-mark\">\\n    <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\\n        <path d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" id=\"Oval-2\" stroke-opacity=\"0.198794158\" stroke=\"#747474\" fill-opacity=\"0.816519475\" fill=\"#FFFFFF\" sketch:type=\"MSShapeGroup\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\"dz-error-mark\">\\n    <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\\n        <g id=\"Check-+-Oval-2\" sketch:type=\"MSLayerGroup\" stroke=\"#747474\" stroke-opacity=\"0.198794158\" fill=\"#FFFFFF\" fill-opacity=\"0.816519475\">\\n          <path d=\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" id=\"Oval-2\" sketch:type=\"MSShapeGroup\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>',\n              drop: function drop(e) {\n                return this.element.classList.remove(\"dz-drag-hover\");\n              },\n              dragstart: function dragstart(e) {},\n              dragend: function dragend(e) {\n                return this.element.classList.remove(\"dz-drag-hover\");\n              },\n              dragenter: function dragenter(e) {\n                return this.element.classList.add(\"dz-drag-hover\");\n              },\n              dragover: function dragover(e) {\n                return this.element.classList.add(\"dz-drag-hover\");\n              },\n              dragleave: function dragleave(e) {\n                return this.element.classList.remove(\"dz-drag-hover\");\n              },\n              paste: function paste(e) {},\n              reset: function reset() {\n                return this.element.classList.remove(\"dz-started\");\n              },\n              addedfile: function addedfile(e) {\n                var t = this;\n\n                if (this.element === this.previewsContainer && this.element.classList.add(\"dz-started\"), this.previewsContainer) {\n                  e.previewElement = o.createElement(this.options.previewTemplate.trim()), e.previewTemplate = e.previewElement, this.previewsContainer.appendChild(e.previewElement);\n\n                  for (var n = 0, i = i = e.previewElement.querySelectorAll(\"[data-dz-name]\"); !(n >= i.length);) {\n                    var r = i[n++];\n                    r.textContent = e.name;\n                  }\n\n                  for (var s = 0, a = a = e.previewElement.querySelectorAll(\"[data-dz-size]\"); !(s >= a.length);) {\n                    (r = a[s++]).innerHTML = this.filesize(e.size);\n                  }\n\n                  this.options.addRemoveLinks && (e._removeLink = o.createElement('<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>' + this.options.dictRemoveFile + \"</a>\"), e.previewElement.appendChild(e._removeLink));\n\n                  for (var l = function l(n) {\n                    return n.preventDefault(), n.stopPropagation(), e.status === o.UPLOADING ? o.confirm(t.options.dictCancelUploadConfirmation, function () {\n                      return t.removeFile(e);\n                    }) : t.options.dictRemoveFileConfirmation ? o.confirm(t.options.dictRemoveFileConfirmation, function () {\n                      return t.removeFile(e);\n                    }) : t.removeFile(e);\n                  }, u = 0, c = c = e.previewElement.querySelectorAll(\"[data-dz-remove]\"); !(u >= c.length);) {\n                    c[u++].addEventListener(\"click\", l);\n                  }\n                }\n              },\n              removedfile: function removedfile(e) {\n                return null != e.previewElement && null != e.previewElement.parentNode && e.previewElement.parentNode.removeChild(e.previewElement), this._updateMaxFilesReachedClass();\n              },\n              thumbnail: function thumbnail(e, t) {\n                if (e.previewElement) {\n                  e.previewElement.classList.remove(\"dz-file-preview\");\n\n                  for (var n = 0, i = i = e.previewElement.querySelectorAll(\"[data-dz-thumbnail]\"); !(n >= i.length);) {\n                    var r = i[n++];\n                    r.alt = e.name, r.src = t;\n                  }\n\n                  return setTimeout(function () {\n                    return e.previewElement.classList.add(\"dz-image-preview\");\n                  }, 1);\n                }\n              },\n              error: function error(e, t) {\n                if (e.previewElement) {\n                  e.previewElement.classList.add(\"dz-error\"), \"String\" != typeof t && t.error && (t = t.error);\n\n                  for (var n = 0, i = i = e.previewElement.querySelectorAll(\"[data-dz-errormessage]\"); !(n >= i.length);) {\n                    i[n++].textContent = t;\n                  }\n                }\n              },\n              errormultiple: function errormultiple() {},\n              processing: function processing(e) {\n                if (e.previewElement && (e.previewElement.classList.add(\"dz-processing\"), e._removeLink)) return e._removeLink.textContent = this.options.dictCancelUpload;\n              },\n              processingmultiple: function processingmultiple() {},\n              uploadprogress: function uploadprogress(e, t, n) {\n                if (e.previewElement) for (var i = 0, r = r = e.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"); !(i >= r.length);) {\n                  var o = r[i++];\n                  \"PROGRESS\" === o.nodeName ? o.value = t : o.style.width = t + \"%\";\n                }\n              },\n              totaluploadprogress: function totaluploadprogress() {},\n              sending: function sending() {},\n              sendingmultiple: function sendingmultiple() {},\n              success: function success(e) {\n                if (e.previewElement) return e.previewElement.classList.add(\"dz-success\");\n              },\n              successmultiple: function successmultiple() {},\n              canceled: function canceled(e) {\n                return this.emit(\"error\", e, this.options.dictUploadCanceled);\n              },\n              canceledmultiple: function canceledmultiple() {},\n              complete: function complete(e) {\n                if (e._removeLink && (e._removeLink.textContent = this.options.dictRemoveFile), e.previewElement) return e.previewElement.classList.add(\"dz-complete\");\n              },\n              completemultiple: function completemultiple() {},\n              maxfilesexceeded: function maxfilesexceeded() {},\n              maxfilesreached: function maxfilesreached() {},\n              queuecomplete: function queuecomplete() {},\n              addedfiles: function addedfiles() {}\n            }, this.prototype._thumbnailQueue = [], this.prototype._processingThumbnail = !1;\n          }\n        }, {\n          key: \"extend\",\n          value: function value(e) {\n            for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) {\n              n[i - 1] = arguments[i];\n            }\n\n            for (var r = 0, o = o = n; !(r >= o.length);) {\n              var s = o[r++];\n\n              for (var a in s) {\n                var l = s[a];\n                e[a] = l;\n              }\n            }\n\n            return e;\n          }\n        }]), i(o, [{\n          key: \"getAcceptedFiles\",\n          value: function value() {\n            return this.files.filter(function (e) {\n              return e.accepted;\n            }).map(function (e) {\n              return e;\n            });\n          }\n        }, {\n          key: \"getRejectedFiles\",\n          value: function value() {\n            return this.files.filter(function (e) {\n              return !e.accepted;\n            }).map(function (e) {\n              return e;\n            });\n          }\n        }, {\n          key: \"getFilesWithStatus\",\n          value: function value(e) {\n            return this.files.filter(function (t) {\n              return t.status === e;\n            }).map(function (e) {\n              return e;\n            });\n          }\n        }, {\n          key: \"getQueuedFiles\",\n          value: function value() {\n            return this.getFilesWithStatus(o.QUEUED);\n          }\n        }, {\n          key: \"getUploadingFiles\",\n          value: function value() {\n            return this.getFilesWithStatus(o.UPLOADING);\n          }\n        }, {\n          key: \"getAddedFiles\",\n          value: function value() {\n            return this.getFilesWithStatus(o.ADDED);\n          }\n        }, {\n          key: \"getActiveFiles\",\n          value: function value() {\n            return this.files.filter(function (e) {\n              return e.status === o.UPLOADING || e.status === o.QUEUED;\n            }).map(function (e) {\n              return e;\n            });\n          }\n        }, {\n          key: \"init\",\n          value: function value() {\n            var e = this;\n            \"form\" === this.element.tagName && this.element.setAttribute(\"enctype\", \"multipart/form-data\"), this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\") && this.element.appendChild(o.createElement('<div class=\"dz-default dz-message\"><span>' + this.options.dictDefaultMessage + \"</span></div>\")), this.clickableElements.length && function t() {\n              return e.hiddenFileInput && e.hiddenFileInput.parentNode.removeChild(e.hiddenFileInput), e.hiddenFileInput = document.createElement(\"input\"), e.hiddenFileInput.setAttribute(\"type\", \"file\"), (null === e.options.maxFiles || e.options.maxFiles > 1) && e.hiddenFileInput.setAttribute(\"multiple\", \"multiple\"), e.hiddenFileInput.className = \"dz-hidden-input\", null !== e.options.acceptedFiles && e.hiddenFileInput.setAttribute(\"accept\", e.options.acceptedFiles), null !== e.options.capture && e.hiddenFileInput.setAttribute(\"capture\", e.options.capture), e.hiddenFileInput.style.visibility = \"hidden\", e.hiddenFileInput.style.position = \"absolute\", e.hiddenFileInput.style.top = \"0\", e.hiddenFileInput.style.left = \"0\", e.hiddenFileInput.style.height = \"0\", e.hiddenFileInput.style.width = \"0\", document.querySelector(e.options.hiddenInputContainer).appendChild(e.hiddenFileInput), e.hiddenFileInput.addEventListener(\"change\", function () {\n                var n = e.hiddenFileInput.files;\n                if (n.length) for (var i = 0, r = r = n; !(i >= r.length);) {\n                  var o = r[i++];\n                  e.addFile(o);\n                }\n                return e.emit(\"addedfiles\", n), t();\n              });\n            }(), this.URL = null !== window.URL ? window.URL : window.webkitURL;\n\n            for (var t = 0, n = n = this.events; !(t >= n.length);) {\n              var i = n[t++];\n              this.on(i, this.options[i]);\n            }\n\n            this.on(\"uploadprogress\", function () {\n              return e.updateTotalUploadProgress();\n            }), this.on(\"removedfile\", function () {\n              return e.updateTotalUploadProgress();\n            }), this.on(\"canceled\", function (t) {\n              return e.emit(\"complete\", t);\n            }), this.on(\"complete\", function (t) {\n              if (0 === e.getAddedFiles().length && 0 === e.getUploadingFiles().length && 0 === e.getQueuedFiles().length) return setTimeout(function () {\n                return e.emit(\"queuecomplete\");\n              }, 0);\n            });\n\n            var r = function r(e) {\n              return e.stopPropagation(), e.preventDefault ? e.preventDefault() : e.returnValue = !1;\n            };\n\n            return this.listeners = [{\n              element: this.element,\n              events: {\n                dragstart: function dragstart(t) {\n                  return e.emit(\"dragstart\", t);\n                },\n                dragenter: function dragenter(t) {\n                  return r(t), e.emit(\"dragenter\", t);\n                },\n                dragover: function dragover(t) {\n                  var n = void 0;\n\n                  try {\n                    n = t.dataTransfer.effectAllowed;\n                  } catch (e) {}\n\n                  return t.dataTransfer.dropEffect = \"move\" === n || \"linkMove\" === n ? \"move\" : \"copy\", r(t), e.emit(\"dragover\", t);\n                },\n                dragleave: function dragleave(t) {\n                  return e.emit(\"dragleave\", t);\n                },\n                drop: function drop(t) {\n                  return r(t), e.drop(t);\n                },\n                dragend: function dragend(t) {\n                  return e.emit(\"dragend\", t);\n                }\n              }\n            }], this.clickableElements.forEach(function (t) {\n              return e.listeners.push({\n                element: t,\n                events: {\n                  click: function click(n) {\n                    return (t !== e.element || n.target === e.element || o.elementInside(n.target, e.element.querySelector(\".dz-message\"))) && e.hiddenFileInput.click(), !0;\n                  }\n                }\n              });\n            }), this.enable(), this.options.init.call(this);\n          }\n        }, {\n          key: \"destroy\",\n          value: function value() {\n            return this.disable(), this.removeAllFiles(!0), (null != this.hiddenFileInput ? this.hiddenFileInput.parentNode : void 0) && (this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput), this.hiddenFileInput = null), delete this.element.dropzone, o.instances.splice(o.instances.indexOf(this), 1);\n          }\n        }, {\n          key: \"updateTotalUploadProgress\",\n          value: function value() {\n            var e = void 0,\n                t = 0,\n                n = 0;\n\n            if (this.getActiveFiles().length) {\n              for (var i = 0, r = r = this.getActiveFiles(); !(i >= r.length);) {\n                var o = r[i++];\n                t += o.upload.bytesSent, n += o.upload.total;\n              }\n\n              e = 100 * t / n;\n            } else e = 100;\n\n            return this.emit(\"totaluploadprogress\", e, n, t);\n          }\n        }, {\n          key: \"_getParamName\",\n          value: function value(e) {\n            return \"function\" == typeof this.options.paramName ? this.options.paramName(e) : this.options.paramName + (this.options.uploadMultiple ? \"[\" + e + \"]\" : \"\");\n          }\n        }, {\n          key: \"_renameFile\",\n          value: function value(e) {\n            return \"function\" != typeof this.options.renameFile ? e.name : this.options.renameFile(e);\n          }\n        }, {\n          key: \"getFallbackForm\",\n          value: function value() {\n            var e,\n                t = void 0;\n            if (e = this.getExistingFallback()) return e;\n            var n = '<div class=\"dz-fallback\">';\n            this.options.dictFallbackText && (n += \"<p>\" + this.options.dictFallbackText + \"</p>\"), n += '<input type=\"file\" name=\"' + this._getParamName(0) + '\" ' + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + ' /><input type=\"submit\" value=\"Upload!\"></div>';\n            var i = o.createElement(n);\n            return \"FORM\" !== this.element.tagName ? (t = o.createElement('<form action=\"' + this.options.url + '\" enctype=\"multipart/form-data\" method=\"' + this.options.method + '\"></form>')).appendChild(i) : (this.element.setAttribute(\"enctype\", \"multipart/form-data\"), this.element.setAttribute(\"method\", this.options.method)), null != t ? t : i;\n          }\n        }, {\n          key: \"getExistingFallback\",\n          value: function value() {\n            for (var e = [\"div\", \"form\"], t = 0; t < e.length; t++) {\n              var n,\n                  i = e[t];\n              if (n = function (e) {\n                for (var t = 0, n = n = e; !(t >= n.length);) {\n                  var i = n[t++];\n                  if (/(^| )fallback($| )/.test(i.className)) return i;\n                }\n              }(this.element.getElementsByTagName(i))) return n;\n            }\n          }\n        }, {\n          key: \"setupEventListeners\",\n          value: function value() {\n            return this.listeners.map(function (e) {\n              return function () {\n                var t = [];\n\n                for (var n in e.events) {\n                  var i = e.events[n];\n                  t.push(e.element.addEventListener(n, i, !1));\n                }\n\n                return t;\n              }();\n            });\n          }\n        }, {\n          key: \"removeEventListeners\",\n          value: function value() {\n            return this.listeners.map(function (e) {\n              return function () {\n                var t = [];\n\n                for (var n in e.events) {\n                  var i = e.events[n];\n                  t.push(e.element.removeEventListener(n, i, !1));\n                }\n\n                return t;\n              }();\n            });\n          }\n        }, {\n          key: \"disable\",\n          value: function value() {\n            var e = this;\n            return this.clickableElements.forEach(function (e) {\n              return e.classList.remove(\"dz-clickable\");\n            }), this.removeEventListeners(), this.disabled = !0, this.files.map(function (t) {\n              return e.cancelUpload(t);\n            });\n          }\n        }, {\n          key: \"enable\",\n          value: function value() {\n            return delete this.disabled, this.clickableElements.forEach(function (e) {\n              return e.classList.add(\"dz-clickable\");\n            }), this.setupEventListeners();\n          }\n        }, {\n          key: \"filesize\",\n          value: function value(e) {\n            var t = 0,\n                n = \"b\";\n\n            if (e > 0) {\n              for (var i = [\"tb\", \"gb\", \"mb\", \"kb\", \"b\"], r = 0; r < i.length; r++) {\n                var o = i[r];\n\n                if (e >= Math.pow(this.options.filesizeBase, 4 - r) / 10) {\n                  t = e / Math.pow(this.options.filesizeBase, 4 - r), n = o;\n                  break;\n                }\n              }\n\n              t = Math.round(10 * t) / 10;\n            }\n\n            return \"<strong>\" + t + \"</strong> \" + this.options.dictFileSizeUnits[n];\n          }\n        }, {\n          key: \"_updateMaxFilesReachedClass\",\n          value: function value() {\n            return null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (this.getAcceptedFiles().length === this.options.maxFiles && this.emit(\"maxfilesreached\", this.files), this.element.classList.add(\"dz-max-files-reached\")) : this.element.classList.remove(\"dz-max-files-reached\");\n          }\n        }, {\n          key: \"drop\",\n          value: function value(e) {\n            if (e.dataTransfer) {\n              this.emit(\"drop\", e);\n\n              for (var t = [], n = 0; n < e.dataTransfer.files.length; n++) {\n                t[n] = e.dataTransfer.files[n];\n              }\n\n              if (this.emit(\"addedfiles\", t), t.length) {\n                var i = e.dataTransfer.items;\n                i && i.length && null != i[0].webkitGetAsEntry ? this._addFilesFromItems(i) : this.handleFiles(t);\n              }\n            }\n          }\n        }, {\n          key: \"paste\",\n          value: function value(e) {\n            if (null != (void 0 !== (t = null != e ? e.clipboardData : void 0) && null !== t ? function (e) {\n              return e.items;\n            }(t) : void 0)) {\n              var t;\n              this.emit(\"paste\", e);\n              var n = e.clipboardData.items;\n              return n.length ? this._addFilesFromItems(n) : void 0;\n            }\n          }\n        }, {\n          key: \"handleFiles\",\n          value: function value(e) {\n            for (var t = 0, n = n = e; !(t >= n.length);) {\n              var i = n[t++];\n              this.addFile(i);\n            }\n          }\n        }, {\n          key: \"_addFilesFromItems\",\n          value: function value(e) {\n            var t = this;\n            return function () {\n              for (var n = [], i = 0, r = r = e; !(i >= r.length);) {\n                var o,\n                    s = r[i++];\n                null != s.webkitGetAsEntry && (o = s.webkitGetAsEntry()) ? o.isFile ? n.push(t.addFile(s.getAsFile())) : o.isDirectory ? n.push(t._addFilesFromDirectory(o, o.name)) : n.push(void 0) : null == s.getAsFile || null != s.kind && \"file\" !== s.kind ? n.push(void 0) : n.push(t.addFile(s.getAsFile()));\n              }\n\n              return n;\n            }();\n          }\n        }, {\n          key: \"_addFilesFromDirectory\",\n          value: function value(e, t) {\n            var n = this,\n                i = e.createReader(),\n                r = function r(e) {\n              return t = console, n = \"log\", i = function i(t) {\n                return t.log(e);\n              }, void 0 !== t && null !== t && \"function\" == typeof t[n] ? i(t, n) : void 0;\n              var t, n, i;\n            };\n\n            return function e() {\n              return i.readEntries(function (i) {\n                if (i.length > 0) {\n                  for (var r = 0, o = o = i; !(r >= o.length);) {\n                    var s = o[r++];\n                    s.isFile ? s.file(function (e) {\n                      if (!n.options.ignoreHiddenFiles || \".\" !== e.name.substring(0, 1)) return e.fullPath = t + \"/\" + e.name, n.addFile(e);\n                    }) : s.isDirectory && n._addFilesFromDirectory(s, t + \"/\" + s.name);\n                  }\n\n                  e();\n                }\n\n                return null;\n              }, r);\n            }();\n          }\n        }, {\n          key: \"accept\",\n          value: function value(e, t) {\n            return e.size > 1024 * this.options.maxFilesize * 1024 ? t(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(e.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize)) : o.isValidFile(e, this.options.acceptedFiles) ? null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (t(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles)), this.emit(\"maxfilesexceeded\", e)) : this.options.accept.call(this, e, t) : t(this.options.dictInvalidFileType);\n          }\n        }, {\n          key: \"addFile\",\n          value: function value(e) {\n            var t = this;\n            return e.upload = {\n              uuid: o.uuidv4(),\n              progress: 0,\n              total: e.size,\n              bytesSent: 0,\n              filename: this._renameFile(e),\n              chunked: this.options.chunking && (this.options.forceChunking || e.size > this.options.chunkSize),\n              totalChunkCount: Math.ceil(e.size / this.options.chunkSize)\n            }, this.files.push(e), e.status = o.ADDED, this.emit(\"addedfile\", e), this._enqueueThumbnail(e), this.accept(e, function (n) {\n              return n ? (e.accepted = !1, t._errorProcessing([e], n)) : (e.accepted = !0, t.options.autoQueue && t.enqueueFile(e)), t._updateMaxFilesReachedClass();\n            });\n          }\n        }, {\n          key: \"enqueueFiles\",\n          value: function value(e) {\n            for (var t = 0, n = n = e; !(t >= n.length);) {\n              var i = n[t++];\n              this.enqueueFile(i);\n            }\n\n            return null;\n          }\n        }, {\n          key: \"enqueueFile\",\n          value: function value(e) {\n            var t = this;\n            if (e.status !== o.ADDED || !0 !== e.accepted) throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n            if (e.status = o.QUEUED, this.options.autoProcessQueue) return setTimeout(function () {\n              return t.processQueue();\n            }, 0);\n          }\n        }, {\n          key: \"_enqueueThumbnail\",\n          value: function value(e) {\n            var t = this;\n            if (this.options.createImageThumbnails && e.type.match(/image.*/) && e.size <= 1024 * this.options.maxThumbnailFilesize * 1024) return this._thumbnailQueue.push(e), setTimeout(function () {\n              return t._processThumbnailQueue();\n            }, 0);\n          }\n        }, {\n          key: \"_processThumbnailQueue\",\n          value: function value() {\n            var e = this;\n\n            if (!this._processingThumbnail && 0 !== this._thumbnailQueue.length) {\n              this._processingThumbnail = !0;\n\n              var t = this._thumbnailQueue.shift();\n\n              return this.createThumbnail(t, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, !0, function (n) {\n                return e.emit(\"thumbnail\", t, n), e._processingThumbnail = !1, e._processThumbnailQueue();\n              });\n            }\n          }\n        }, {\n          key: \"removeFile\",\n          value: function value(e) {\n            if (e.status === o.UPLOADING && this.cancelUpload(e), this.files = s(this.files, e), this.emit(\"removedfile\", e), 0 === this.files.length) return this.emit(\"reset\");\n          }\n        }, {\n          key: \"removeAllFiles\",\n          value: function value(e) {\n            null == e && (e = !1);\n\n            for (var t = 0, n = n = this.files.slice(); !(t >= n.length);) {\n              var i = n[t++];\n              (i.status !== o.UPLOADING || e) && this.removeFile(i);\n            }\n\n            return null;\n          }\n        }, {\n          key: \"resizeImage\",\n          value: function value(e, t, n, i, r) {\n            var s = this;\n            return this.createThumbnail(e, t, n, i, !1, function (t, n) {\n              if (null == n) return r(e);\n              var i = s.options.resizeMimeType;\n              null == i && (i = e.type);\n              var a = n.toDataURL(i, s.options.resizeQuality);\n              return \"image/jpeg\" !== i && \"image/jpg\" !== i || (a = u.restore(e.dataURL, a)), r(o.dataURItoBlob(a));\n            });\n          }\n        }, {\n          key: \"createThumbnail\",\n          value: function value(e, t, n, i, r, o) {\n            var s = this,\n                a = new FileReader();\n            return a.onload = function () {\n              if (e.dataURL = a.result, \"image/svg+xml\" !== e.type) return s.createThumbnailFromUrl(e, t, n, i, r, o);\n              null != o && o(a.result);\n            }, a.readAsDataURL(e);\n          }\n        }, {\n          key: \"createThumbnailFromUrl\",\n          value: function value(e, t, n, i, r, o, s) {\n            var a = this,\n                u = document.createElement(\"img\");\n            return s && (u.crossOrigin = s), u.onload = function () {\n              var s = function s(e) {\n                return e(1);\n              };\n\n              return \"undefined\" != typeof EXIF && null !== EXIF && r && (s = function s(e) {\n                return EXIF.getData(u, function () {\n                  return e(EXIF.getTag(this, \"Orientation\"));\n                });\n              }), s(function (r) {\n                e.width = u.width, e.height = u.height;\n                var s = a.options.resize.call(a, e, t, n, i),\n                    c = document.createElement(\"canvas\"),\n                    d = c.getContext(\"2d\");\n\n                switch (c.width = s.trgWidth, c.height = s.trgHeight, r > 4 && (c.width = s.trgHeight, c.height = s.trgWidth), r) {\n                  case 2:\n                    d.translate(c.width, 0), d.scale(-1, 1);\n                    break;\n\n                  case 3:\n                    d.translate(c.width, c.height), d.rotate(Math.PI);\n                    break;\n\n                  case 4:\n                    d.translate(0, c.height), d.scale(1, -1);\n                    break;\n\n                  case 5:\n                    d.rotate(.5 * Math.PI), d.scale(1, -1);\n                    break;\n\n                  case 6:\n                    d.rotate(.5 * Math.PI), d.translate(0, -c.height);\n                    break;\n\n                  case 7:\n                    d.rotate(.5 * Math.PI), d.translate(c.width, -c.height), d.scale(-1, 1);\n                    break;\n\n                  case 8:\n                    d.rotate(-.5 * Math.PI), d.translate(-c.width, 0);\n                }\n\n                l(d, u, null != s.srcX ? s.srcX : 0, null != s.srcY ? s.srcY : 0, s.srcWidth, s.srcHeight, null != s.trgX ? s.trgX : 0, null != s.trgY ? s.trgY : 0, s.trgWidth, s.trgHeight);\n                var p = c.toDataURL(\"image/png\");\n                if (null != o) return o(p, c);\n              });\n            }, null != o && (u.onerror = o), u.src = e.dataURL;\n          }\n        }, {\n          key: \"processQueue\",\n          value: function value() {\n            var e = this.options.parallelUploads,\n                t = this.getUploadingFiles().length,\n                n = t;\n\n            if (!(t >= e)) {\n              var i = this.getQueuedFiles();\n\n              if (i.length > 0) {\n                if (this.options.uploadMultiple) return this.processFiles(i.slice(0, e - t));\n\n                for (; n < e;) {\n                  if (!i.length) return;\n                  this.processFile(i.shift()), n++;\n                }\n              }\n            }\n          }\n        }, {\n          key: \"processFile\",\n          value: function value(e) {\n            return this.processFiles([e]);\n          }\n        }, {\n          key: \"processFiles\",\n          value: function value(e) {\n            for (var t = 0, n = n = e; !(t >= n.length);) {\n              var i = n[t++];\n              i.processing = !0, i.status = o.UPLOADING, this.emit(\"processing\", i);\n            }\n\n            return this.options.uploadMultiple && this.emit(\"processingmultiple\", e), this.uploadFiles(e);\n          }\n        }, {\n          key: \"_getFilesWithXhr\",\n          value: function value(e) {\n            return this.files.filter(function (t) {\n              return t.xhr === e;\n            }).map(function (e) {\n              return e;\n            });\n          }\n        }, {\n          key: \"cancelUpload\",\n          value: function value(e) {\n            if (e.status === o.UPLOADING) {\n              for (var t = this._getFilesWithXhr(e.xhr), n = 0, i = i = t; !(n >= i.length);) {\n                i[n++].status = o.CANCELED;\n              }\n\n              void 0 !== e.xhr && e.xhr.abort();\n\n              for (var r = 0, s = s = t; !(r >= s.length);) {\n                var a = s[r++];\n                this.emit(\"canceled\", a);\n              }\n\n              this.options.uploadMultiple && this.emit(\"canceledmultiple\", t);\n            } else e.status !== o.ADDED && e.status !== o.QUEUED || (e.status = o.CANCELED, this.emit(\"canceled\", e), this.options.uploadMultiple && this.emit(\"canceledmultiple\", [e]));\n\n            if (this.options.autoProcessQueue) return this.processQueue();\n          }\n        }, {\n          key: \"resolveOption\",\n          value: function value(e) {\n            if (\"function\" == typeof e) {\n              for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) {\n                n[i - 1] = arguments[i];\n              }\n\n              return e.apply(this, n);\n            }\n\n            return e;\n          }\n        }, {\n          key: \"uploadFile\",\n          value: function value(e) {\n            return this.uploadFiles([e]);\n          }\n        }, {\n          key: \"uploadFiles\",\n          value: function value(e) {\n            var t = this;\n\n            this._transformFiles(e, function (n) {\n              if (e[0].upload.chunked) {\n                var i = e[0],\n                    r = n[0];\n                i.upload.chunks = [];\n\n                var s = function s() {\n                  for (var n = 0; void 0 !== i.upload.chunks[n];) {\n                    n++;\n                  }\n\n                  if (!(n >= i.upload.totalChunkCount)) {\n                    var s = n * t.options.chunkSize,\n                        a = Math.min(s + t.options.chunkSize, i.size),\n                        l = {\n                      name: t._getParamName(0),\n                      data: r.webkitSlice ? r.webkitSlice(s, a) : r.slice(s, a),\n                      filename: i.upload.filename,\n                      chunkIndex: n\n                    };\n                    i.upload.chunks[n] = {\n                      file: i,\n                      index: n,\n                      dataBlock: l,\n                      status: o.UPLOADING,\n                      progress: 0,\n                      retries: 0\n                    }, t._uploadData(e, [l]);\n                  }\n                };\n\n                if (i.upload.finishedChunkUpload = function (n) {\n                  var r = !0;\n                  n.status = o.SUCCESS, n.dataBlock = null;\n\n                  for (var a = 0; a < i.upload.totalChunkCount; a++) {\n                    if (void 0 === i.upload.chunks[a]) return s();\n                    i.upload.chunks[a].status !== o.SUCCESS && (r = !1);\n                  }\n\n                  r && t.options.chunksUploaded(i, function () {\n                    t._finished(e, \"\", null);\n                  });\n                }, t.options.parallelChunkUploads) for (var a = 0; a < i.upload.totalChunkCount; a++) {\n                  s();\n                } else s();\n              } else {\n                for (var l = [], u = 0; u < e.length; u++) {\n                  l[u] = {\n                    name: t._getParamName(u),\n                    data: n[u],\n                    filename: e[u].upload.filename\n                  };\n                }\n\n                t._uploadData(e, l);\n              }\n            });\n          }\n        }, {\n          key: \"_getChunk\",\n          value: function value(e, t) {\n            for (var n = 0; n < e.upload.totalChunkCount; n++) {\n              if (void 0 !== e.upload.chunks[n] && e.upload.chunks[n].xhr === t) return e.upload.chunks[n];\n            }\n          }\n        }, {\n          key: \"_uploadData\",\n          value: function value(e, t) {\n            for (var n = this, i = new XMLHttpRequest(), r = 0, s = s = e; !(r >= s.length);) {\n              s[r++].xhr = i;\n            }\n\n            e[0].upload.chunked && (e[0].upload.chunks[t[0].chunkIndex].xhr = i);\n            var a = this.resolveOption(this.options.method, e),\n                l = this.resolveOption(this.options.url, e);\n            i.open(a, l, !0), i.timeout = this.resolveOption(this.options.timeout, e), i.withCredentials = !!this.options.withCredentials, i.onload = function (t) {\n              n._finishedUploading(e, i, t);\n            }, i.onerror = function () {\n              n._handleUploadError(e, i);\n            }, (null != i.upload ? i.upload : i).onprogress = function (t) {\n              return n._updateFilesUploadProgress(e, i, t);\n            };\n            var u = {\n              Accept: \"application/json\",\n              \"Cache-Control\": \"no-cache\",\n              \"X-Requested-With\": \"XMLHttpRequest\"\n            };\n\n            for (var c in this.options.headers && o.extend(u, this.options.headers), u) {\n              var d = u[c];\n              d && i.setRequestHeader(c, d);\n            }\n\n            var p = new FormData();\n\n            if (this.options.params) {\n              var h = this.options.params;\n\n              for (var f in \"function\" == typeof h && (h = h.call(this, e, i, e[0].upload.chunked ? this._getChunk(e[0], i) : null)), h) {\n                var m = h[f];\n                p.append(f, m);\n              }\n            }\n\n            for (var v = 0, g = g = e; !(v >= g.length);) {\n              var y = g[v++];\n              this.emit(\"sending\", y, i, p);\n            }\n\n            this.options.uploadMultiple && this.emit(\"sendingmultiple\", e, i, p), this._addFormElementData(p);\n\n            for (var k = 0; k < t.length; k++) {\n              var b = t[k];\n              p.append(b.name, b.data, b.filename);\n            }\n\n            this.submitRequest(i, p, e);\n          }\n        }, {\n          key: \"_transformFiles\",\n          value: function value(e, t) {\n            for (var n = this, i = [], r = 0, o = 0; o < e.length; o++) {\n              !function (o) {\n                n.options.transformFile.call(n, e[o], function (n) {\n                  i[o] = n, ++r === e.length && t(i);\n                });\n              }(o);\n            }\n          }\n        }, {\n          key: \"_addFormElementData\",\n          value: function value(e) {\n            if (\"FORM\" === this.element.tagName) for (var t = 0, n = n = this.element.querySelectorAll(\"input, textarea, select, button\"); !(t >= n.length);) {\n              var i = n[t++],\n                  r = i.getAttribute(\"name\"),\n                  o = i.getAttribute(\"type\");\n              if (o && (o = o.toLowerCase()), void 0 !== r && null !== r) if (\"SELECT\" === i.tagName && i.hasAttribute(\"multiple\")) for (var s = 0, a = a = i.options; !(s >= a.length);) {\n                var l = a[s++];\n                l.selected && e.append(r, l.value);\n              } else (!o || \"checkbox\" !== o && \"radio\" !== o || i.checked) && e.append(r, i.value);\n            }\n          }\n        }, {\n          key: \"_updateFilesUploadProgress\",\n          value: function value(e, t, n) {\n            var i = void 0;\n\n            if (void 0 !== n) {\n              if (i = 100 * n.loaded / n.total, e[0].upload.chunked) {\n                var r = e[0],\n                    o = this._getChunk(r, t);\n\n                o.progress = i, o.total = n.total, o.bytesSent = n.loaded, r.upload.progress = 0, r.upload.total = 0, r.upload.bytesSent = 0;\n\n                for (var s = 0; s < r.upload.totalChunkCount; s++) {\n                  void 0 !== r.upload.chunks[s] && void 0 !== r.upload.chunks[s].progress && (r.upload.progress += r.upload.chunks[s].progress, r.upload.total += r.upload.chunks[s].total, r.upload.bytesSent += r.upload.chunks[s].bytesSent);\n                }\n\n                r.upload.progress = r.upload.progress / r.upload.totalChunkCount;\n              } else for (var a = 0, l = l = e; !(a >= l.length);) {\n                var u = l[a++];\n                u.upload.progress = i, u.upload.total = n.total, u.upload.bytesSent = n.loaded;\n              }\n\n              for (var c = 0, d = d = e; !(c >= d.length);) {\n                var p = d[c++];\n                this.emit(\"uploadprogress\", p, p.upload.progress, p.upload.bytesSent);\n              }\n            } else {\n              var h = !0;\n              i = 100;\n\n              for (var f = 0, m = m = e; !(f >= m.length);) {\n                var v = m[f++];\n                100 === v.upload.progress && v.upload.bytesSent === v.upload.total || (h = !1), v.upload.progress = i, v.upload.bytesSent = v.upload.total;\n              }\n\n              if (h) return;\n\n              for (var g = 0, y = y = e; !(g >= y.length);) {\n                var k = y[g++];\n                this.emit(\"uploadprogress\", k, i, k.upload.bytesSent);\n              }\n            }\n          }\n        }, {\n          key: \"_finishedUploading\",\n          value: function value(e, t, n) {\n            var i = void 0;\n\n            if (e[0].status !== o.CANCELED && 4 === t.readyState) {\n              if (\"arraybuffer\" !== t.responseType && \"blob\" !== t.responseType && (i = t.responseText, t.getResponseHeader(\"content-type\") && ~t.getResponseHeader(\"content-type\").indexOf(\"application/json\"))) try {\n                i = JSON.parse(i);\n              } catch (e) {\n                n = e, i = \"Invalid JSON response from server.\";\n              }\n              this._updateFilesUploadProgress(e), 200 <= t.status && t.status < 300 ? e[0].upload.chunked ? e[0].upload.finishedChunkUpload(this._getChunk(e[0], t)) : this._finished(e, i, n) : this._handleUploadError(e, t, i);\n            }\n          }\n        }, {\n          key: \"_handleUploadError\",\n          value: function value(e, t, n) {\n            if (e[0].status !== o.CANCELED) {\n              if (e[0].upload.chunked && this.options.retryChunks) {\n                var i = this._getChunk(e[0], t);\n\n                if (i.retries++ < this.options.retryChunksLimit) return void this._uploadData(e, [i.dataBlock]);\n                console.warn(\"Retried this chunk too often. Giving up.\");\n              }\n\n              for (var r = 0, s = s = e; !(r >= s.length);) {\n                s[r++], this._errorProcessing(e, n || this.options.dictResponseError.replace(\"{{statusCode}}\", t.status), t);\n              }\n            }\n          }\n        }, {\n          key: \"submitRequest\",\n          value: function value(e, t, n) {\n            e.send(t);\n          }\n        }, {\n          key: \"_finished\",\n          value: function value(e, t, n) {\n            for (var i = 0, r = r = e; !(i >= r.length);) {\n              var s = r[i++];\n              s.status = o.SUCCESS, this.emit(\"success\", s, t, n), this.emit(\"complete\", s);\n            }\n\n            if (this.options.uploadMultiple && (this.emit(\"successmultiple\", e, t, n), this.emit(\"completemultiple\", e)), this.options.autoProcessQueue) return this.processQueue();\n          }\n        }, {\n          key: \"_errorProcessing\",\n          value: function value(e, t, n) {\n            for (var i = 0, r = r = e; !(i >= r.length);) {\n              var s = r[i++];\n              s.status = o.ERROR, this.emit(\"error\", s, t, n), this.emit(\"complete\", s);\n            }\n\n            if (this.options.uploadMultiple && (this.emit(\"errormultiple\", e, t, n), this.emit(\"completemultiple\", e)), this.options.autoProcessQueue) return this.processQueue();\n          }\n        }], [{\n          key: \"uuidv4\",\n          value: function value() {\n            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (e) {\n              var t = 16 * Math.random() | 0;\n              return (\"x\" === e ? t : 3 & t | 8).toString(16);\n            });\n          }\n        }]), o;\n      }();\n\n      o.initClass(), o.version = \"5.4.0\", o.options = {}, o.optionsForElement = function (e) {\n        return e.getAttribute(\"id\") ? o.options[a(e.getAttribute(\"id\"))] : void 0;\n      }, o.instances = [], o.forElement = function (e) {\n        if (\"string\" == typeof e && (e = document.querySelector(e)), null == (null != e ? e.dropzone : void 0)) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n        return e.dropzone;\n      }, o.autoDiscover = !0, o.discover = function () {\n        var e = void 0;\n        if (document.querySelectorAll) e = document.querySelectorAll(\".dropzone\");else {\n          e = [];\n\n          var t = function t(_t) {\n            return function () {\n              for (var n = [], i = 0, r = r = _t; !(i >= r.length);) {\n                var o = r[i++];\n                /(^| )dropzone($| )/.test(o.className) ? n.push(e.push(o)) : n.push(void 0);\n              }\n\n              return n;\n            }();\n          };\n\n          t(document.getElementsByTagName(\"div\")), t(document.getElementsByTagName(\"form\"));\n        }\n        return function () {\n          for (var t = [], n = 0, i = i = e; !(n >= i.length);) {\n            var r = i[n++];\n            !1 !== o.optionsForElement(r) ? t.push(new o(r)) : t.push(void 0);\n          }\n\n          return t;\n        }();\n      }, o.blacklistedBrowsers = [/opera.*(Macintosh|Windows Phone).*version\\/12/i], o.isBrowserSupported = function () {\n        var e = !0;\n        if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n          if (\"classList\" in document.createElement(\"a\")) for (var t = 0, n = n = o.blacklistedBrowsers; !(t >= n.length);) {\n            n[t++].test(navigator.userAgent) && (e = !1);\n          } else e = !1;\n        } else e = !1;\n        return e;\n      }, o.dataURItoBlob = function (e) {\n        for (var t = atob(e.split(\",\")[1]), n = e.split(\",\")[0].split(\":\")[1].split(\";\")[0], i = new ArrayBuffer(t.length), r = new Uint8Array(i), o = 0, s = t.length, a = 0 <= s; a ? o <= s : o >= s; a ? o++ : o--) {\n          r[o] = t.charCodeAt(o);\n        }\n\n        return new Blob([i], {\n          type: n\n        });\n      };\n\n      var s = function s(e, t) {\n        return e.filter(function (e) {\n          return e !== t;\n        }).map(function (e) {\n          return e;\n        });\n      },\n          a = function a(e) {\n        return e.replace(/[\\-_](\\w)/g, function (e) {\n          return e.charAt(1).toUpperCase();\n        });\n      };\n\n      o.createElement = function (e) {\n        var t = document.createElement(\"div\");\n        return t.innerHTML = e, t.childNodes[0];\n      }, o.elementInside = function (e, t) {\n        if (e === t) return !0;\n\n        for (; e = e.parentNode;) {\n          if (e === t) return !0;\n        }\n\n        return !1;\n      }, o.getElement = function (e, t) {\n        var n = void 0;\n        if (\"string\" == typeof e ? n = document.querySelector(e) : null != e.nodeType && (n = e), null == n) throw new Error(\"Invalid `\" + t + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n        return n;\n      }, o.getElements = function (e, t) {\n        var n = void 0,\n            i = void 0;\n\n        if (e instanceof Array) {\n          i = [];\n\n          try {\n            for (var r = 0, o = o = e; !(r >= o.length);) {\n              n = o[r++], i.push(this.getElement(n, t));\n            }\n          } catch (e) {\n            i = null;\n          }\n        } else if (\"string\" == typeof e) {\n          i = [];\n\n          for (var s = 0, a = a = document.querySelectorAll(e); !(s >= a.length);) {\n            n = a[s++], i.push(n);\n          }\n        } else null != e.nodeType && (i = [e]);\n\n        if (null == i || !i.length) throw new Error(\"Invalid `\" + t + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n        return i;\n      }, o.confirm = function (e, t, n) {\n        return window.confirm(e) ? t() : null != n ? n() : void 0;\n      }, o.isValidFile = function (e, t) {\n        if (!t) return !0;\n        t = t.split(\",\");\n\n        for (var n = e.type, i = n.replace(/\\/.*$/, \"\"), r = 0, o = o = t; !(r >= o.length);) {\n          var s = o[r++];\n\n          if (\".\" === (s = s.trim()).charAt(0)) {\n            if (-1 !== e.name.toLowerCase().indexOf(s.toLowerCase(), e.name.length - s.length)) return !0;\n          } else if (/\\/\\*$/.test(s)) {\n            if (i === s.replace(/\\/.*$/, \"\")) return !0;\n          } else if (n === s) return !0;\n        }\n\n        return !1;\n      }, \"undefined\" != typeof jQuery && null !== jQuery && (jQuery.fn.dropzone = function (e) {\n        return this.each(function () {\n          return new o(this, e);\n        });\n      }), void 0 !== e && null !== e ? e.exports = o : window.Dropzone = o, o.ADDED = \"added\", o.QUEUED = \"queued\", o.ACCEPTED = o.QUEUED, o.UPLOADING = \"uploading\", o.PROCESSING = o.UPLOADING, o.CANCELED = \"canceled\", o.ERROR = \"error\", o.SUCCESS = \"success\";\n\n      var l = function l(e, t, n, i, r, o, s, a, _l, u) {\n        var c = function (e) {\n          e.naturalWidth;\n          var t = e.naturalHeight,\n              n = document.createElement(\"canvas\");\n          n.width = 1, n.height = t;\n          var i = n.getContext(\"2d\");\n          i.drawImage(e, 0, 0);\n\n          for (var r = i.getImageData(1, 0, 1, t).data, o = 0, s = t, a = t; a > o;) {\n            0 === r[4 * (a - 1) + 3] ? s = a : o = a, a = s + o >> 1;\n          }\n\n          var l = a / t;\n          return 0 === l ? 1 : l;\n        }(t);\n\n        return e.drawImage(t, n, i, r, o, s, a, _l, u / c);\n      },\n          u = function () {\n        function e() {\n          n(this, e);\n        }\n\n        return i(e, null, [{\n          key: \"initClass\",\n          value: function value() {\n            this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n          }\n        }, {\n          key: \"encode64\",\n          value: function value(e) {\n            for (var t = \"\", n = void 0, i = void 0, r = \"\", o = void 0, s = void 0, a = void 0, l = \"\", u = 0; o = (n = e[u++]) >> 2, s = (3 & n) << 4 | (i = e[u++]) >> 4, a = (15 & i) << 2 | (r = e[u++]) >> 6, l = 63 & r, isNaN(i) ? a = l = 64 : isNaN(r) && (l = 64), t = t + this.KEY_STR.charAt(o) + this.KEY_STR.charAt(s) + this.KEY_STR.charAt(a) + this.KEY_STR.charAt(l), n = i = r = \"\", o = s = a = l = \"\", u < e.length;) {\n              ;\n            }\n\n            return t;\n          }\n        }, {\n          key: \"restore\",\n          value: function value(e, t) {\n            if (!e.match(\"data:image/jpeg;base64,\")) return t;\n            var n = this.decode64(e.replace(\"data:image/jpeg;base64,\", \"\")),\n                i = this.slice2Segments(n),\n                r = this.exifManipulation(t, i);\n            return \"data:image/jpeg;base64,\" + this.encode64(r);\n          }\n        }, {\n          key: \"exifManipulation\",\n          value: function value(e, t) {\n            var n = this.getExifArray(t),\n                i = this.insertExif(e, n);\n            return new Uint8Array(i);\n          }\n        }, {\n          key: \"getExifArray\",\n          value: function value(e) {\n            for (var t = void 0, n = 0; n < e.length;) {\n              if (255 === (t = e[n])[0] & 225 === t[1]) return t;\n              n++;\n            }\n\n            return [];\n          }\n        }, {\n          key: \"insertExif\",\n          value: function value(e, t) {\n            var n = e.replace(\"data:image/jpeg;base64,\", \"\"),\n                i = this.decode64(n),\n                r = i.indexOf(255, 3),\n                o = i.slice(0, r),\n                s = i.slice(r),\n                a = o;\n            return a = (a = a.concat(t)).concat(s);\n          }\n        }, {\n          key: \"slice2Segments\",\n          value: function value(e) {\n            for (var t = 0, n = []; !(255 === e[t] & 218 === e[t + 1]);) {\n              if (255 === e[t] & 216 === e[t + 1]) t += 2;else {\n                var i = t + (256 * e[t + 2] + e[t + 3]) + 2,\n                    r = e.slice(t, i);\n                n.push(r), t = i;\n              }\n              if (t > e.length) break;\n            }\n\n            return n;\n          }\n        }, {\n          key: \"decode64\",\n          value: function value(e) {\n            var t = void 0,\n                n = void 0,\n                i = \"\",\n                r = void 0,\n                o = void 0,\n                s = \"\",\n                a = 0,\n                l = [];\n\n            for (/[^A-Za-z0-9\\+\\/\\=]/g.exec(e) && console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\"), e = e.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); t = this.KEY_STR.indexOf(e.charAt(a++)) << 2 | (r = this.KEY_STR.indexOf(e.charAt(a++))) >> 4, n = (15 & r) << 4 | (o = this.KEY_STR.indexOf(e.charAt(a++))) >> 2, i = (3 & o) << 6 | (s = this.KEY_STR.indexOf(e.charAt(a++))), l.push(t), 64 !== o && l.push(n), 64 !== s && l.push(i), t = n = i = \"\", r = o = s = \"\", a < e.length;) {\n              ;\n            }\n\n            return l;\n          }\n        }]), e;\n      }();\n\n      u.initClass(), o._autoDiscoverFunction = function () {\n        if (o.autoDiscover) return o.discover();\n      }, function (e, t) {\n        var n = !1,\n            i = !0,\n            r = e.document,\n            o = r.documentElement,\n            s = r.addEventListener ? \"addEventListener\" : \"attachEvent\",\n            a = r.addEventListener ? \"removeEventListener\" : \"detachEvent\",\n            l = r.addEventListener ? \"\" : \"on\",\n            u = function i(o) {\n          if (\"readystatechange\" !== o.type || \"complete\" === r.readyState) return (\"load\" === o.type ? e : r)[a](l + o.type, i, !1), !n && (n = !0) ? t.call(e, o.type || o) : void 0;\n        };\n\n        if (\"complete\" !== r.readyState) {\n          if (r.createEventObject && o.doScroll) {\n            try {\n              i = !e.frameElement;\n            } catch (e) {}\n\n            i && function e() {\n              try {\n                o.doScroll(\"left\");\n              } catch (t) {\n                return void setTimeout(e, 50);\n              }\n\n              return u(\"poll\");\n            }();\n          }\n\n          r[s](l + \"DOMContentLoaded\", u, !1), r[s](l + \"readystatechange\", u, !1), e[s](l + \"load\", u, !1);\n        }\n      }(window, o._autoDiscoverFunction);\n    }).call(t, n(6)(e));\n  }, function (e, t) {\n    e.exports = function (e) {\n      return e.webpackPolyfill || (e.deprecate = function () {}, e.paths = [], e.children || (e.children = []), Object.defineProperty(e, \"loaded\", {\n        enumerable: !0,\n        get: function get() {\n          return e.l;\n        }\n      }), Object.defineProperty(e, \"id\", {\n        enumerable: !0,\n        get: function get() {\n          return e.i;\n        }\n      }), e.webpackPolyfill = 1), e;\n    };\n  }]);\n});","map":null,"metadata":{},"sourceType":"script"}