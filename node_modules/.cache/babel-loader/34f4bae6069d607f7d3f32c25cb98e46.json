{"ast":null,"code":"import _classCallCheck from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar ValidaCPF =\n/*#__PURE__*/\nfunction () {\n  function ValidaCPF() {\n    _classCallCheck(this, ValidaCPF);\n  }\n\n  _createClass(ValidaCPF, [{\n    key: \"ValidarCPF\",\n    value: function ValidarCPF(cpf) {\n      var strCPF = cpf.toString();\n      var Soma;\n      var Resto;\n      Soma = 0;\n      if (strCPF == \"00000000000\") return false;\n\n      for (var i = 1; i <= 9; i++) {\n        Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (11 - i);\n      }\n\n      Resto = Soma * 10 % 11;\n      if (Resto == 10 || Resto == 11) Resto = 0;\n      if (Resto != parseInt(strCPF.substring(9, 10))) return strCPF.text();\n      Soma = 0;\n\n      for (i = 1; i <= 10; i++) {\n        Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (12 - i);\n      }\n\n      Resto = Soma * 10 % 11;\n      if (Resto == 10 || Resto == 11) Resto = 0;\n      if (Resto != parseInt(strCPF.substring(10, 11))) return false;\n      return true;\n    }\n  }]);\n\n  return ValidaCPF;\n}();\n\nexport default ValidaCPF;","map":{"version":3,"sources":["/home/leonardo_freitas/Desktop/Programação/MetasCertas/src/helpers/Validacoes/ValidaCPF.js"],"names":["ValidaCPF","cpf","strCPF","toString","Soma","Resto","i","parseInt","substring","text"],"mappings":";;;IAAMA,S;;;;;;;;;+BAGSC,G,EAAI;AACb,UAAIC,MAAM,GAAGD,GAAG,CAACE,QAAJ,EAAb;AACA,UAAIC,IAAJ;AACA,UAAIC,KAAJ;AACAD,MAAAA,IAAI,GAAG,CAAP;AACF,UAAIF,MAAM,IAAI,aAAd,EAA6B,OAAO,KAAP;;AAE7B,WAAK,IAAII,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAE,CAAjB,EAAoBA,CAAC,EAArB;AAAyBF,QAAAA,IAAI,GAAGA,IAAI,GAAGG,QAAQ,CAACL,MAAM,CAACM,SAAP,CAAiBF,CAAC,GAAC,CAAnB,EAAsBA,CAAtB,CAAD,CAAR,IAAsC,KAAKA,CAA3C,CAAd;AAAzB;;AACAD,MAAAA,KAAK,GAAID,IAAI,GAAG,EAAR,GAAc,EAAtB;AAEE,UAAKC,KAAK,IAAI,EAAV,IAAkBA,KAAK,IAAI,EAA/B,EAAqCA,KAAK,GAAG,CAAR;AACrC,UAAIA,KAAK,IAAIE,QAAQ,CAACL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoB,EAApB,CAAD,CAArB,EAAiD,OAAON,MAAM,CAACO,IAAP,EAAP;AAEnDL,MAAAA,IAAI,GAAG,CAAP;;AACE,WAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,EAAjB,EAAqBA,CAAC,EAAtB;AAA0BF,QAAAA,IAAI,GAAGA,IAAI,GAAGG,QAAQ,CAACL,MAAM,CAACM,SAAP,CAAiBF,CAAC,GAAC,CAAnB,EAAsBA,CAAtB,CAAD,CAAR,IAAsC,KAAKA,CAA3C,CAAd;AAA1B;;AACAD,MAAAA,KAAK,GAAID,IAAI,GAAG,EAAR,GAAc,EAAtB;AAEA,UAAKC,KAAK,IAAI,EAAV,IAAkBA,KAAK,IAAI,EAA/B,EAAqCA,KAAK,GAAG,CAAR;AACrC,UAAIA,KAAK,IAAIE,QAAQ,CAACL,MAAM,CAACM,SAAP,CAAiB,EAAjB,EAAqB,EAArB,CAAD,CAArB,EAAmD,OAAO,KAAP;AACnD,aAAO,IAAP;AACD;;;;;;AACJ,eAAeR,SAAf","sourcesContent":["class ValidaCPF {\n   \n\n    ValidarCPF(cpf){\n      var strCPF = cpf.toString()\n      var Soma;\n      var Resto;\n      Soma = 0;\n    if (strCPF == \"00000000000\") return false;\n       \n    for (var i=1; i<=9; i++) Soma = Soma + parseInt(strCPF.substring(i-1, i)) * (11 - i);\n    Resto = (Soma * 10) % 11;\n     \n      if ((Resto == 10) || (Resto == 11))  Resto = 0;\n      if (Resto != parseInt(strCPF.substring(9, 10)) ) return strCPF.text();\n     \n    Soma = 0;\n      for (i = 1; i <= 10; i++) Soma = Soma + parseInt(strCPF.substring(i-1, i)) * (12 - i);\n      Resto = (Soma * 10) % 11;\n     \n      if ((Resto == 10) || (Resto == 11))  Resto = 0;\n      if (Resto != parseInt(strCPF.substring(10, 11) ) ) return false;\n      return true;\n    }\n}export default ValidaCPF;"]},"metadata":{},"sourceType":"module"}