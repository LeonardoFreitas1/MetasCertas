{"ast":null,"code":"import _toConsumableArray from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/leonardo_freitas/Desktop/Programa\\xE7\\xE3o/MetasCertas/src/containers/Calendar/Calendar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nimport ModalEvents from './modalEvents';\nimport notification from '../../components/notification';\nimport calendarActions from '../../redux/calendar/actions';\nimport { CalendarStyleWrapper } from './calendar.style';\nvar Localizer = BigCalendar.momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\nvar changeView = calendarActions.changeView,\n    changeEvents = calendarActions.changeEvents;\n\nvar mapToRBCFormat = function mapToRBCFormat(e) {\n  return Object.assign({}, e, {\n    start: new Date(e.start),\n    end: new Date(e.end)\n  });\n};\n\nvar getIndex = function getIndex(events, selectedEvent) {\n  return events.findIndex(function (event) {\n    return event.id === selectedEvent.id;\n  });\n};\n\nvar DndCalendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DndCalendar, _Component);\n\n  function DndCalendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DndCalendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DndCalendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      view: _this.props.view,\n      modalVisible: false,\n      selectedData: undefined\n    };\n\n    _this.onSelectEvent = function (selectedData) {\n      _this.setState({\n        modalVisible: 'update',\n        selectedData: selectedData\n      });\n    };\n\n    _this.onSelectSlot = function (selectedData) {\n      _this.setState({\n        modalVisible: 'new',\n        selectedData: selectedData\n      });\n    };\n\n    _this.onView = function (view) {\n      _this.props.changeView(view);\n    };\n\n    _this.moveEvent = function (_ref) {\n      var event = _ref.event,\n          start = _ref.start,\n          end = _ref.end,\n          droppedOnAllDaySlot = _ref.isAllDay;\n      var _this$props = _this.props,\n          events = _this$props.events,\n          changeEvents = _this$props.changeEvents;\n      var allDay = event.allDay;\n\n      if (!event.allDay && droppedOnAllDaySlot) {\n        allDay = true;\n      } else if (event.allDay && !droppedOnAllDaySlot) {\n        allDay = false;\n      }\n\n      var updatedEvent = _objectSpread({}, event, {\n        start: start,\n        end: end,\n        allDay: allDay\n      });\n\n      var idx = getIndex(events, updatedEvent);\n\n      var nextEvents = _toConsumableArray(events);\n\n      nextEvents.splice(idx, 1, updatedEvent);\n      changeEvents(nextEvents);\n      notification('success', 'Move event successfully', \"\".concat(event.title, \" was dropped onto \").concat(event.start));\n    };\n\n    _this.resizeEvent = function (_ref2) {\n      var event = _ref2.event,\n          start = _ref2.start,\n          end = _ref2.end;\n      var _this$props2 = _this.props,\n          events = _this$props2.events,\n          changeEvents = _this$props2.changeEvents;\n      var nextEvents = events.map(function (existingEvent) {\n        return existingEvent.id === event.id ? _objectSpread({}, existingEvent, {\n          start: start,\n          end: end\n        }) : existingEvent;\n      });\n      changeEvents(nextEvents);\n      notification('success', 'Resize event successfully', \"\".concat(event.title, \" was resized to \").concat(start, \"-\").concat(end));\n    };\n\n    _this.setModalData = function (type, selectedData) {\n      var changeEvents = _this.props.changeEvents;\n\n      var events = _toConsumableArray(_this.props.events);\n\n      var modalVisible = _this.state.modalVisible;\n\n      if (type === 'cancel') {\n        _this.setState({\n          modalVisible: false,\n          selectedData: undefined\n        });\n      } else if (type === 'delete') {\n        var idx = getIndex(events, selectedData);\n\n        if (idx > -1) {\n          events.splice(idx, 1);\n        }\n\n        changeEvents(events);\n\n        _this.setState({\n          modalVisible: false,\n          selectedData: undefined\n        });\n      } else if (type === 'updateValue') {\n        _this.setState({\n          selectedData: selectedData\n        });\n      } else {\n        if (modalVisible === 'new') {\n          events.push(selectedData);\n        } else {\n          var _idx = getIndex(events, selectedData);\n\n          if (_idx > -1) {\n            events[_idx] = selectedData;\n          }\n        }\n\n        changeEvents(events);\n\n        _this.setState({\n          modalVisible: false,\n          selectedData: undefined\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DndCalendar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CalendarStyleWrapper, {\n        className: \"isomorphicCalendarWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(ModalEvents, {\n        modalVisible: this.state.modalVisible,\n        selectedData: this.state.selectedData,\n        setModalData: this.setModalData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(DragAndDropCalendar, {\n        className: \"isomorphicCalendar\",\n        selectable: true,\n        localizer: Localizer,\n        events: this.props.events.map(mapToRBCFormat),\n        onEventDrop: this.moveEvent,\n        resizable: true,\n        onEventResize: this.resizeEvent,\n        onSelectEvent: this.onSelectEvent,\n        onSelectSlot: this.onSelectSlot,\n        onView: this.onView,\n        defaultView: BigCalendar.Views.MONTH,\n        defaultDate: new Date(),\n        step: 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DndCalendar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$Calendar = state.Calendar,\n      events = _state$Calendar.events,\n      view = _state$Calendar.view;\n  return {\n    events: events,\n    view: view\n  };\n}\n\nexport default connect(mapStateToProps, {\n  changeView: changeView,\n  changeEvents: changeEvents\n})(DndCalendar);","map":{"version":3,"sources":["/home/leonardo_freitas/Desktop/Programação/MetasCertas/src/containers/Calendar/Calendar.js"],"names":["React","Component","connect","moment","BigCalendar","withDragAndDrop","ModalEvents","notification","calendarActions","CalendarStyleWrapper","Localizer","momentLocalizer","DragAndDropCalendar","changeView","changeEvents","mapToRBCFormat","e","Object","assign","start","Date","end","getIndex","events","selectedEvent","findIndex","event","id","DndCalendar","state","view","props","modalVisible","selectedData","undefined","onSelectEvent","setState","onSelectSlot","onView","moveEvent","droppedOnAllDaySlot","isAllDay","allDay","updatedEvent","idx","nextEvents","splice","title","resizeEvent","map","existingEvent","setModalData","type","push","Views","MONTH","mapStateToProps","Calendar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nimport ModalEvents from './modalEvents';\nimport notification from '../../components/notification';\nimport calendarActions from '../../redux/calendar/actions';\n\nimport { CalendarStyleWrapper } from './calendar.style';\n\nconst Localizer = BigCalendar.momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar);\nconst { changeView, changeEvents } = calendarActions;\n\nconst mapToRBCFormat = e =>\n  Object.assign({}, e, {\n    start: new Date(e.start),\n    end: new Date(e.end),\n  });\n\nconst getIndex = (events, selectedEvent) =>\n  events.findIndex(event => event.id === selectedEvent.id);\n\nclass DndCalendar extends Component {\n  state = {\n    view: this.props.view,\n    modalVisible: false,\n    selectedData: undefined,\n  };\n\n  onSelectEvent = selectedData => {\n    this.setState({ modalVisible: 'update', selectedData });\n  };\n  onSelectSlot = selectedData => {\n    this.setState({ modalVisible: 'new', selectedData });\n  };\n\n  onView = view => {\n    this.props.changeView(view);\n  };\n  moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\n    const { events, changeEvents } = this.props;\n    let allDay = event.allDay;\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const updatedEvent = { ...event, start, end, allDay };\n    const idx = getIndex(events, updatedEvent);\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n    changeEvents(nextEvents);\n\n    notification(\n      'success',\n      'Move event successfully',\n      `${event.title} was dropped onto ${event.start}`\n    );\n  };\n\n  resizeEvent = ({ event, start, end }) => {\n    const { events, changeEvents } = this.props;\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n\n    changeEvents(nextEvents);\n\n    notification(\n      'success',\n      'Resize event successfully',\n      `${event.title} was resized to ${start}-${end}`\n    );\n  };\n\n  setModalData = (type, selectedData) => {\n    const { changeEvents } = this.props;\n    const events = [...this.props.events];\n    const { modalVisible } = this.state;\n    if (type === 'cancel') {\n      this.setState({\n        modalVisible: false,\n        selectedData: undefined,\n      });\n    } else if (type === 'delete') {\n      const idx = getIndex(events, selectedData);\n      if (idx > -1) {\n        events.splice(idx, 1);\n      }\n      changeEvents(events);\n      this.setState({\n        modalVisible: false,\n        selectedData: undefined,\n      });\n    } else if (type === 'updateValue') {\n      this.setState({ selectedData });\n    } else {\n      if (modalVisible === 'new') {\n        events.push(selectedData);\n      } else {\n        const idx = getIndex(events, selectedData);\n        if (idx > -1) {\n          events[idx] = selectedData;\n        }\n      }\n      changeEvents(events);\n      this.setState({\n        modalVisible: false,\n        selectedData: undefined,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CalendarStyleWrapper className=\"isomorphicCalendarWrapper\">\n        <ModalEvents\n          modalVisible={this.state.modalVisible}\n          selectedData={this.state.selectedData}\n          setModalData={this.setModalData}\n        />\n        <DragAndDropCalendar\n          className=\"isomorphicCalendar\"\n          selectable\n          localizer={Localizer}\n          events={this.props.events.map(mapToRBCFormat)}\n          onEventDrop={this.moveEvent}\n          resizable\n          onEventResize={this.resizeEvent}\n          onSelectEvent={this.onSelectEvent}\n          onSelectSlot={this.onSelectSlot}\n          onView={this.onView}\n          defaultView={BigCalendar.Views.MONTH}\n          defaultDate={new Date()}\n          step={60}\n        />\n      </CalendarStyleWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { events, view } = state.Calendar;\n  return { events, view };\n}\nexport default connect(\n  mapStateToProps,\n  { changeView, changeEvents }\n)(DndCalendar);\n"]},"metadata":{},"sourceType":"module"}