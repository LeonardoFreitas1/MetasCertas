{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactMotion = require(\"react-motion\");\n\nvar _reactHammerjs = require(\"react-hammerjs\");\n\nvar _reactHammerjs2 = _interopRequireDefault(_reactHammerjs);\n\nvar _isFunction = require(\"1-liners/isFunction\");\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _styles2 = require(\"./styles\");\n\nvar _styles3 = _interopRequireDefault(_styles2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar bool = _propTypes2.default.bool,\n    number = _propTypes2.default.number,\n    array = _propTypes2.default.array,\n    object = _propTypes2.default.object,\n    string = _propTypes2.default.string,\n    func = _propTypes2.default.func,\n    oneOfType = _propTypes2.default.oneOfType;\n\nvar Drawer = function (_React$Component) {\n  _inherits(Drawer, _React$Component);\n\n  function Drawer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Drawer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Drawer.__proto__ || Object.getPrototypeOf(Drawer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      currentState: \"CLOSED\"\n    }, _this.isState = function (s) {\n      return s === _this.state.currentState;\n    }, _this.isClosed = function () {\n      return _this.isState(\"CLOSED\");\n    }, _this.isOpen = function () {\n      return _this.isState(\"OPEN\");\n    }, _this.isOpening = function () {\n      return _this.isState(\"IS_OPENING\");\n    }, _this.isClosing = function () {\n      return _this.isState(\"IS_CLOSING\");\n    }, _this.onPress = function (e) {\n      if (_this.props.noTouchOpen) return;\n      e.preventDefault();\n\n      _this.peak();\n    }, _this.onPressUp = function (e) {\n      if (_this.props.noTouchClose) return;\n      e.preventDefault();\n\n      _this.close();\n    }, _this.onPan = function (e) {\n      if (_this.isClosed() && _this.props.noTouchOpen) return;\n      if (_this.isOpen() && _this.props.noTouchClose) return;\n      e.preventDefault();\n      var isFinal = e.isFinal,\n          pointers = e.pointers,\n          direction = e.direction,\n          deltaX = e.deltaX;\n      if (_this.inPanTolerance(deltaX)) return;\n\n      if (isFinal) {\n        if (_this.isOpening()) _this.open();else if (_this.isClosing()) _this.close();\n        return;\n      }\n\n      var currentState = _this.state.currentState;\n      var _this$props = _this.props,\n          right = _this$props.right,\n          peakingWidth = _this$props.peakingWidth,\n          handleWidth = _this$props.handleWidth;\n\n      var width = _this.calculateWidth();\n\n      var clientX = pointers[0].clientX;\n      var x = right ? document.body.clientWidth - clientX : clientX;\n      if (x + peakingWidth >= width) x = width - peakingWidth;\n\n      var closingOrOpening = _this.closingOrOpening(direction);\n\n      var nextState = {\n        PEAK: closingOrOpening,\n        IS_OPENING: closingOrOpening,\n        IS_CLOSING: closingOrOpening,\n        OPEN: \"IS_CLOSING\",\n        CLOSED: \"PEAK\"\n      };\n\n      _this.setState({\n        currentState: nextState[currentState],\n        x: _this.isClosed() ? peakingWidth : peakingWidth / 2 + x\n      });\n    }, _this.onOverlayTap = function (e) {\n      e.preventDefault();\n      if (_this.isOpen()) _this.close();\n    }, _this.calculateWidth = function () {\n      var width = _this.props.width;\n      return /\\D/.test(width) ? document.body.clientWidth * (width.match(/\\d*/) / 100) : width;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Drawer, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var open = this.props.open;\n      var nextOpen = nextProps.open;\n\n      if (nextOpen !== open) {\n        if (nextOpen) this.open();else this.close();\n      }\n    }\n  }, {\n    key: \"peak\",\n    value: function peak() {\n      var _props = this.props,\n          onChange = _props.onChange,\n          handleWidth = _props.handleWidth;\n      onChange(false);\n      return this.setState({\n        currentState: \"PEAK\",\n        x: handleWidth\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.props.onChange(false);\n      return this.setState({\n        currentState: \"CLOSED\",\n        x: 0\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _props2 = this.props,\n          onChange = _props2.onChange,\n          width = _props2.width;\n      onChange(true);\n      return this.setState({\n        currentState: \"OPEN\",\n        x: this.calculateWidth()\n      });\n    }\n  }, {\n    key: \"isClosingDirection\",\n    value: function isClosingDirection(direction) {\n      var right = this.props.right;\n      var isClosing = direction === 2;\n      if (right) return !isClosing;else return isClosing;\n    }\n  }, {\n    key: \"closingOrOpening\",\n    value: function closingOrOpening(direction) {\n      return this.isClosingDirection(direction) ? \"IS_CLOSING\" : \"IS_OPENING\";\n    }\n  }, {\n    key: \"inPanTolerance\",\n    value: function inPanTolerance(deltaX) {\n      var currentState = this.state.currentState;\n      var panTolerance = this.props.panTolerance;\n      return Math.abs(deltaX) <= panTolerance && currentState === \"OPEN\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          config = _props3.config,\n          drawerStyle = _props3.drawerStyle,\n          className = _props3.className,\n          overlayClassName = _props3.overlayClassName,\n          width = _props3.width,\n          children = _props3.children,\n          offset = _props3.offset;\n      var _state = this.state,\n          currentState = _state.currentState,\n          x = _state.x;\n      return _react2.default.createElement(_reactMotion.Motion, {\n        style: {\n          myProp: (0, _reactMotion.spring)(Math.min(x + offset || 0, this.calculateWidth()), config)\n        }\n      }, function (interpolated) {\n        var _styles = (0, _styles3.default)(interpolated.myProp, _this2.props),\n            drawer = _styles.drawer,\n            transform = _styles.transform,\n            overlay = _styles.overlay;\n\n        var computedStyle = _extends({}, drawer, drawerStyle);\n\n        if (interpolated.myProp > 0) computedStyle.display = \"block\";else computedStyle.display = \"none\";\n        return _react2.default.createElement(_reactHammerjs2.default, {\n          onPress: _this2.onPress,\n          onPressUp: _this2.onPressUp,\n          onPan: _this2.onPan,\n          direction: _reactHammerjs2.default.DIRECTION_HORIZONTAL\n        }, _react2.default.createElement(\"div\", {\n          style: transform\n        }, _react2.default.createElement(\"div\", {\n          className: className,\n          style: computedStyle\n        }, (0, _isFunction2.default)(children) ? children(interpolated.myProp) : children, !_this2.isClosed() && _react2.default.createElement(_reactHammerjs2.default, {\n          style: overlay,\n          className: overlayClassName,\n          onTap: _this2.onOverlayTap\n        }, _react2.default.createElement(\"span\", null)))));\n      });\n    }\n  }]);\n\n  return Drawer;\n}(_react2.default.Component);\n\nDrawer.propTypes = {\n  zIndex: number,\n  // z-index of the drawer default is 10000\n  noTouchOpen: bool,\n  // can a user pan to open\n  noTouchClose: bool,\n  // can a user pan to close\n  onChange: func,\n  // called when the drawer is open\n  drawerStyle: object,\n  // additional drawer styles\n  className: string,\n  // additional drawer className\n  overlayClassName: string,\n  // additional overlay className\n  config: _propTypes2.default.shape({\n    stiffness: number,\n    damping: number,\n    precision: number\n  }),\n  // configuration of the react-motion animation\n  open: bool,\n  // states if the drawer is open\n  width: oneOfType([number, string]),\n  // width of the drawer\n  height: oneOfType([number, string]),\n  // height of the drawer\n  handleWidth: number,\n  // width of the handle\n  peakingWidth: number,\n  // width that the drawer peaks on press\n  panTolerance: number,\n  // tolerance until the drawer starts to move\n  right: bool,\n  // drawer on the right side of the screen\n  overlayColor: string,\n  // color of the overlay\n  fadeOut: bool,\n  // fade out\n  offset: number // offset\n\n};\nDrawer.defaultProps = {\n  zIndex: 10000,\n  noTouchOpen: false,\n  noTouchClose: false,\n  onChange: function onChange() {},\n  overlayColor: \"rgba(0, 0, 0, 0.4)\",\n  config: {\n    stiffness: 350,\n    damping: 40\n  },\n  open: false,\n  width: 300,\n  height: \"100%\",\n  handleWidth: 20,\n  peakingWidth: 50,\n  panTolerance: 50,\n  right: false,\n  fadeOut: false,\n  offset: 0\n};\nexports.default = Drawer;","map":null,"metadata":{},"sourceType":"script"}