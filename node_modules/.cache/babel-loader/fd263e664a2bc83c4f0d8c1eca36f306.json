{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.mergeComponents = exports.nest = exports.dragAccessors = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _accessors = require(\"../../utils/accessors\");\n\nvar _react = require(\"react\");\n\nvar dragAccessors = {\n  start: (0, _accessors.wrapAccessor)(function (e) {\n    return e.start;\n  }),\n  end: (0, _accessors.wrapAccessor)(function (e) {\n    return e.end;\n  })\n};\nexports.dragAccessors = dragAccessors;\n\nvar nest = function nest() {\n  for (var _len = arguments.length, Components = new Array(_len), _key = 0; _key < _len; _key++) {\n    Components[_key] = arguments[_key];\n  }\n\n  var factories = Components.filter(Boolean).map(_react.createFactory);\n\n  var Nest = function Nest(_ref) {\n    var children = _ref.children,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_ref, [\"children\"]);\n    return factories.reduceRight(function (child, factory) {\n      return factory(props, child);\n    }, children);\n  };\n\n  return Nest;\n};\n\nexports.nest = nest;\n\nvar mergeComponents = function mergeComponents(components, addons) {\n  if (components === void 0) {\n    components = {};\n  }\n\n  var keys = Object.keys(addons);\n  var result = (0, _extends2.default)({}, components);\n  keys.forEach(function (key) {\n    result[key] = components[key] ? nest(components[key], addons[key]) : addons[key];\n  });\n  return result;\n};\n\nexports.mergeComponents = mergeComponents;","map":null,"metadata":{},"sourceType":"script"}