{"ast":null,"code":"(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(str, options) {\n    // make sure protocol is followed by two slashes\n    str = str.replace(/:\\//g, '://'); // remove consecutive slashes\n\n    str = str.replace(/([^:\\s])\\/+/g, '$1/'); // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    str = str.replace(/(\\?.+)\\?/g, '$1&');\n    return str;\n  }\n\n  return function () {\n    var input = arguments;\n    var options = {};\n\n    if (typeof arguments[0] === 'object') {\n      // new syntax with array and options\n      input = arguments[0];\n      options = arguments[1] || {};\n    }\n\n    var joined = [].slice.call(input, 0).join('/');\n    return normalize(joined, options);\n  };\n});","map":null,"metadata":{},"sourceType":"script"}