{"version":3,"file":"static/iframe.b97bbf61d5f8f8b02587.bundle.js","sources":["webpack:///./src/shapes/SingleDatePickerShape.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport { mutuallyExclusiveProps, nonNegativeInteger } from 'airbnb-prop-types';\n\nimport { SingleDatePickerPhrases } from '../defaultPhrases';\nimport getPhrasePropTypes from '../utils/getPhrasePropTypes';\n\nimport IconPositionShape from './IconPositionShape';\nimport OrientationShape from './OrientationShape';\nimport anchorDirectionShape from './AnchorDirectionShape';\nimport openDirectionShape from './OpenDirectionShape';\nimport DayOfWeekShape from './DayOfWeekShape';\nimport CalendarInfoPositionShape from './CalendarInfoPositionShape';\n\nexport default {\n  // required props for a functional interactive SingleDatePicker\n  date: momentPropTypes.momentObj,\n  onDateChange: PropTypes.func.isRequired,\n\n  focused: PropTypes.bool,\n  onFocusChange: PropTypes.func.isRequired,\n\n  // input related props\n  id: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  showClearDate: PropTypes.bool,\n  customCloseIcon: PropTypes.node,\n  showDefaultInputIcon: PropTypes.bool,\n  inputIconPosition: IconPositionShape,\n  customInputIcon: PropTypes.node,\n  noBorder: PropTypes.bool,\n  block: PropTypes.bool,\n  small: PropTypes.bool,\n  regular: PropTypes.bool,\n  verticalSpacing: nonNegativeInteger,\n  keepFocusOnInput: PropTypes.bool,\n\n  // calendar presentation and interaction related props\n  renderMonthText: mutuallyExclusiveProps(PropTypes.func, 'renderMonthText', 'renderMonthElement'),\n  renderMonthElement: mutuallyExclusiveProps(PropTypes.func, 'renderMonthText', 'renderMonthElement'),\n  orientation: OrientationShape,\n  anchorDirection: anchorDirectionShape,\n  openDirection: openDirectionShape,\n  horizontalMargin: PropTypes.number,\n  withPortal: PropTypes.bool,\n  withFullScreenPortal: PropTypes.bool,\n  appendToBody: PropTypes.bool,\n  disableScroll: PropTypes.bool,\n  initialVisibleMonth: PropTypes.func,\n  firstDayOfWeek: DayOfWeekShape,\n  numberOfMonths: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  reopenPickerOnClearDate: PropTypes.bool,\n  renderCalendarInfo: PropTypes.func,\n  calendarInfoPosition: CalendarInfoPositionShape,\n  hideKeyboardShortcutsPanel: PropTypes.bool,\n  daySize: nonNegativeInteger,\n  isRTL: PropTypes.bool,\n  verticalHeight: nonNegativeInteger,\n  transitionDuration: nonNegativeInteger,\n  horizontalMonthPadding: nonNegativeInteger,\n\n  // navigation related props\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n\n  // day presentation and interaction related props\n  renderCalendarDay: PropTypes.func,\n  renderDayContents: PropTypes.func,\n  enableOutsideDays: PropTypes.bool,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n\n  // internationalization props\n  displayFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  monthFormat: PropTypes.string,\n  weekDayFormat: PropTypes.string,\n  phrases: PropTypes.shape(getPhrasePropTypes(SingleDatePickerPhrases)),\n  dayAriaLabelFormat: PropTypes.string,\n};\n"],"mappings":"AAgBA","sourceRoot":""}